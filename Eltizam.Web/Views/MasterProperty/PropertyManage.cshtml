@model Eltizam.Business.Models.MasterPropertyModel;

@inject IConfiguration Configuration
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Master> MasterLocalizer
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Shared> SharedLocalizer
@{
    string jsVersion = @Configuration.GetSection("StaticJS")["version"];
}
    <!-- system user master -->
    <div class="flex">
        <div class="w-100 position-relative">
            <main class="plr-0">
                <div class="profileHead flex justify-between align-item-center cursor-pointer">
                    @if(Model.Id > 0)
                {
                    <h3 class="dashboardTitle">EDIT PROPERTY</h3>
                    <div class="hamburger">
                        <span onclick="propMaster()">Property Master</span>
                        <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                        <span>Edit Property</span>
                    </div>
                }
                else
                {
                    <h3 class="dashboardTitle">ADD PROPERTY</h3>
                    <div class="hamburger">
                        <span onclick="propMaster()">Property Master</span>
                        <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                        <span>Add Property</span>
                    </div>
                }
                </div>
                <div class="flex">
                    <div class="profileTabSection addProperty">
                        <div class="tab">
                            <button class="tablinks" onclick="profileTab(event, 'profile1')" id="defaultOpen">Property & Amenities Details</button>
                            <button class="tablinks" onclick="profileTab(event, 'profile2')">Location Details</button>
                        </div>
                        
                    <form asp-action="PropertyManage" method="POST" enctype="multipart/form-data">
                        <input type="hidden" id="hdnPropertyType" value="@(Model == null ? 0 : Model.PropertyTypeId)" />
                        <input type="hidden" id="hdnPropertySubType" value="@(Model == null ? 0 : Model.PropertySubTypeId)" />
                        <input type="hidden" id="hdnOwnershipType" value="@(Model == null ? 0 : Model.OwnershipTypeId)" />
                        <input type="hidden" id="hdnUnitType" value="@(Model == null ? 0 : Model.UnitType)" />
                        <input type="hidden" id="hdnFurnished" value="@(Model == null ? 0 : Model.Furnished)" />
                        <input type="hidden" id="hdnId" asp-for="Id" value="@(Model == null ? 0 : Model.Id)" />
                        <div id="profile1" class="tabcontent">
                            <h3 class="blueHeading">Property Details</h3>
                            <div class="inputSearchs">
                                    <div class="flex fourBox mb-28">
                                        <label for="">
                                            Property Name
                                        @Html.TextBoxFor(model => model.PropertyName, new { @class = "form-control",  @placeholder = @SharedLocalizer["Property Name"] })

                                    </label>
                                        <label for="">
                                            Property Type
                                        @Html.DropDownListFor(model => model.PropertyTypeId, new List<SelectListItem> { }, new { @class = "form-control", @onchange = "BindPropertySub(this.options[this.selectedIndex].value)"})

                                        </label>
                                        <label for="">
                                            Property SubType Name
                                        @Html.DropDownListFor(model => model.PropertySubTypeId, new List<SelectListItem> { }, new { @class = "form-control",/*  @disabled = "disabled" */})
                                    </label>
                                        <label for="">
                                            Type of Ownership
                                        @Html.DropDownListFor(model => model.OwnershipTypeId, new List<SelectListItem> { }, new { @class = "form-control"})
                                        </label>
                                    </div>
                                    <div class="flex fourBox mb-28">
                                        <label for="">
                                            Unit Type
                                        @Html.DropDownListFor(model => model.UnitType, new List<SelectListItem> { }, new { @class = "form-control"})
                                        </label>
                                        <label for="">
                                            Additional Units
                                        @Html.TextBoxFor(model => model.AdditionalUnits, new { @class = "form-control",  @placeholder = @SharedLocalizer["Additional Unit"] })

                                        </label>
                                        <label for="">
                                            Furnished
                                        @Html.DropDownListFor(model => model.Furnished, new List<SelectListItem> { }, new { @class = "form-control"})
                                        </label>
                                        <label for="">
                                            Purpose of Valuation
                                        @Html.TextBoxFor(model => model.ValuationPurpose, new { @class = "form-control",  @placeholder = @SharedLocalizer["Valuation Purpose"] })

                                        </label>
                                    </div>
                                    <div class="flex fourBox mb-28">
                                        <label for="">
                                            Built Up Area (Sq.Ft)
                                        @Html.TextBoxFor(model => model.BuildUpAreaSqFt, new { @class = "form-control",  @placeholder = @SharedLocalizer["Area in Sq Ft"] })

                                        </label>
                                        <label for="">
                                            Built up Area (Sq.Meter)
                                        @Html.TextBoxFor(model => model.BuildUpAreaSqMtr, new { @class = "form-control",  @placeholder = @SharedLocalizer["Area in Sq Mtr"] })

                                        </label>
                                        <label for="">
                                            Age of construction
                                        @Html.TextBoxFor(model => model.AgeOfConstruction, new { @class = "form-control",  @placeholder = @SharedLocalizer["Area in Sq Mtr"] })

                                        </label>
                                    @*<label for="IsActive" class="w-50">
                                        Status
                                        <input class='input-switch' type="checkbox" asp-for="IsActive" />
                                        <label class="label-switch" for="IsActive"></label>
                                        <span class="info-text"></span>
                                    </label>*@
                                    </div>
                                    <div class="flex threeBox mb-28">
                                        <label for="">
                                            Parking
                                        @Html.TextBoxFor(model => model.Parking, new { @class = "form-control",  @placeholder = @SharedLocalizer["Parking"] })

                                        </label>
                                        <label for="">
                                            Parking BAY Number
                                        @Html.TextBoxFor(model => model.ParkingBayNo, new { @class = "form-control",  @placeholder = @SharedLocalizer["Parking Bay No"] })

                                        </label>
                                        <label for="">
                                            Description
                                        @Html.TextBoxFor(model => model.Description, new { @class = "form-control",  @placeholder = @SharedLocalizer["Description"] })

                                        </label>
                                    </div>
                            </div>
                            <h3 class="blueHeading">Amenities</h3>
                            <div class="inputSearchs">
                                <div class="flex threeBox mb-28">
                                    @{
                                        if (Model.AmenityList.Count != 0)
                                        {
                                            int i = 1;
                                            @for (int z = 0; z < Model.AmenityList.Count; z++)
                                            {
                                                @if (i == 1)
                                                {
                                                    <div class="flex mb-28">
                                                        <label for="IsActive" class="w-50">
                                                            @Html.HiddenFor(m => m.AmenityList[z].Id)
                                                            @Html.HiddenFor(m => m.AmenityList[z].AmenityId)
                                                            @Html.HiddenFor(m => m.AmenityList[z].PropertyId)
                                                            @Html.CheckBoxFor(model => Model.AmenityList[z].IsActive, new { @class = "checkbox-checked", @checked = "checked" })
                                                            <span>@Model.AmenityList[z].AmenityName</span>
                                                        </label>
                                                    </div>
                                                    i++;
                                                }
                                                else
                                                {
                                                    <label for="IsActive" class="w-50">                                                
                                                        @Html.HiddenFor(m => m.AmenityList[z].Id)
                                                        @Html.HiddenFor(m => m.AmenityList[z].AmenityId)
                                                        @Html.HiddenFor(m => m.AmenityList[z].PropertyId)
                                                        @Html.CheckBoxFor(model => Model.AmenityList[z].IsActive, new { @class = "checkbox-checked", @checked = "checked" })
                                                        <span>@Model.AmenityList[z].AmenityName</span>
                                                    </label>
                                                    i++;
                                                }
                                                if (i > 3)
                                                {
                                                    i = 1;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <div class="flex mb-28">
                                                <label for="IsActive" class="w-100">
                                                NA
                                                </label>
                                            </div>
                                        }
                                    }
                                    </div>
                            </div>
                        </div>
                        <div id="profile2" class="tabcontent">
                            <h3 class="blueHeading">Location Details</h3>
                            <div class="inputSearchs">
                                <input type="hidden" id="hdnCountry" value="@(Model.PropertyDetail == null ? 0 : Model.PropertyDetail.CountryId)" />
                                <input type="hidden" id="hdnState" value="@(Model.PropertyDetail == null ? 0 : Model.PropertyDetail.StateId)" />
                                <input type="hidden" id="hdnCity" value="@(Model.PropertyDetail == null ? 0 : Model.PropertyDetail.CityId)" />
                                @Html.HiddenFor(model => model.PropertyDetail.Id)
                                    <div class="addMoreAddress">
                                        <div class="flex fourBox">
                                            <label for="address1">
                                                Country
                                            @Html.DropDownListFor(model => model.PropertyDetail.CountryId, new List<SelectListItem> { }, new {  @class = "form-control"})
                                        </label>
                                            <label for="address1">
                                                Region
                                            @Html.DropDownListFor(model => model.PropertyDetail.StateId, new List<SelectListItem> { }, new {  @class = "form-control"})
                                        </label>
                                            <label for="address1">
                                                City
                                            @Html.DropDownListFor(model => model.PropertyDetail.CityId, new List<SelectListItem> { }, new {  @class = "form-control"})
                                        </label>
                                            <label for="address1">
                                                Sector /Zone
                                            @Html.TextBoxFor(model => model.PropertyDetail.Zone, new { @class = "form-control",  @placeholder = @SharedLocalizer["Zone"] })

                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="address2">
                                                Building Projects
                                            @Html.TextBoxFor(model => model.PropertyDetail.BuildingProject, new { @class = "form-control",  @placeholder = @SharedLocalizer["Zone"] })

                                            </label>
                                            <div class="flex w-50 m-0">
                                                <label for="address2">
                                                Latitude
                                                @Html.TextBoxFor(model => model.PropertyDetail.Latitude, new { @class = "form-control",  @placeholder = @SharedLocalizer["Latitude"] })

                                                </label>
                                                <label for="address2">
                                                Longitude
                                                @Html.TextBoxFor(model => model.PropertyDetail.Longitude, new { @class = "form-control",  @placeholder = @SharedLocalizer["Longitude"] })

                                                </label>
                                            </div>
                                        </div>
                                        <div class="flex">
                                            <label for="">
                                                Address Line 1
                                            @Html.TextBoxFor(model => model.PropertyDetail.Address1, new { @class = "form-control",  @placeholder = @SharedLocalizer["Address1"] })

                                            </label>
                                            <label for="">
                                                Address Line 2
                                            @Html.TextBoxFor(model => model.PropertyDetail.Address2, new { @class = "form-control",  @placeholder = @SharedLocalizer["Address2"] })

                                            </label>
                                        </div>
                                        <div class="flex w-50">
                                            <label for="address2">
                                                Pin Code
                                            @Html.TextBoxFor(model => model.PropertyDetail.Pincode, new { @class = "form-control",  @placeholder = @SharedLocalizer["Pincode"] })

                                            </label>
                                            <label for="address2">
                                                Landmark
                                            @Html.TextBoxFor(model => model.PropertyDetail.Landmark, new { @class = "form-control",  @placeholder = @SharedLocalizer["Landmark"] })

                                            </label>
                                        </div>
                                    </div>
                            </div>
                        </div>
                        <div class="text-center buttonArea bodyContent plr-0">
                            <button type="button" class="lineBtn greyBtn">Cancel</button>
                            <button type="submit" class="blueBtn">Submit</button>
                        </div>
                    </form>
                    </div>
                </div>
            </main>
        </div>
    </div>
    <script>

        function profileTab(evt, cityName) {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            document.getElementById(cityName).style.display = "block";
            evt.currentTarget.className += " active";
        }
        document.getElementById("defaultOpen").click();

        function sideNavToggle() {
            var x = document.getElementById("sideNav");
            if (x.style.display === "none") {
                x.style.display = "block";
            } else {
                x.style.display = "none";
            }
        }

    $(document).ready(function () {
        if ($("#hdnId").val() != 0) {
            BindPropertySub($("#hdnPropertySubType").val());
        }
        BindProperty();
        BindOwnership();
        BindUnitType();
        BindFurnished();
        BindCountry();
        BindState();
        BindCity();
    });

    function BindProperty() {
        //alert("hello");
        debugger
        var PropertyList = "@Eltizam.Web.Helpers.APIURLHelper.GetPropertyTypeList";
        var Property = $("#PropertyTypeId");
        var _val = $('#hdnPropertyType').val();
        var _rpname = "propertyTypeId";

        //BindDropdowns(PropertyList, Property, _rpname, _val);
        $.ajax({
            type: "GET",
            url: $('#hdnBaseURL').val() + PropertyList,
            "datatype": "json",
            success: function (response) {
                debugger;
                Property.empty().append('<option selected="selected" value="0">Please select</option>');
                for (var i = 0; i < response.length; i++) {
                    Property.append($("<option></option>").val(response[i].id).html(response[i].propertyType));
                }
                if ($('#hdnPropertyType').val() != 0) {
                    Property.val($('#hdnPropertyType').val());
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
                $("#loader").hide();
            }
        });
    }

    function BindPropertySub(id) {
        debugger;
        //alert("hello");
        var PropertyByIdSubType = "@Eltizam.Web.Helpers.APIURLHelper.GetPropertyByPropertyTypeId";
        var PropertySubType = $("#PropertySubTypeId");
        var _val = $('#hdnPropertySubType').val();
        var _rpname = "propertyTypeId";

        //BindDropdowns(PropertyList, Property, _rpname, _val);
        $.ajax({
            type: "GET",
            url: $('#hdnBaseURL').val() + PropertyByIdSubType + '/' + id,
            "datatype": "json",
            success: function (response) {
                debugger;

                PropertySubType.empty().append($("<option></option>").val(response._object.id).html(response._object.propertySubType));
                if ($('#hdnPropertySubType').val() != 0) {
                    Property.val($('#hdnPropertySubType').val());
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
                $("#loader").hide();
            }
        });
    }

    function BindClient() {
        debugger;
        //alert("hello");
        var ClientTypeList = "@Eltizam.Web.Helpers.APIURLHelper.GetSearchClientType";
        var Client = $("#ClientTypeId");
        var _val = $('#hdnClientType').val();
        var _rpname = "clientTypeId";

        //BindDropdowns(PropertyList, Property, _rpname, _val);
        $.ajax({
            type: "GET",
            url: $('#hdnBaseURL').val() + ClientTypeList,
            "datatype": "json",
            success: function (response) {
                debugger;
                Client.empty().append('<option selected="selected" value="0">Please select</option>');
                for (var i = 0; i < response._object.length; i++) {
                    Client.append($("<option></option>").val(response._object[i].id).html(response._object[i].clientType));
                }
                if ($('#hdnClientType').val() != 0) {
                    Client.val($('#hdnClientType').val());
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
                $("#loader").hide();
            }
        });
    }

    function BindOwnership() {
        debugger;
        //alert("hello");
        var OwnershipTypeList = "@Eltizam.Web.Helpers.APIURLHelper.GetAllOwnershipType";
        var OwnershipType = $("#OwnershipTypeId");
        var _val = $('#hdnOwnershipType').val();
        var _rpname = "ownershipTypeId";

        //BindDropdowns(PropertyList, Property, _rpname, _val);
        $.ajax({
            type: "POST",
            url: $('#hdnBaseURL').val() + OwnershipTypeList,
            "datatype": "json",
            success: function (response) {
                debugger;
                OwnershipType.empty().append('<option selected="selected" value="0">Please select</option>');
                for (var i = 0; i < response.data.length; i++) {
                    OwnershipType.append($("<option></option>").val(response.data[i].id).html(response.data[i].ownershipType));
                }
                if ($('#hdnOwnershipType').val() != 0) {
                    OwnershipType.val($('#hdnOwnershipType').val());
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
                $("#loader").hide();
            }
        });
    }
    function BindUnitType() {
        var UnitType = $("#UnitType");
        UnitType.empty().append('<option selected="selected" value="0">Please select</option>');
        UnitType.append($("<option></option>").val('1BHK').html('1BHK'));
        UnitType.append($("<option></option>").val('2BHK').html('2BHK'));
        UnitType.append($("<option></option>").val('3BHK').html('3BHK'));
        if ($('#hdnUnitType').val() != 0) {
            UnitType.val($('#hdnUnitType').val());
        }
    }

    function BindFurnished() {
        var Furnished = $("#Furnished");
        Furnished.empty().append('<option selected="selected" value="0">Please select</option>');
        Furnished.append($("<option></option>").val(1).html('Yes'));
        Furnished.append($("<option></option>").val(0).html('No'));
        if ($('#hdnFurnished').val() != 0) {
            Furnished.val($('#hdnFurnished').val());
        }
    }


    function BindCountry() {

        var CountryList = "@Eltizam.Web.Helpers.APIURLHelper.GetCountryList";
        var Country = $("#PropertyDetail_CountryId");
        var _val = $('#hdnCountry').val();
        var _rpname = "countryName";
        BindDropdowns(CountryList, Country, _rpname, _val);
    }

    function BindState() {

        var StateList = "@Eltizam.Web.Helpers.APIURLHelper.GetStateList";
        var State = $("#PropertyDetail_StateId");
        var _val = $('#hdnState').val();
        var _rpname = "stateName";
        BindDropdowns(StateList, State, _rpname, _val);

    }

    function BindCity() {
        var CityList = "@Eltizam.Web.Helpers.APIURLHelper.GetCityList";
        var City = $("#PropertyDetail_CityId");
        var _val = $('#hdnCity').val();
        var _rpname = "cityName";
        BindDropdowns(CityList, City, _rpname, _val);
    }
        function resourceMaster() {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_Resource/resource-master.html'
        }
        function userMaster() {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_User/user-master.html'
        }
        function roleMaster() {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_Role/role-master.html'
        }

        function locationMaster() {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_Location/location-master.html'
        }
        function propTypeMaster() {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_Property_Type/property-type-master.html'
        }
        function Property() {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_Property/Property-master.html'
        }
        function department() {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_Department/department-master.html'
        }
        function propMaster() {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_Property/property-master.html'
        }
        function clientMaster() {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_Client/client-master.html'
        }
    </script>