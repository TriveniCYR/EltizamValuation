@using Microsoft.AspNetCore.Http
@model Eltizam.Business.Models.MasterPropertyModel;
@using Eltizam.Utility.Models

@inject IConfiguration Configuration
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Master> MasterLocalizer
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Shared> SharedLocalizer
@{
    string jsVersion = @Configuration.GetSection("StaticJS")["version"];
    var _header = " Property Master";
    var _md = Model.Id > 0 ? "Edit" : "Add";
    ViewData["Title"] = _md + _header;
    var objPermssion = (RolePermissionModel)ViewBag.Access;
    var isAdd = objPermssion.Add ? 1 : 0;
    var isEdit = objPermssion.Edit ? 1 : 0;
}
<!-- system user master -->
@* <div class="flex">
    <div class="w-100 position-relative"> *@
<main>

    <div class="whiteBoxShadow">
        <div class="heading position-relative flex justify-between">
            <h3 class="dashboardTitle">@_md@_header</h3>
            <div class="hamburger">
                <a class="greyBtn lineBtn formAbtn" asp-action="Properties">@_header</a>
                <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                <span>@_md</span>
            </div>
        </div>
        <div class="bodyContent">
            <div class="profileTabSection">
                <div class="tab">
                    <button class="tablinks" onclick="profileTab(event, 'profile1')" id="defaultOpen">Property & Amenities Details</button>
                    <button class="tablinks" onclick="profileTab(event, 'profile2')">Location Details</button>
                </div>

                <form asp-action="PropertyManage" method="POST" enctype="multipart/form-data">
                    <input type="hidden" id="isAddPerm" value="@isAdd" />
                    <input type="hidden" id="isEditPerm" value="@isEdit" />
                    <div class="danger" asp-validation-summary="ModelOnly"></div>
                    <input type="hidden" id="hdnPropertyType" value="@(Model == null ? 0 : Model.PropertyTypeId)" />
                    <input type="hidden" id="hdnPropertySubType" value="@(Model == null ? 0 : Model.PropertySubTypeId)" />
                    <input type="hidden" id="hdnOwnershipType" value="@(Model == null ? 0 : Model.OwnershipTypeId)" />
                    <input type="hidden" id="hdnUnitType" value="@(Model == null ? 0 : Model.UnitType)" />
                    <input type="hidden" id="hdnFurnished" value="@(Model == null ? 0 : Model.Furnished)" />
                    <input type="hidden" id="hdnId" asp-for="Id" value="@(Model == null ? 0 : Model.Id)" />
                    <div id="profile1" class="tabcontent">
                        @* <h3 class="blueHeading">Property Details</h3> *@
                        <div class="inputSearchs">

                            <div class="tabSection">
                                <div class="flex mb-28">
                                    <label for="">
                                        <p class="m-0">Property Name<span class="text-danger">*</span></p>
                                        @Html.TextBoxFor(model => model.PropertyName, new { @class = "form-control", @placeholder = @SharedLocalizer["Property Name"] })
                                        @Html.ValidationMessageFor(model => model.PropertyName, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="Status">
                                        Status
                                        <input type="checkbox" id="addLocation" class="input-switch" name="IsActive" asp-for="@Model.IsActive" required />
                                        <label class="label-switch" for="addLocation"></label>
                                        <span class="info-text" style="top:-20px;"></span>
                                    </label>

                                </div>
                                <div class="flex mb-28">
                                    <label for="">
                                        <p class="m-0">
                                            Property Type
                                            <span class="text-danger">*</span>
                                        </p>
                                        @Html.DropDownListFor(model => model.PropertyTypeId, new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown", @onchange = "BindPropertySub(this.options[this.selectedIndex].value)", @required = "required" })
                                        @Html.ValidationMessageFor(model => model.PropertyTypeId, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="">
                                        Property Sub Type
                                        @Html.DropDownListFor(model => model.PropertySubTypeId, new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown",/*  @disabled = "disabled" */})
                                    </label>
                                </div>
                                <div class="flex mb-28">
                                    <label for="">
                                        <p class="m-0">
                                            Ownership Type
                                            <span class="text-danger">*</span>
                                        </p>
                                        @Html.DropDownListFor(model => model.OwnershipTypeId, new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown" })
                                        @Html.ValidationMessageFor(model => model.OwnershipTypeId, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="">
                                        <p class="m-0">Unit Type<span class="text-danger">*</span></p>
                                        @Html.DropDownListFor(model => model.UnitType, new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown" })
                                        @Html.ValidationMessageFor(model => model.UnitType, "", new { @class = "text-danger" })
                                    </label>
                                </div>
                                <div class="flex mb-28">
                                    <label for="">
                                        Additional Units
                                        @Html.TextBoxFor(model => model.AdditionalUnits, new { @class = "form-control", @placeholder = @SharedLocalizer["Additional Unit"] })
                                        @Html.ValidationMessageFor(model => model.AdditionalUnits, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="">
                                        <p class="m-0">
                                            Furnished@*
                                            <span class="text-danger">*</span>*@
                                        </p>
                                        @Html.DropDownListFor(model => model.Furnished, new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown" })
                                        @*@Html.ValidationMessageFor(model => model.Furnished, "", new { @class = "text-danger" })*@
                                    </label>
                                </div>
                                <div class="flex mb-28">
                                    <label for="">
                                        Purpose of Valuation
                                        @Html.TextBoxFor(model => model.ValuationPurpose, new { @class = "form-control", @placeholder = @SharedLocalizer["Valuation Purpose"] })
                                        @Html.ValidationMessageFor(model => model.ValuationPurpose, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="">
                                        <p class="m-0">
                                            Built Up Area (Sq.Ft)
                                            <span class="text-danger">*</span>
                                        </p>
                                        @Html.TextBoxFor(model => model.BuildUpAreaSqFt, new { @class = "form-control price", @placeholder = @SharedLocalizer["Area in Sq Ft"] })
                                        @Html.ValidationMessageFor(model => model.BuildUpAreaSqFt, "", new { @class = "text-danger" })
                                    </label>
                                </div>
                                <div class="flex mb-28">
                                    <label for="">
                                        <p class="m-0">
                                            Built up Area (Sq.Meter)
                                            <span class="text-danger">*</span>
                                        </p>
                                        @Html.TextBoxFor(model => model.BuildUpAreaSqMtr, new { @class = "form-control price", @placeholder = @SharedLocalizer["Area in Sq Mtr"] })
                                        @Html.ValidationMessageFor(model => model.BuildUpAreaSqMtr, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="">
                                        Age of construction (In Years)
                                        @Html.TextBoxFor(model => model.AgeOfConstruction, new { @class = "form-control valiadteint", @placeholder = @SharedLocalizer["Age Of Construction"] })

                                    </label>
                                </div>
                                <div class="flex mb-28">
                                    <label for="">
                                        Parking
                                        @Html.TextBoxFor(model => model.Parking, new { @class = "form-control", @placeholder = @SharedLocalizer["Parking"] })

                                    </label>
                                    <label for="">
                                        Parking BAY Number
                                        @Html.TextBoxFor(model => model.ParkingBayNo, new { @class = "form-control", @placeholder = @SharedLocalizer["Parking Bay No"] })

                                    </label>
                                </div>
                                <div class="flex mb-28">
                                    <label for="">
                                        Description
                                        @Html.TextBoxFor(model => model.Description, new { @class = "form-control", @placeholder = @SharedLocalizer["Description"] }) 
                                    </label>
                                    <label for="">
                                        Unit Numer
                                        @Html.TextBoxFor(model => model.UnitNumber, new { @class = "form-control", @placeholder = @SharedLocalizer["Unit Number"] })
                                    </label>

                                </div>
                            </div>
                        </div> 
                        <div class="addMoreAddress roundBorderBox inputSearchs">
                            <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                <p>Amenities</p>
                                <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                            </div>
                            <div class="form">
                                <div class="flex mb-28 flex-start" id="amentiesdiv">
                                    @{
                                        if (Model.AmenityList.Count != 0)
                                        {
                                            @for (int z = 0; z < Model.AmenityList.Count; z++)
                                            {
                                                var amt = @Model.AmenityList[z];
                                                <label for="" class="position-relative checkboxBtn w-30">
                                                    @Html.HiddenFor(m => m.AmenityList[z].Id)
                                                    @Html.HiddenFor(m => m.AmenityList[z].AmenityId)
                                                    @Html.HiddenFor(m => m.AmenityList[z].PropertyId)
                                                    @Html.CheckBoxFor(model => Model.AmenityList[z].IsActive, new { @class = "checkbox-checked", @checked = "checked" })
                                                    <p style="font-weight:400;">@amt.AmenityName</p>
                                                    <img src="/assets/@amt.Icon" class="amenitiesIcon" />
                                                </label>
                                            }
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="profile2" class="tabcontent">
                        @* <h3 class="blueHeading">Location Details</h3> *@
                        <div class="inputSearchs p-0">

                            <div class="tabSection">
                                <input type="hidden" id="hdnCountry" value="@(Model.PropertyDetail == null ? 0 : Model.PropertyDetail.CountryId)" />
                                <input type="hidden" id="hdnState" value="@(Model.PropertyDetail == null ? 0 : Model.PropertyDetail.StateId)" />
                                <input type="hidden" id="hdnCity" value="@(Model.PropertyDetail == null ? 0 : Model.PropertyDetail.CityId)" />
                                @Html.HiddenFor(model => model.PropertyDetail.Id)
                                <div class="addMoreAddress roundBorderBox">
                                    <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                        <p>Mailing Address Section</p>
                                        <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                    </div>
                                    <div class="pannel" style="height:auto;overflow:hidden">
                                        <div class="flex">
                                            <label for="address1">
                                                <p class="m-0">Country<span class="text-danger">*</span></p>
                                                @Html.DropDownListFor(model => model.PropertyDetail.CountryId, new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown", @onchange = "BindState(this.options[this.selectedIndex].value)" })
                                                @Html.ValidationMessageFor(model => model.PropertyDetail.CountryId, "", new { @class = "text-danger" })
                                            </label>
                                            <label for="address1">
                                                <p class="m-0">State<span class="text-danger">*</span></p>
                                                @Html.DropDownListFor(model => model.PropertyDetail.StateId, new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown", @onchange = "BindCity(this.options[this.selectedIndex].value)" })
                                                @Html.ValidationMessageFor(model => model.PropertyDetail.StateId, "", new { @class = "text-danger" })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="address1">
                                                <p class="m-0">City<span class="text-danger">*</span></p>
                                                @Html.DropDownListFor(model => model.PropertyDetail.CityId, new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown" })
                                                @Html.ValidationMessageFor(model => model.PropertyDetail.CityId, "", new { @class = "text-danger" })
                                            </label>
                                            <label for="address1">
                                                <p class="m-0">Sector /Zone<span class="text-danger">*</span></p>
                                                @Html.TextBoxFor(model => model.PropertyDetail.Zone, new { @class = "form-control", @placeholder = @SharedLocalizer["Zone"] })
                                                @Html.ValidationMessageFor(model => model.PropertyDetail.Zone, "", new { @class = "text-danger" })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="address2">
                                                <p class="m-0">Building Projects<span class="text-danger">*</span></p>
                                                @Html.TextBoxFor(model => model.PropertyDetail.BuildingProject, new { @class = "form-control", @placeholder = @SharedLocalizer["Zone"] })
                                                @Html.ValidationMessageFor(model => model.PropertyDetail.BuildingProject, "", new { @class = "text-danger" })

                                            </label>
                                            <label for="address2">
                                                Latitude
                                                @Html.TextBoxFor(model => model.PropertyDetail.Latitude, new { @class = "form-control", @placeholder = @SharedLocalizer["Latitude"] })
                                                @Html.ValidationMessageFor(model => model.PropertyDetail.Latitude, "", new { @class = "text-danger" })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="address2">
                                                Longitude
                                                @Html.TextBoxFor(model => model.PropertyDetail.Longitude, new { @class = "form-control", @placeholder = @SharedLocalizer["Longitude"] })
                                                @Html.ValidationMessageFor(model => model.PropertyDetail.Longitude, "", new { @class = "text-danger" })
                                            </label>
                                            <label for="">
                                                <p class="m-0">Address Line 1<span class="text-danger">*</span></p>
                                                @Html.TextBoxFor(model => model.PropertyDetail.Address1, new { @class = "form-control", @placeholder = @SharedLocalizer["Address1"] })
                                                @Html.ValidationMessageFor(model => model.PropertyDetail.Address1, "", new { @class = "text-danger" })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="">
                                                Address Line 2
                                                @Html.TextBoxFor(model => model.PropertyDetail.Address2, new { @class = "form-control", @placeholder = @SharedLocalizer["Address2"] })
                                                @Html.ValidationMessageFor(model => model.PropertyDetail.Address2, "", new { @class = "text-danger" })
                                            </label>
                                            <label for="address2">
                                                Zip / PO Box
                                                @Html.TextBoxFor(model => model.PropertyDetail.Pincode, new { @class = "form-control", @placeholder = @SharedLocalizer["Pincode"] })
                                                @Html.ValidationMessageFor(model => model.PropertyDetail.Pincode, "", new { @class = "text-danger" })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="address2">
                                                Landmark
                                                @Html.TextBoxFor(model => model.PropertyDetail.Landmark, new { @class = "form-control", @placeholder = @SharedLocalizer["Landmark"] })
                                                @Html.ValidationMessageFor(model => model.PropertyDetail.Landmark, "", new { @class = "text-danger" })
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="text-right buttonArea bodyContent plr-0">
                        <a href='/MasterProperty/Properties'> <button type="button" class="lineBtn greyBtn mr-12">Cancel</button></a>
                        <button type="submit" id="btnSaveEdit" class="blueBtn">Save</button>

                    </div>
                </form>
            </div>
        </div>
    </div>
</main>
@* </div>
</div> *@

@section MyScripts
{

    <script type="text/javascript" src="~/js/custom/MasterProperty/MasterPropertyManage.js?v=@jsVersion"></script>
    <script>
        //#region Setup API Url
        var PropertyList = "@Eltizam.Web.Helpers.APIURLHelper.GetPropertyTypeList";
        var PropertyByIdSubType = "@Eltizam.Web.Helpers.APIURLHelper.GetPropertyByPropertyTypeId";
        var ClientTypeList = "@Eltizam.Web.Helpers.APIURLHelper.GetSearchClientType";
        var OwnershipTypeList = "@Eltizam.Web.Helpers.APIURLHelper.OwnershipTypeList";
        var CountryList = "@Eltizam.Web.Helpers.APIURLHelper.GetCountryList";
        var StateList = "@Eltizam.Web.Helpers.APIURLHelper.GetStateListByCountryId";
        var CityList = "@Eltizam.Web.Helpers.APIURLHelper.GeCityListByStateId";
        var UnitTypeStatus = "@Eltizam.Web.Helpers.APIURLHelper.GetDictionaryDescriptionById";
        var GetDictionaryWithSubDetails = "@Eltizam.Web.Helpers.APIURLHelper.GetDictionaryWithSubDetails";

        //#region Static Messae Init
        var EditLabel = "@SharedLocalizer["Edit"]";
        var DeleteLabel = "@SharedLocalizer["Delete"]";
        var ErrorMessage = "@SharedLocalizer["Error"]";
        var RecordDelete = "@SharedLocalizer["RecordDelete"]";
        var AddLabel = "@SharedLocalizer["Add"]";
        var UpdateLabel = "@SharedLocalizer["Update"]";


    </script>
}
