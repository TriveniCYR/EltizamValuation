@model Eltizam.Business.Models.MasterUserModel;

@inject IConfiguration Configuration
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Master> MasterLocalizer
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Shared> SharedLocalizer

<div class="flex">
    <div class="w-100 position-relative">
        <header class="flex justify-between align-item-center">
            <div class="hamburger-icon cursor-pointer" onClick="sideNavToggle()"><img src="~/assets/hamburger-icon.svg" alt="hamburger-icon" class="visible-in-web" /> <img src="~/assets/arrow-narrow-right.svg" alt="arrow-narrow-right" class="visible-in-mobile"></div>
            <div class="user flex">
                <div class="position-relative notification">
                    <img src="~/assets/bell.svg" alt="bell" class="cursor-pointer" />
                    <span>3</span>
                </div>
                <div class="flex align-item-center">
                    <img src="~/assets/user-icon.svg" alt="user-icon" class="profile cursor-pointer" />
                    <p class="visible-in-web">Saeed</p>
                    <img src="~/assets/arrow-down.svg" alt="arrow-down" class="cursor-pointer visible-in-web" />
                </div>
            </div>
        </header>
        <main>
            <div class="whiteBoxShadow">
                <div class="heading position-relative">
                    <h3 class="dashboardTitle">Add RESOURCE </h3>
                    <img src="~/assets/x.svg" alt="x" id="closePopup" />
                </div>
                <div class="bodyContent">
                    <div class="text-center">
                        <div class="imgBox">
                            <img src="~/assets/photo-up.svg" alt="photo-up" />
                            <input type="file" class="btn" value="Upload Photo" />
                            <span>Upload Photo</span>
                        </div>
                    </div>
                    <div class="inputSearchs">
                        <form asp-action="AddResource" autocomplete="off" asp-controller="Resource" method="post">
                            <div class="flex">
                                <label for="FirstName" class="position-relative">
                                    <span class="mandatoryMark">First Name</span>
                                    @Html.TextBoxFor(model => model.FirstName, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["First Name"] })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </label>
                                <label for="MiddleName" class="position-relative">
                                    <span>Middle Name</span>
                                    @Html.TextBoxFor(model => model.MiddleName, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Middle Name"] })
                                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                </label>
                                <label for="LastName" class="position-relative">
                                    <span class="mandatoryMark">Last Name</span>
                                    @Html.TextBoxFor(model => model.LastName, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Last Name"] })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </label>                                
                                <label for="Role">
                                    <span class="mandatoryMark">Role</span>
                                    <select id="RoleId" name="RoleId" class="form-control" asp-for="RoleId"></select>
                                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                                </label>
                            </div>
                            <div class="flex">
                                <label for="ResourceId">
                                    <span class="mandatoryMark">Resource Type</span>
                                    <select id="ResourceId" name="ResourceId" class="form-control" asp-for="ResourceId"></select>
                                    @Html.ValidationMessageFor(model => model.ResourceId, "", new { @class = "text-danger" })
                                </label>
                                <label for="CompanyName">
                                    Company / Vendor Name
                                    @Html.TextBoxFor(model => model.CompanyName, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Company Name"] })
                                    @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                                </label>
                                <label for="Gender">
                                    Gender
                                    <select id="Gender" name="Gender" class="form-control" asp-for="Gender"></select>
                                </label>
                                <label for="DateOfBirth">
                                    Date of Birth
                                    <input type="date" id="DateOfBirth" name="DateOfBirth" class="form-control">
                                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                                </label>
                            </div>
                            <div class="flex">                                
                                <label for="DepartmentId">
                                    <span>Department</span>
                                    <select id="DepartmentId" name="DepartmentId" class="form-control" asp-for="DepartmentId"></select>
                                    @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                                </label>
                                <label for="Designation">
                                    <span>Designation</span>
                                    <select id="DesignationId" name="DesignationId" class="form-control" asp-for="DesignationId"></select>
                                    @Html.ValidationMessageFor(model => model.DesignationId, "", new { @class = "text-danger" })
                                </label>
                                <label for="LicenseNo">
                                    AD Municipality / License No.
                                    @Html.TextBoxFor(model => model.LicenseNo, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["License No"] })
                                    @Html.ValidationMessageFor(model => model.LicenseNo, "", new { @class = "text-danger" })
                                </label>
                                <label for="IsActive">
                                    Status
                                    <div class="flex m-0 status">
                                        Active : @Html.RadioButtonFor(m => m.IsActive, true)
                                        IsActive : @Html.RadioButtonFor(m => m.IsActive, false)
                                    </div>
                                </label>
                            </div>
                            <div class="flex">
                                <label for="Password">
                                    <label class="mandatoryMark">Password</label>
                                    @Html.PasswordFor(model => model.Password, new { @autocomplete = "off", @id = "password", @class = "form-control checkbox-checked", @placeholder = @SharedLocalizer["Password"], @required = "" })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </label>
                                <label for="ConfirmPassowrd">
                                    <label class="mandatoryMark">ConfirmPassowrd</label>
                                    @Html.PasswordFor(model => model.ConfirmPassowrd, new { @autocomplete = "off", @class = "form-control checkbox-checked", @placeholder = @SharedLocalizer["ConfirmPassword"] })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassowrd, "", new { @class = "text-danger" })
                                </label>
                            </div>
                            <div class="flex">
                                &nbsp;
                            </div>
                            <div class="flex">
                                &nbsp;
                            </div>
                            <div class="text-center buttonArea">
                                @*<button type="button" class="lineBtn" id="profileDetailsRedirect">Fill All Details</button>*@
                                <button type="submit" class="blueBtn">Save</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </main>
        <footer class="flex justify-between">
            <p>2023 © Eltizam.</p>
            <p>Design & Develop by NeoSoft</p>
        </footer>
    </div>
</div>

<input type="hidden" id="hdnBaseURL" value="@Configuration.GetSection("Apiconfig")["baseurl"]" />
<script src="~/AdminLTE/plugins/jquery/jquery.min.js"></script>
<script>

    document.addEventListener("DOMContentLoaded", () => {
        const resourceListRedirection = document.getElementById("resourceListRedirection");
        const profileDetailsRedirect = document.getElementById("profileDetailsRedirect");

        resourceListRedirection.addEventListener('click', () => {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/resource-master.html'
        });
        profileDetailsRedirect.addEventListener('click', () => {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/profile-details.html'
        });
    });

    function sideNavToggle() {
        var x = document.getElementById("sideNav");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }
    $(document).ready(function () {
        BindDepartment();
        BindDesignation();
        BindRole();
        BindResourceType();
    });

    function BindDepartment() {
         
        var DepartmentList = "@Eltizam.Web.Helpers.APIURLHelper.GetDepartmentList";
        var Department = $("#DepartmentId");
        $.ajax({
            type: "GET",
            url: $('#hdnBaseURL').val() + DepartmentList,
            "datatype": "json",
            success: function (response) {
                 ;
                Department.empty().append('<option selected="selected" value="0">Please select</option>');
                for (var i = 0; i < response.length; i++) {
                    Department.append($("<option></option>").val(response[i].id).html(response[i].department));
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
                $("#loader").hide();
            }
        });
    }
    function BindDesignation() {
         
        var DesignationList = "@Eltizam.Web.Helpers.APIURLHelper.GetDesignationList";
        var Designation = $("#DesignationId");
        $.ajax({
            type: "GET",
            url: $('#hdnBaseURL').val() + DesignationList,
            "datatype": "json",
            success: function (response) {
                 ;
                Designation.empty().append('<option selected="selected" value="0">Please select</option>');
                for (var i = 0; i < response.length; i++) {
                    Designation.append($("<option></option>").val(response[i].id).html(response[i].designation));
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
                $("#loader").hide();
            }
        });
    }

    function BindRole() {
         
        var RoleList = "@Eltizam.Web.Helpers.APIURLHelper.GetRoleList";
        var Role = $("#RoleId");
        $.ajax({
            type: "GET",
            url: $('#hdnBaseURL').val() + RoleList,
            "datatype": "json",
            success: function (response) {
                 ;
                Role.empty().append('<option selected="selected" value="0">Please select</option>');
                for (var i = 0; i < response.length; i++) {
                    Role.append($("<option></option>").val(response[i].id).html(response[i].roleName));
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
                $("#loader").hide();
            }
        });
    }

    function BindResourceType() {
         
        var ResourceTypeList = "@Eltizam.Web.Helpers.APIURLHelper.GetResourceTypeList";
        var ResourceType = $("#ResourceId");
        $.ajax({
            type: "GET",
            url: $('#hdnBaseURL').val() + ResourceTypeList,
            "datatype": "json",
            success: function (response) {
                 ;
                ResourceType.empty().append('<option selected="selected" value="0">Please select</option>');
                for (var i = 0; i < response.length; i++) {
                    ResourceType.append($("<option></option>").val(response[i].id).html(response[i].resourceType));
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
                $("#loader").hide();
            }
        });
    }
</script>