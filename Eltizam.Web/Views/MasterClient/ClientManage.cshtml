@model Eltizam.Business.Models.MasterClientModel;
@using Eltizam.Utility.Models
@inject IConfiguration Configuration
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Master> MasterLocalizer
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Shared> SharedLocalizer
@{
    string jsVersion = @Configuration.GetSection("StaticJS")["version"];
    var _header = "Client Master";
    var _md = Model.Id > 0 ? "Edit" : "Add";
    ViewData["Title"] = _header;
    var objPermssion = (RolePermissionModel)ViewBag.Access;
    var isAdd = objPermssion.Add ? 1 : 0;
    var isEdit = objPermssion.Edit ? 1 : 0;
    var isDelete = objPermssion.Delete ? 1 : 0;
}

<main>
    <div class="whiteBoxShadow">
        <div class="heading position-relative flex justify-between">
            <h3 class="dashboardTitle">@_md @_header</h3>
            <div class="hamburger">
                <a class="greyBtn lineBtn formAbtn" asp-action="Clients">@_header</a>
                <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                <span>@_md</span>
                 <input type="hidden" id="md" value="@_md" />
            </div>
        </div>
        <div class="bodyContent">
            <div class="profileTabSection">
                <div class="tab">
                    <button class="tablinks" onclick="profileTab(event, 'profile1')" id="defaultOpen">Client Details</button>
                    <button class="tablinks" onclick="profileTab(event, 'profile2')">Mailing Address</button>
                    <button class="tablinks" onclick="profileTab(event, 'profile3')">Contact Details</button>
                    <button class="tablinks" onclick="profileTab(event, 'profile4')">Documents</button>
                </div>

                <form id="client" asp-action="ClientManage" method="POST" enctype="multipart/form-data">
                    <input type="hidden" id="isAddPerm" value="@isAdd" />
                    <input type="hidden" id="isEditPerm" value="@isEdit" />
                    <input type="hidden" id="isDeletePerm" value="@isDelete" />
                    <input type="hidden" id="hdnClientType" value="@(Model == null ? 0 : Model.ClientTypeId)" />
                    <input type="hidden" id="hdnId" asp-for="Id" value="@(Model == null ? 0 : Model.Id)" />
                    <div id="profile1" class="tabcontent">
                        <div class="inputSearchs">
                            <div class="tabSection">

                                <div class="flex threeBox">
                                    <div class="flex justify-center mb-28">

                                        <div class="resourceProfile clientImg text-center">
                                            @if (Model.ProfileAttachmentId > 0)
                                            {
                                                <img id="previewImage" src="@Model.ProfilePath" alt="upload-profile-pic" />
                                            }
                                            else
                                            {
                                                <img id="previewImage" src="../assets/client1.png" alt="img-7" />
                                            }

                                            <div class="position-relative">
                                                <div class="upload-profile-pic-btn">
                                                    <img src="../assets/upload-profile-pic.svg" alt="upload-profile-pic" />
                                                    <span id="uploadBtnText">
                                                        @if (Model.ProfileAttachmentId > 0)
                                                        {
                                                            <text>Change photo</text>
                                                        }
                                                        else
                                                        {
                                                            <text>Upload photo</text>
                                                        }
                                                    </span>
                                                </div>
                                                <input type="file" accept="image/*" asp-for="File" class="uploadPhoto" id="fileInput" accept=".jpeg,.png,.jpg" />
                                                @*  <span class="text-danger" id="sizeError" style="position: relative;top: 46px;font-size: 16px;line-height: 20px;">Image size should not exceed 2 MB.</span> *@
                                                <span class="text-danger" id="sizeError" style="display: none; position: relative;top: 46px;font-size: 16px;line-height: 20px;">Image size should not exceed 2 MB.</span>
                                            </div>
                                        </div>
                                    </div>
                                    <label for="IsActive" class="w-50">
                                        Status
                                        <input class='input-switch' type="checkbox" asp-for="IsActive" />
                                        <label class="label-switch" for="IsActive"></label>
                                        <span class="info-text"></span>
                                    </label>
                                </div>
                                <div class="flex">
                                    <label for="ClientTypeId">
                                        <p class="m-0">
                                            Client Type
                                            <span class="text-danger">*</span>
                                        </p>
                                        @* <select id="ClientTypeId" name="ClientTypeId" class="form-control" asp-for="ClientTypeId"></select> *@
                                        @Html.DropDownListFor(model => model.ClientTypeId, new List<SelectListItem> { }, new { @class = "form-control"})
                                        @Html.ValidationMessageFor(model => model.ClientTypeId, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="FirstName">
                                        <p class="m-0">First Name<span class="text-danger">*</span></p>
                                        @Html.TextBoxFor(model => model.FirstName, new {@class = "form-control",  @placeholder = @SharedLocalizer["First Name"] })
                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                    </label>

                                </div>
                                <div class="flex">
                                    <label for="MiddleName">
                                        Middle Name
                                        @Html.TextBoxFor(model => model.MiddleName, new {@class = "form-control",  @placeholder = @SharedLocalizer["Middle Name"] })
                                        @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="LastName">
                                        <p class="m-0">Last Name<span class="text-danger">*</span></p>
                                        @Html.TextBoxFor(model => model.LastName, new {@class = "form-control",  @placeholder = @SharedLocalizer["Last Name"] })
                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                    </label>
                                </div>
                                <div class="flex">
                                    <label for="Trnnumber">
                                        <p class="m-0">
                                            TRN Number
                                            <span class="text-danger">*</span>
                                        </p>
                                        @Html.TextBoxFor(model => model.Trnnumber, new {@class = "form-control",  @placeholder = @SharedLocalizer["TRN Number"] })
                                        @Html.ValidationMessageFor(model => model.Trnnumber, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="TrnexpiryDate">
                                        <p class="m-0">
                                            TRN Expire Date
                                            <span class="text-danger">*</span>
                                        </p>
                                        <input type="text" id="TrnexpiryDate" name="TrnexpiryDate" class="formatted-date-input" asp-for="TrnexpiryDate" min="@DateTime.Now.ToString("yyyy-MM-dd")">
                                        @Html.ValidationMessageFor(model => model.TrnexpiryDate, "", new { @class = "text-danger" })
                                    </label>
                                </div>
                                <div class="flex">
                                    <label for="">
                                        <p class="m-0">
                                            License Number
                                            <span class="text-danger">*</span>
                                        </p>
                                        @Html.TextBoxFor(model => model.LicenseNumber, new {@class = "form-control",  @placeholder = @SharedLocalizer["License Number"] })
                                        @Html.ValidationMessageFor(model => model.LicenseNumber, "", new { @class = "text-danger" })
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="profile2" class="tabcontent">
                        @*  <h3 class="ptrl-20">Mailing Address</h3> *@
                        <div class="inputSearchs p-0">
                            <div class="tabSection">
                                <input type="hidden" id="hdnCountry" value="@(Model.Address == null ? 0 : Model.Address.CountryId)" />
                                <input type="hidden" id="hdnState" value="@(Model.Address == null ? 0 : Model.Address.StateId)" />
                                <input type="hidden" id="hdnCity" value="@(Model.Address == null ? 0 : Model.Address.CityId)" />
                                <input type="hidden" id="hdnPhoneExt" value="@(Model.Address == null ? 0 : Model.Address.PhoneExt)" />
                                <input type="hidden" id="hdnAlternatePhoneExt" value="@(Model.Address == null ? 0 : Model.Address.AlternatePhoneExt)" />
                                @Html.HiddenFor(model => model.Address.Id)
                                <div class="addMoreAddress">
                                    <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                        <p>Mailing Address Section</p>
                                        <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                    </div>
                                    <div class="pannel" style="height:auto;overflow:hidden">
                                        <div class="flex">
                                            <label for="address1">
                                                <p class="m-0">Address Line 1<span class="text-danger">*</span></p>
                                                @Html.TextBoxFor(model => model.Address.Address1, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Address Line 1"] })
                                                @Html.ValidationMessageFor(model => model.Address.Address1, "", new { @class = "text-danger" })
                                            </label>
                                            <label for="address2">
                                                Address Line 2
                                                @Html.TextBoxFor(model => model.Address.Address2, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Address Line 2"] })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="CountryId">
                                                <p class="m-0">Country<span class="text-danger">*</span></p>
                                                @Html.DropDownListFor(model => model.Address.CountryId, new List<SelectListItem> { }, new { @class = "form-control", @onchange = "BindState(this.options[this.selectedIndex].value)"})
                                                @Html.ValidationMessageFor(model => model.Address.CountryId, "", new { @class = "text-danger" })
                                            </label>
                                            <label for="StateId">
                                                <p class="m-0">State<span class="text-danger">*</span></p>
                                                @Html.DropDownListFor(model => model.Address.StateId, new List<SelectListItem> { }, new { @class = "form-control", @onchange = "BindCity(this.options[this.selectedIndex].value)"})
                                                @Html.ValidationMessageFor(model => model.Address.StateId, "", new { @class = "text-danger" })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="CityId">
                                                <p class="m-0">City<span class="text-danger">*</span></p>
                                                @Html.DropDownListFor(model => model.Address.CityId, new List<SelectListItem> { }, new { @class = "form-control"})
                                                @Html.ValidationMessageFor(model => model.Address.CityId, "", new { @class = "text-danger" })
                                            </label>
                                            <label for="PinNo">
                                                Zip / PO Box
                                                @Html.TextBoxFor(model => model.Address.PinNo, new { @autocomplete = "off", @class = "form-control checkbox-checked", @placeholder = @SharedLocalizer["Zip / PO Box"] })
                                                @Html.ValidationMessageFor(model => model.Address.PinNo, "", new { @class = "text-danger" })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="Email">
                                                <p class="m-0">Email<span class="text-danger">*</span></p>
                                                @Html.TextBoxFor(model => model.Address.Email, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Email"] })
                                                @Html.ValidationMessageFor(model => model.Address.Email, "", new { @class = "text-danger" })
                                            </label>
                                            <label for="AlternateEmail">

                                                Alternate Email
                                                @Html.TextBoxFor(model => model.Address.AlternateEmail, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Alternate Email"] })
                                                
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="Phone">
                                                <p class="m-0">Phone<span class="text-danger">*</span></p>
                                                <div class="flex align-item-center flex-start m-0 phoneWithDrop">
                                                    @Html.DropDownListFor(model => model.Address.PhoneExt, new List<SelectListItem> { }, new { @class = "", @style="border-right: 0" })

                                                    @Html.TextBoxFor(model => model.Address.Phone, new {@autocomplete = "off", @class = "form-control checkbox-checked", @placeholder = @SharedLocalizer["Phone"] })

                                                </div>
                                                @Html.ValidationMessageFor(model => model.Address.Phone, "", new { @class = "text-danger" })
                                                @Html.ValidationMessageFor(model => model.Address.PhoneExt, "", new { @class = "text-danger" })
                                            </label>
                                            <label for="AlternatePhone">
                                                Alternate Phone
                                                <div class="flex align-item-center flex-start m-0 phoneWithDrop">
                                                    @Html.DropDownListFor(model => model.Address.AlternatePhoneExt, new List<SelectListItem> { }, new { @class = "", @style="border-right: 0" })

                                                    @Html.TextBoxFor(model => model.Address.AlternatePhone, new { @autocomplete = "off", @class = "form-control checkbox-checked", @placeholder = @SharedLocalizer["Alternate Phone"] })

                                                </div>
                                                @Html.ValidationMessageFor(model => model.Address.AlternatePhone, "", new { @class = "text-danger" })
                                                @Html.ValidationMessageFor(model => model.Address.AlternatePhoneExt, "", new { @class = "text-danger" })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="">
                                                Landline phone
                                                @Html.TextBoxFor(model => model.Address.Landlinephone, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Landline phone"] })
                                                @Html.ValidationMessageFor(model => model.Address.Landlinephone, "", new { @class = "text-danger" })
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="text-right buttonArea bodyContent plr-0">
                                    <button type="button" class="lineBtn" onclick="addMoreAddress()">Add More</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="profile3" class="tabcontent">
                        @* <h3 class="ptrl-20">Contact Details</h3> *@
                        <div class="roundBorderBox">
                            <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                <p>Contact Section</p>
                                <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                            </div>
                            <div class="pannel mt-28" style="height:auto;overflow:hidden">
                                <div class="text-right">
                                    @* <img src="../assets/minus-icon.svg" alt="minus-icon" class="minus-icon" onClick="removeParentDiv(this)" /> *@
                                </div>
                                <div class="inputSearchs p-0">

                                    <input type="hidden" id="hdnDeparment" value="@(Model.Contact == null ? 0 : Model.Contact.DepartmentId)" />
                                    <input type="hidden" id="hdnDesignation" value="@(Model.Contact == null ? 0 : Model.Contact.DesignationId)" />
                                    <input type="hidden" id="hdnMobileExt" value="@(Model.Contact == null ? 0 : Model.Contact.MobileExt)" />
                                    <div class="tabSection">
                                        @Html.HiddenFor(model => model.Contact.Id)
                                        <div class="flex">
                                            <label for="ContactPersonName">
                                                Contact Person Name
                                                @Html.TextBoxFor(model => model.Contact.ContactPersonName, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Contact Person"] })
                                                @Html.ValidationMessageFor(model => model.Contact.ContactPersonName, "", new { @class = "text-danger" })
                                            </label>
                                            <label for="Subject">
                                                Department
                                                @Html.DropDownListFor(model => model.Contact.DepartmentId, new List<SelectListItem>(), new { @class = "form-control", @placeholder = @SharedLocalizer["Department"] })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="Institute">
                                                Designation
                                                @Html.DropDownListFor(model => model.Contact.DesignationId, new List<SelectListItem>(), new { @class = "form-control", @placeholder = @SharedLocalizer["Designation"] })
                                            </label>
                                            <label for="year">
                                                <p class="m-0">Email<span class="text-danger">*</span></p>
                                                @Html.TextBoxFor(model => model.Contact.Email, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Email"] })
                                                @Html.ValidationMessageFor(model => model.Contact.Email, "", new { @class = "text-danger" })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="grade" class="w-50">
                                                <p class="m-0">Phone Number<span class="text-danger">*</span></p>
                                                <div class="flex align-item-center flex-start m-0 phoneWithDrop">
                                                    @Html.DropDownListFor(model => model.Contact.MobileExt, new List<SelectListItem> { }, new { @class = "", @style="border-right: 0" })

                                                    @Html.TextBoxFor(model => model.Contact.Mobile, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Phone Number"] })

                                                </div>
                                                @Html.ValidationMessageFor(model => model.Contact.MobileExt, "", new { @class = "text-danger" })
                                                @Html.ValidationMessageFor(model => model.Contact.Mobile, "", new { @class = "text-danger" })
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="text-right buttonArea bodyContent plr-0">
                                    <button type="button" class="lineBtn" onClick="addRoundBorderBox(this)">Add New</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="profile4" title="Supporting Documents" class="tabcontent">
                        <div class="inputSearchs uploadDocBox">
                            <div class="tabSection">
                                <div class="flex">
                                    <label for="" class="w-100">
                                      @*   <input type="file" class="fileInput" asp-for="Document.Files" multiple onchange="displayFileNames(this)"> *@
                                        <input type="file" class="fileInput" asp-for="Document.Files" multiple onchange="validateFileSize(this)">

                                        <input type="text" class="fileNames" readonly placeholder="file names">
                                    </label>
                                </div>
                                <div class="W-100">
                                    <div class="prevUpload roundBorderBox m-0">
                                        <h3>Previously uploaded</h3>
                                        <div class="scroll-x">
                                            <table id="UserTableDocument" class="table-striped">
                                                <thead>
                                                    <tr>
                                                        <th>File Name</th>
                                                        <th>DateUpdate </th>
                                                        <th>Uploaded By</th>
                                                        <th>Download</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.Documents != null)
                                                    {
                                                        @foreach (var docs in Model.Documents)
                                                        {
                                                            <tr id="@docs.Id">
                                                                <td>@docs.DocumentName</td>
                                                                <td class="formatted-td-date-input">@docs.CreatedDate.ToString() </td>
                                                                <td>@docs.CreatedName</td>
                                                                <td><a href="@docs.FilePath" download target="_blank"><img src="../assets/download.svg" alt="download" /></a></td>
                                                                <td><a title="Delete" data-toggle="modal" data-target="#DeleteDocumentModel" data-backdrop="static" data-keyboard="false" onclick="ConfirmationDocument(@docs.Id); return false;"><img src="../assets/trash.svg" alt="trash" /></a></td>
                                                            </tr>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <label>NA</label>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="text-right buttonArea bodyContent plr-0">
                        <a href='/MasterClient/Clients'> <button type="button" class="lineBtn greyBtn mr-12">Cancel</button></a>
                        <button type="submit" id="btnSaveEdit" class="blueBtn">Save</button>
                    </div>
                </form>

            </div>
        </div>
    </div>
</main>

<div id="DeleteDocumentModel" class="modal themeModal " role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@SharedLocalizer["Delete"]</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Label(@SharedLocalizer["DeleteConfirm"])
                        </div>
                    </div>
                </div>
                @Html.Hidden("ID")
                <div class="buttonArea popup-btn">
                    <button class="gray" data-dismiss="modal">@SharedLocalizer["Cancel"]</button>
                    <button type="button" onclick="DeleteDocument()" data-dismiss="modal" class="redBtn">@SharedLocalizer["Delete"]</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section MyScripts {
    <script type="text/javascript" src="~/js/custom/MasterClient/ClientManage.js?v=@jsVersion"></script>
    <script>
        //#region Setup API Url
        var ClientTypeList = "@Eltizam.Web.Helpers.APIURLHelper.GetClientTypeList";
        var CountryList = "@Eltizam.Web.Helpers.APIURLHelper.GetCountryList";
        var StateList = "@Eltizam.Web.Helpers.APIURLHelper.GetStateListByCountryId";
        var CityList = "@Eltizam.Web.Helpers.APIURLHelper.GeCityListByStateId";
        var DesignationList = "@Eltizam.Web.Helpers.APIURLHelper.GetDesignationList";
        var DepartmentList = "@Eltizam.Web.Helpers.APIURLHelper.GetDepartmentList";
        var DeleteClientDocument = "@Eltizam.Web.Helpers.APIURLHelper.DeleteClientDocumentById";
        var RecordDelete = "@SharedLocalizer["RecordDelete"]";

    </script>

}