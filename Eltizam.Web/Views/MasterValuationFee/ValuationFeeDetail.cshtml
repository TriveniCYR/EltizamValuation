@using Eltizam.Utility.Models;
@using Microsoft.AspNetCore.Http
@using Eltizam.Web.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHttpContextAccessor HttpContextAccessor
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Master> MasterLocalizer
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Shared> SharedLocalizer

@model Eltizam.Business.Models.MasterValuationFeesModel
@{
    // ViewData["Title"] = @MasterLocalizer["ValuationFees"];
    // RolePermissionModel objPermssion = (RolePermissionModel)ViewBag._objPermission;
    // string IsAddAllow = (objPermssion.Add) ? "" : "display: none";
    // string IsEditAllow = (objPermssion.Edit) ? "" : "display: none";
    // string IsDeleteAllow = (objPermssion.Delete) ? "" : "display: none";
    string jsVersion = @Configuration.GetSection("StaticJS")["version"];
}
@{
    var htmlAttributes = true;
}
<div id="PlaceHolderHere"></div>
<main>
    <div class="whiteBoxShadow">
        <div class="heading position-relative flex justify-between ">

            @if (Model.Id > 0)
            {
                <h3 class="dashboardTitle">VIEW VALUATION FEES MASTER</h3>
                <div class="hamburger">
                    <a class="greyBtn lineBtn formAbtn" asp-action="ValuationFees">Valuation Fees Master</a>
                    @*  <span onclick="resourceMaster()">Valuation Master</span> *@
                    <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                    <span>View</span>
                </div>
            }
            else
            {
                <h3 class="dashboardTitle">ADD VALUATION FEES MASTER</h3>
                <div class="hamburger">
                    <a class="greyBtn lineBtn formAbtn" asp-action="ValuationFees">Valuation Fees Master</a>
                    @* <span onclick="resourceMaster()">Valuation Master</span> *@
                    <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                    <span>Add</span>
                </div>
            }
        </div>
        <div class="bodyContent">
            <div class="inputSearchs p-0">
                <form>

                    <input type="hidden" id="hdnProperty" value="@(Model == null ? 0 : Model.PropertyTypeId)" />
                    @Html.HiddenFor(model => model.Id, new { @class = "control-label" })
                    @*  @Html.HiddenFor(model => model.PropertyTypeId, new { @class = "control-label" })
                    @Html.HiddenFor(model => model.PropertySubTypeId, new { @class = "control-label" })
                    @Html.HiddenFor(model => model.ClientTypeId, new { @class = "control-label" })
                    @Html.HiddenFor(model => model.OwnershipTypeId, new { @class = "control-label" })
                    @Html.HiddenFor(model => model.ValuationFeeTypeId, new { @class = "control-label" })
                    @Html.HiddenFor(model => model.Id, new { @class = "control-label" }) *@
                    <input type="hidden" id="hdnId" value="@(Model == null ? 0 : Model.Id)" />
                    <input type="hidden" id="hdnPropertySub" value="@(Model == null ? 0 : Model.PropertySubTypeId)" />
                    <input type="hidden" id="hdnClientType" value="@(Model == null ? 0 : Model.ClientTypeId)" />
                    <input type="hidden" id="hdnOwnershipType" value="@(Model == null ? 0 : Model.OwnershipTypeId)" />
                    <input type="hidden" id="hdnValuationFeeType" value="@(Model == null ? 0 : Model.ValuationFeeTypeId)" />
                    @* <input type="hidden" id="hdnId" asp-for="Id" value="@(Model == null ? 0 : Model.Id)" /> *@
                    <div class="roundBorderBox">
                        <h3 class="mb-28">Property Details</h3>
                        <div class="flex">
                            <label for="PropertyTypeId" class="w-50">
                                Property Type Name
                                @*  <select id="PropertyTypeId" name="PropertyTypeId" class="form-control" asp-for="PropertyTypeId"></select> *@
                            @Html.DropDownListFor(model => model.PropertyTypeId, new List<SelectListItem> { }, new { @disabled= htmlAttributes, @class = "form-control", @onchange = "BindPropertySub(this.options[this.selectedIndex].value)",htmlAttributes})

                            </label>
                            <label for="" class="w-50">
                                Status

                                <input disabled="@htmlAttributes" type="checkbox" id="addLocation" class="input-switch" name="IsActive" value="@Model.IsActive" @(Model.IsActive ? "checked" : "") required />
                                <label class="label-switch" for="addLocation"></label>
                                <span class="info-text" style="top:-20px;"></span>
                            </label>
                            @*  <label for="">
                            Property Type Name
                            <input type="text" placeholder="enter Property Type Name">
                            </label> *@
                            
                            </div>
                        <div class="flex">
                            <label for="" class="w-50">
                                Property SubType Name
                                @*  <input type="text" placeholder="enter Property SubType Name"> *@
                                @Html.DropDownListFor(model => model.PropertySubTypeId, new List<SelectListItem> { }, new { @disabled=htmlAttributes, @class = "form-control",htmlAttributes/*  @disabled = "disabled" */})
                            </label>
                            <label for="" class="w-50">
                                Type of Ownership
                                @* <input type="text" placeholder="enter Type of Ownership"> *@
                                @Html.DropDownListFor(model => model.OwnershipTypeId, new List<SelectListItem> { }, new { @disabled=htmlAttributes, @class = "form-control",htmlAttributes})
                            </label>
                            
                        </div>
                        <div class="flex">
                            <label for="" class="w-50">
                                Client Type
                                @* <input type="text" placeholder="enter Client Type" /> *@
                                @Html.DropDownListFor(model => model.ClientTypeId, new List<SelectListItem> { }, new { @disabled=htmlAttributes, @class = "form-control",htmlAttributes})
                            </label>
                            <label for="CarpetAreaInSqFt" class="w-50">
                                Carpet Area (Sq.Ft)
                                @* <input type="text" placeholder="enter Carpet Area (Sq.Ft)" /> *@
                                @Html.EditorFor(model => model.CarpetAreaInSqFt, new { htmlAttributes = new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control",htmlAttributes } })
                                @Html.ValidationMessageFor(model => model.CarpetAreaInSqFt, "", new { @class = "text-danger" })
                            </label>

                            
                            </div>
                        <div class="flex">
                            <label for="CarpetAreaInSqMtr" class="w-50">
                                Carpet Area (Sq.Meter)
                                @* <input type="text" placeholder="enter Carpet Area (Sq.Meter)"> *@
                                @Html.EditorFor(model => model.CarpetAreaInSqMtr, new { htmlAttributes = new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control" ,htmlAttributes} })
                                @Html.ValidationMessageFor(model => model.CarpetAreaInSqMtr, "", new { @class = "text-danger" })
                            </label>
                            <label for="" class="w-50">
                                Valuation Fee Type
                                @* <input type="text" placeholder="enter Valuation Fee Type"> *@
                            @Html.DropDownListFor(model => model.ValuationFeeTypeId, new List<SelectListItem> { }, new { @disabled=htmlAttributes, @class = "form-control",htmlAttributes})
                            </label>
                           
                        </div>
                        <div class="flex">
                            <label for="">
                                Valuation Type
                                <div class="flex m-0 valuationType">
                                    @Html.DropDownList("ValuationType", new List<SelectListItem>{
                                    new SelectListItem{ Text="General", Value = "1" },
                                    new SelectListItem{ Text="Fixed", Value = "2" }}, new {  @class = "form-control" , @disabled=htmlAttributes,htmlAttributes})

                                </div>
                            </label>
                        </div>
                    </div>
                    
                        <div class="" id="general">
                            <div class="addMoreAddress roundBorderBox">
                                <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                    <h4>Valuation Charges - General Valuation Fees</h4>
                                    <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                </div>
                                <div class="pannel" style="display:none">
                        
                        <div class="flex">
                            <label for="" class="w-50">
                                Valuation Fees (AED)
                               
                                @Html.EditorFor(model => model.ValuationFees, new { htmlAttributes = new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control" ,@placeholder="enter Valuation Fees (AED)",htmlAttributes} })
                                @Html.ValidationMessageFor(model => model.ValuationFees, "", new { @class = "text-danger" })
                            </label>
                            <label for="" class="w-50">
                                VAT (Percent)
                               
                                @Html.EditorFor(model => model.Vat, new { htmlAttributes = new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control", @placeholder="enter VAT (Percent)",htmlAttributes} })
                                @Html.ValidationMessageFor(model => model.Vat, "", new { @class = "text-danger" })
                            </label>
                            </div>
                        <div class="flex">
                            <label for="" class="w-50">
                                Other Charges
                             
                                @Html.EditorFor(model => model.OtherCharges, new { htmlAttributes = new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control",placeholder="enter other chargesr",htmlAttributes } })
                                @Html.ValidationMessageFor(model => model.OtherCharges, "", new { @class = "text-danger" })
                            </label>
                            <label for="" class="w-50">
                                Total evaluation Fees
                                
                                @Html.EditorFor(model => model.TotalValuationFees, new { htmlAttributes = new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control",@placeholder="enter Total evaluation Fees" ,htmlAttributes} })
                                @Html.ValidationMessageFor(model => model.TotalValuationFees, "", new { @class = "text-danger" })
                            </label>
                         </div>
                     </div>
                     </div>
                     </div>
                    <div class="" id="fixed">
                        <div class="addMoreAddress roundBorderBox">
                            <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                <h4>Valuation Charges - Fixed Valuation Fees</h4>
                                <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                            </div>
                            <div class="pannel" style="display:none">
                            <div class="flex">

                                <label for="" class="w-50">
                                    Fixed valuation Fees
                                @Html.EditorFor(model => model.FixedvaluationFees, new { htmlAttributes = new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control",@placeholder="enter Fixed evaluation Fees",htmlAttributes } })
                                    @Html.ValidationMessageFor(model => model.FixedvaluationFees, "", new { @class = "text-danger" })
                                </label>
                            </div>
                        </div>
                        </div>
                        </div>
                    
                    <div class="text-right buttonArea bodyContent plr-0">
                        <a href='/MasterValuationFee/ValuationFees'> <button type="button" class="lineBtn">Cancel</button></a>
                      @*   <button type="submit" id="btnSaveRole" class="bgBlue mr-12">@SharedLocalizer["Save"]</button> *@
                    </div>
                </form>
            </div>
        </div>
    </div>
</main>

@section MyScripts {
    <script type="text/javascript" src="~/js/Custom/ValuationFee/valuationfeedetail.js?v=@jsVersion"></script>

    <script>
        var DeleteValuationByIdUrl = "@Eltizam.Web.Helpers.APIURLHelper.DeleteValuationById";
        var DeleteLabel = "@SharedLocalizer["Delete"]";
        var ErrorMessage = "@SharedLocalizer["Error"]";
        var RecordDelete = "@SharedLocalizer["RecordDelete"]";
        var StatusMessage = '@TempData["StatusMessage"]';

        //#region Setup API Url
        var ValuationFees = "@Eltizam.Web.Helpers.APIURLHelper.GetAllValuation";

        var PropertyList = "@Eltizam.Web.Helpers.APIURLHelper.GetPropertyTypeList";//GetAllPropertyType";
        var ClientTypeList = "@Eltizam.Web.Helpers.APIURLHelper.GetSearchClientType";
        var OwnershipTypeList = "@Eltizam.Web.Helpers.APIURLHelper.OwnershipTypeList";//GetAllOwnershipType";
        var ValuationFeeTypeList = "@Eltizam.Web.Helpers.APIURLHelper.ValuationFeeTypeList";//GetAllValuationFeeType";
        var PropertyByIdSubType = "@Eltizam.Web.Helpers.APIURLHelper.GetPropertyByPropertyTypeId";

        //#region Static Messae Init
        var EditLabel = "@SharedLocalizer["Edit"]";

        var AddLabel = "@SharedLocalizer["Add"]";
        var UpdateLabel = "@SharedLocalizer["Update"]";
    </script>

}

