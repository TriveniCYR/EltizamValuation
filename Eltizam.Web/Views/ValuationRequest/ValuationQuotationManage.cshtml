@using Eltizam.Utility.Models;
@using Microsoft.AspNetCore.Http
@using Eltizam.Web.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHttpContextAccessor HttpContextAccessor
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Master> MasterLocalizer
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Shared> SharedLocalizer

@model Eltizam.Business.Models.ValuationQuatationListModel
@{
    string jsVersion = @Configuration.GetSection("StaticJS")["version"];
    var _header = " Valuation Quotation";
    var _md = @Model.Id > 0 ? "View" : "Add";
    ViewData["Title"] = _md + _header;
    var objPermssion = (RolePermissionModel)ViewBag.Access;
    var isDelete = objPermssion.Delete ? 1 : 0;
}

<!-- system user master -->
<main>
    <div class="whiteBoxShadow">
        <div class="heading position-relative flex justify-between">
            <h3 class="dashboardTitle">@_md @_header</h3>
            <div class="hamburger">
                <a class="greyBtn lineBtn formAbtn" asp-action="ValuationRequests">Valuation Requests</a>
                <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                <a class="greyBtn lineBtn formAbtn" href="ValuationRequestManage?id=@Model.ValuationRequestId">Valuation Details</a>
                <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                <span>@_md @_header</span>
            </div>
        </div>
        <div class="bodyContent">
           @*  <div class="whiteBoxShadow m-0 ">
                <div class="bodyContent footerAudit">
                    <div class=" position-relative flex justify-between align-item-center">
                        <h5 class="m-0">
                            Valuation Id : @Html.DisplayFor(model => model.ValuationRequestId)
                        </h5>
                        <h5 class="m-0">
                            Val. Ref# : @Html.DisplayFor(model => model.ReferenceNo)
                        </h5>
                    </div>
                </div>
            </div> *@
            <div class="inputSearchs uploadDocBox p-0">
                <form asp-action="ValuationQuotationManage" autocomplete="off" asp-controller="ValuationRequest" method="post" enctype="multipart/form-data">
                    @Html.HiddenFor(model => model.Id, new { @class = "control-label" })
                    @Html.HiddenFor(model => model.ValuationRequestId, new { @class = "control-label" })
                    @Html.HiddenFor(model => model.ReferenceNo, new { @class = "control-label" })
                    @Html.HiddenFor(model => model.StatusId, new { @class = "control-label" })
                    @Html.HiddenFor(model => model.ApproverIds, new { @class = "control-label" })
                    <input type="hidden" id="hdnId" value="@(Model == null ? 0 : Model.Id)" />
                    <div class="flex">
                        <label for="" class="w-50">
                            <p class="m-0">Valuation Fees (AED)<span class="text-danger">*</span></p>
                            @Html.EditorFor(model => model.ValuationFee, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control disabletxtbox formatting price clsCalculateFee", @placeholder = "enter Valuation Fees (AED)" } })
                            @Html.ValidationMessageFor(model => model.ValuationFee, "", new { @class = "text-danger" })
                        </label>
                        <label for="" class="w-50">
                            <p class="m-0">VAT (Percent)<span class="text-danger">*</span></p>
                            @Html.EditorFor(model => model.Vat, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control disabletxtbox formatting price clsCalculateFee", @placeholder = "enter VAT (Percent)" } })
                            @Html.ValidationMessageFor(model => model.Vat, "", new { @class = "text-danger" })
                        </label>
                    </div>
                    <div class="flex">
                        <label for="" class="w-50">
                            <p class="m-0">Other Charges<span class="text-danger">*</span></p>
                            @Html.EditorFor(model => model.OtherCharges, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control disabletxtbox formatting price clsCalculateFee", placeholder = "enter other charges" } })
                            @Html.ValidationMessageFor(model => model.OtherCharges, "", new { @class = "text-danger" })
                        </label>
                        <label for="" class="w-50">
                            Valuation Instructor Charges
                            @Html.EditorFor(model => model.InstructorCharges, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control disabletxtbox formatting price clsCalculateFee", placeholder = "enter Instructor charges" } })
                            @Html.ValidationMessageFor(model => model.InstructorCharges, "", new { @class = "text-danger" })
                        </label>
                    </div>
                    <div class="flex mb-28">
                        <label for="userName" class="w-50">
                            Discount
                            @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control disabletxtbox formatting price clsCalculateFee", placeholder = "enter Discount" } })
                            @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                        </label>
                        <label for="userName" class="w-50">
                            <p class="m-0">Total evaluation Fees<span class="text-danger">*</span></p>
                            @Html.EditorFor(model => model.TotalFee, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control disabletxtbox formatting price", @placeholder = "enter Total Fees", @onchange = "GetApproverLevel(this.value)" } })
                            @Html.ValidationMessageFor(model => model.TotalFee, "", new { @class = "text-danger" })
                        </label>
                    </div>
                    <div class="tabSection">
                        <h3 class="mb-28">Documents</h3>
                        <div class="inputSearchs uploadDocBox">

                            <div class="tabSection">
                                @if (ViewBag.IsView != 1)
                                {
                                    <div class="flex">
                                        <label for="" class="w-100">
                                            <span class="m-0" style="font-weight:normal;">File size upto 5MB *</span>
                                            <input type="file" class="fileInput" asp-for="Document.Files" multiple onchange="validateFileSize(this)">
                                            <input type="text" class="fileNames" readonly placeholder="file names">
                                        </label>
                                    </div>
                                }
                                <div class="W-100">
                                    <div class="prevUpload roundBorderBox m-0">
                                        <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                            <p>Previously uploaded</p>
                                            <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                        </div>
                                        <div class="scroll-x">
                                            <table id="UserTableDocument" class="table-striped">
                                                <thead>
                                                    <tr>
                                                        <th>File Name</th>
                                                        <th>Updated Date</th>
                                                        <th>Uploaded By</th>
                                                        <th>Download</th>
                                                        @if (_md != "View")
                                                        {
                                                            <th>Action</th>
                                                        }
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.Documents != null)
                                                    {
                                                        @foreach (var docs in Model.Documents)
                                                        {
                                                            <tr id="@docs.Id">
                                                                <td>@docs.DocumentName</td>
                                                                <td class="formatted-td-date-input">@docs.CreatedDate.ToString() </td>
                                                                <td>@docs.CreatedName</td>
                                                                <td><a href="@docs.FilePath" download target="_blank"><img src="../assets/download.svg" alt="download" /></a></td>
                                                                @if (_md != "View")
                                                                {
                                                                    <td><a title="Delete" data-toggle="modal" data-target="#DeleteDocumentModel" data-backdrop="static" data-keyboard="false" onclick="ConfirmationDocument(@docs.Id,'isAssesment'); return false;"><img src="../assets/trash.svg" alt="trash" /></a></td>
                                                                }
                                                            </tr>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <tr>
                                                            <td colspan="5">NA</td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="text-right ptrl-20 buttonArea bodyContent plr-0">
                        <a href='/ValuationRequest/ValuationRequests'> <button type="button" class="lineBtn greyBtn mr-12">Cancel</button></a>
                        @if (ViewBag.IsView != 1)
                        {
                            <button id="levelApprover" type="submit" class="blueBtn" style="width: 100px;border-radius: 4px;padding: 12px;">
                                Save
                            </button>
                        }
                    </div>
                </form>
            </div>
        </div>
    </div>
</main>


<!-- Modal for Latest requests -->
<div class="modal fade" id="LevelApproverModal" tabindex="-1" role="dialog" aria-labelledby="MyLevelApprover">
    <div class="modal-dialog">
        <div class="modal-content" style="width:610px">
            <div class="modal-header">
                <h5 class="modal-title" id="myModalLabel">Approver Level(s)</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" >
                <div>
                    <!-- Table to display data -->
                    <div class="row" style="padding: 12px 60px">
                        <label for="ApproverId2" class="w-100">
                            <p class="m-0">2 Level Approver<span class="text-danger"></span></p>
                            @Html.DropDownList("ApproverId2", new List<SelectListItem> { }, new { @class = "form-control" })
                        </label>
                    </div>

                    <div class="row" style="padding: 12px 60px">
                        <label for="ApproverId3" class="w-100">
                            <p class="m-0">3 Level Approver<span class="text-danger"></span></p>
                            @Html.DropDownList("ApproverId3", new List<SelectListItem> { }, new { @class = "form-control" })
                        </label>
                    </div> 

                    <div class=" w-100 text-right">
                        <div>
                            <div class="buttonArea">
                                <button type="submit" data-dismiss="modal" class="blueBtn" onclick="AssignLevelApprover()">Assign</button>
                                <button type="button" class="greyBtn" data-dismiss="modal">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div> 
        </div>
    </div>
</div>


<div id="DeleteDocumentModel" class="modal themeModal " role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@SharedLocalizer["Delete"]</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Label(@SharedLocalizer["DeleteConfirm"])
                        </div>
                    </div>
                </div>
                @Html.Hidden("ID")
                <div class="buttonArea popup-btn">
                    <button class="gray" data-dismiss="modal">@SharedLocalizer["Cancel"]</button>
                    <button type="button" onclick="DeleteDocument()" data-dismiss="modal" class="redBtn">@SharedLocalizer["Delete"]</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section MyScripts {
    <script type="text/javascript" src="~/js/custom/ValuationRequest/ValuationQuatationManage.js?v=@jsVersion"></script> 
    <script>
    var GetLevelApprover = "@Eltizam.Web.Helpers.APIURLHelper.GetApproverLevel";

    </script>
}
