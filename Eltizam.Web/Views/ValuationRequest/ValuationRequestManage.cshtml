@using Eltizam.Utility.Models;
@using Eltizam.Utility.Enums;
@using Microsoft.AspNetCore.Http
@using Eltizam.Web.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHttpContextAccessor HttpContextAccessor
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Master> MasterLocalizer
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Shared> SharedLocalizer

@model Eltizam.Business.Models.ValuationRequestModel
@{
    string jsVersion = @Configuration.GetSection("StaticJS")["version"];
    var _header = " Valuation Request";
    var _md = Model.Id > 0 ? "Edit" : "Add";
    var objPermssion = (RolePermissionModel)ViewBag.Access; // TODO: Return the list for Request, Quoation & Invoice

    var isAdd = objPermssion.Add ? 1 : 0;
    var isEdit = objPermssion.Edit ? 1 : 0;
    var isApprove = objPermssion.Approve ? 1 : 0;
    var roleId = objPermssion.RoleId;
    var subModuleId = objPermssion.SubModuleId;

    var objPermssionQt = (RolePermissionModel)ViewBag.QuotationAccess;
    var isAddQt = objPermssionQt.Add ? 1 : 0;
    var isEditQt = objPermssionQt.Edit ? 1 : 0;
    var isViewQt = objPermssionQt.View ? 1 : 0;

    var objPermssionIn = (RolePermissionModel)ViewBag.InvoiceAccess;
    var isAddIn = objPermssionIn.Add ? 1 : 0;
    var isEditIn = objPermssionIn.Edit ? 1 : 0;
    var isViewIn = objPermssionIn.View ? 1 : 0;
    ViewData["Title"] = _md + _header;
    var htmlAttributes = true;
}

<div id="PlaceHolderHere"></div>
<main class="">
    <div class="whiteBoxShadow">
        <div class="flex justify-between align-item-center cursor-pointer heading position-relative">
            <h3 class="dashboardTitle">@_md @_header</h3>
            <div class="hamburger">
                <a class="greyBtn lineBtn formAbtn" asp-action="ValuationRequests">@_header</a>
                <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                <span>@_md @_header</span>
            </div>
        </div>
        <div class="bodyContent">
            <div class="profileTabSection inputSearchs p-0 ">
                <div class="tab">
                    <button class="tablinks" onclick="profileTab(event, 'profile1')" id="defaultOpen">Property Details</button>
                    <button class="tablinks" style="display: @(objPermssionQt.View ? "block" : "none")" onclick="profileTab(event, 'profile2')">Quotation Listing</button>
                    <button class="tablinks" style="display: @(objPermssionIn.View ? "block" : "none")" onclick="profileTab(event, 'profile3')">Payment Details</button>
                </div>

                <div id="profile1" class="tabcontent p-0">
                    <h3 class="blueHeading">Valuation Details</h3>
                    <div class="inputSearchs p-0">
                        <form asp-action="ValuationRequestManage">
                            <input type="hidden" id="isAddPerm" value="@isAdd" />
                            <input type="hidden" id="isEditPerm" value="@isEdit" />
                            <input type="hidden" id="isAddPermQuotation" value="@isAddQt" />
                            <input type="hidden" id="isEditPermQuotation" value="@isEditQt" />
                            <input type="hidden" id="isAddPermInvoice" value="@isAddIn" />
                            <input type="hidden" id="isEditPermInvoice" value="@isEditIn" />
                            <input type="hidden" id="isApprovePerm" value="@isApprove" />

                            <input type="hidden" id="hdnId" value="@(Model == null ? 0 : Model.Id)" />
                            <input type="hidden" id="hdnReferenceNo" value="@(Model == null ? 0 : Model.ReferenceNo)" />
                            <input type="hidden" id="hdnStatusId" value="@(Model == null ? 0 : Model.StatusId)" />

                            @Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.ReferenceNo)
                            <input type="hidden" id="hdnClientId" value="@(Model == null ? 0 : Model.ClientId)" />
                            <input type="hidden" id="hdnApproverId" value="@(Model == null ? 0 : Model.ApproverId)" />
                            <input type="hidden" id="hdnValuationModeId" value="@(Model == null ? 0 : Model.ValuationModeId)" />
                            <input type="hidden" id="hdnValuerId" value="@(Model == null ? 0 : Model.ValuerId)" />
                            <input type="hidden" id="hdnClientTypeId" value="@(Model == null ? 0 : Model.ClientTypeId)" />
                            <input type="hidden" id="hdnClientName" value="@(Model == null ? 0 : Model.ClientName)" />
                            <input type="hidden" id="hdnRoleId" value=@roleId />
                            <input type="hidden" id="roleEnum" value=@roleId />
                            <div class="ptrl-20">
                                <div class="flex  mb-28">

                                    <label for="" class="w-50">
                                        Valuation Reference no
                                        @Html.TextBoxFor(model => model.ReferenceNo, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Valuation Reference no"] })
                                        @*  <input type="text" placeholder="12837187236" disabled> *@
                                    </label>
                                    <label for="" class="w-50">
                                        Other Reference no
                                        @Html.TextBoxFor(model => model.OtherReferenceNo, new { @class = "form-control", @placeholder = @SharedLocalizer["Other Reference no"] })
                                        @*  <input type="text" placeholder="12837187236" disabled> *@
                                    </label>
                                </div>
                                <div class="flex  mb-28">
                                    <label for="" class="w-50">
                                        Approver Name
                                        @Html.DropDownList("ApproverId", new List<SelectListItem> { }, new { @class = "form-control" })
                                        @*  <input type="text" placeholder="Clyde" disabled> *@
                                    </label>
                                    <label for="" class="w-50">
                                        Valuer Name
                                        @Html.DropDownList("ValuerId", new List<SelectListItem> { }, new { @class = "form-control" })
                                        @* <input type="text" placeholder="Clyde" disabled> *@
                                    </label>

                                </div>

                                <div class="flex  mb-28">
                                    <label for="" class="w-50">
                                        <p class="m-0">Valuation Status<span class="text-danger">*</span></p>
                                        @Html.DropDownListFor(model => model.StatusId, new List<SelectListItem> { }, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                                    </label>

                                    <label for="" class="w-50 m-0" id="comment">
                                        Review Comment
                                        @Html.TextBoxFor(model => model.ApproverComment, new { @class = "form-control", @placeholder = @SharedLocalizer[""] })
                                        @*  <input type="text" placeholder="12837187236" disabled> *@
                                    </label>
                                    <label for="" class="w-50">
                                        Valuation Date
                                        <input type="text" class="formatted-date-input" id="ValuationDate" name="ValuationDate" asp-for="ValuationDate">
                                        @*  <input type="date"> *@
                                    </label>
                                </div>
                                <div class="flex  mb-28">
                                    <label for="" class="w-50 m-0">
                                        <p class="m-0">Valuation Date<span class="text-danger">*</span></p>
                                        <input type="date" id="ValuationDate" name="ValuationDate" asp-for="ValuationDate">
                                        @Html.ValidationMessageFor(model => model.ValuationDate, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="" class="bodyContent p-0 w-50">
                                        Method of Valuation
                                        <div class="flex m-0 valuationType">
                                            @Html.DropDownList("ValuationModeId", new List<SelectListItem> { }, new { @class = "form-control" })
                                        </div>
                                    </label>
                                </div>
                                <div class="flex  mb-28">
                                    <label for="" class="w-50">
                                        Valuation Time Frame
                                        @Html.TextBoxFor(model => model.ValuationTimeFrame, new { @class = "form-control", @placeholder = @SharedLocalizer["Valuation Time Frame"] })
                                        @* <input type="text" placeholder="enter days"> *@
                                    </label>
                                </div>

                            </div>
                            <div class="roundBorderBox ptrl-20">
                                <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                    <h3 class="blueHeading p-0">Client Details</h3>
                                    <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                </div>
                                <div class="inputSearchs p-0">

                                    <input type="hidden" id="hdnCountry" value="@(Model == null ? 0 : Model.CountryId)" />
                                    <input type="hidden" id="hdnState" value="@(Model == null ? 0 : Model.StateId)" />
                                    <input type="hidden" id="hdnCity" value="@(Model == null ? 0 : Model.CityId)" />
                                    <div class="flex  mb-28">
                                        <label for="" class="w-50">
                                            <p class="m-0">Client Type<span class="text-danger">*</span></p>
                                            @Html.DropDownListFor(model => model.ClientTypeId, new List<SelectListItem> { }, new { @class = "form-control", @onchange = "BindClientByClientType(this.options[this.selectedIndex].value)" })
                                            @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
                                        </label>
                                        <label for="" class="w-50">
                                            <p class="m-0">Clients<span class="text-danger">*</span></p>
                                            @Html.DropDownListFor(model => model.ClientId, new List<SelectListItem> { }, new { @class = "form-control", @onchange = "BindClientDetailsByClientId(this.options[this.selectedIndex].value)" })
                                            @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
                                        </label>

                                    </div>
                                    <div class="flex  mb-28">
                                        <label for="" class="w-50">
                                            Company Name
                                            <input type="text" placeholder="ICICI Bank" disabled>
                                        </label>
                                        <label for="" class="w-50">
                                            <p class="m-0">Clients<span class="text-danger">*</span></p>
                                            @Html.TextBoxFor(model => model.ClientName, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Client Name"] })
                                            @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
                                        </label>
                                    </div>
                                    <div class="flex  mb-28">
                                        <label for="" class="w-50">
                                            Pincode
                                            @Html.TextBoxFor(model => model.PinCode, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Client Name"] })
                                            @*  <input type="text" placeholder="234343" disabled> *@
                                        </label>
                                        <label for="" class="w-50">
                                            Country
                                            @Html.DropDownListFor(model => model.CountryId, new List<SelectListItem> { }, new { @disabled = htmlAttributes, @class = "form-control", @onchange = "BindState(this.options[this.selectedIndex].value)" })

                                        </label>
                                    </div>
                                    <div class="flex  mb-28">
                                        <label for="" class="w-50">
                                            State
                                            @Html.TextBoxFor(model => model.StateId, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["State Name"] })
                                        </label>
                                        <label for="" class="w-50">
                                            City
                                            @Html.TextBoxFor(model => model.CityId, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["City Name"] })
                                        </label>
                                    </div>
                                    <div class="flex  mb-28">
                                        <label for="" class="w-50">
                                            TRN Number
                                            @Html.TextBoxFor(model => model.Trnnumber, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["TRN Number"] })
                                        </label>
                                        <label for="" class="w-50">
                                            TRN Expiry Date
                                            <input type="text" id="TrnexpiryDate" name="TrnexpiryDate" disabled="disabled">
                                        </label>
                                    </div>

                                    <div class="flex ">
                                        <label for="" class="w-50">
                                            License Number
                                            @Html.TextBoxFor(model => model.LicenseNumber, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["License Number"] })
                                        </label>
                                    </div>

                                    <h3>Addrress Details</h3>
                                    <div class="flex m-0">
                                        <table class="multipleValueTable valueReqTable" id="NewAddressTable">
                                            <thead>
                                                <tr>
                                                    <th>Address 1</th>
                                                    <th>Address 2</th>
                                                    <th>City</th>
                                                    <th>State</th>
                                                    <th>Country</th>
                                                    <th>Zip / PO Box</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>


                                    <h3>Contact Details</h3>
                                    <div class="inputSearchs p-0">
                                        <table class="multipleValueTable valueReqTable" id="NewContactTable">
                                            <thead>
                                                <tr>
                                                    <th>Contact Person Name</th>
                                                    <th>Department</th>
                                                    <th>Designation</th>
                                                    <th>Email ID</th>
                                                    <th>Phone Number</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>

                            </div>
                            <div class="roundBorderBox ptrl-20">
                                <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                    <h3 class="blueHeading p-0">Property Details</h3>
                                    <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                </div>
                                <div class="inputSearchs p-0">

                                    <input type="hidden" id="hdnPropertyType" value="@(Model == null ? 0 : Model.PropertyTypeId)" />
                                    <input type="hidden" id="hdnPropertySub" value="@(Model == null ? 0 : Model.PropertySubTypeId)" />
                                    <input type="hidden" id="hdnOwnershipType" value="@(Model == null ? 0 : Model.OwnershipTypeId)" />
                                    <input type="hidden" id="hdnPropertyId" value="@(Model.PropertyId)" />
                                    <input type="hidden" id="hdnPropertyName" value="@(Model == null ? 0 : Model.PropertyName)" />
                                    <div class="flex  mb-28">
                                        <label for="" class="w-50">
                                            Property Type Name
                                            @Html.DropDownListFor(model => model.PropertyTypeId, new List<SelectListItem> { }, new { @class = "form-control", @onchange = "BindPropertySub(this.options[this.selectedIndex].value);" })
                                            @*   <input type="text" placeholder="ABC" disabled> *@
                                        </label>
                                        <label for="" class="w-50">
                                            Property SubType Name
                                            @Html.DropDownListFor(model => model.PropertySubTypeId, new List<SelectListItem> { }, new { @class = "form-control",/*  @disabled = "disabled" */})
                                        </label>
                                    </div>
                                    <div class="flex  mb-28">
                                        <label for="" class="w-50">
                                            Type of Ownership
                                            @Html.DropDownListFor(model => model.OwnershipTypeId, new List<SelectListItem> { }, new { @class = "form-control", @onchange = "BindPropertyDetail()" })
                                        </label>

                                        <label for="" class="w-50">
                                            Property Name
                                            @Html.DropDownListFor(model => model.PropertyId, new List<SelectListItem> { }, new { @class = "form-control", @onchange = "BindPropertyDetailById(this.options[this.selectedIndex].value)" })
                                            @*   @Html.TextBoxFor(model => model.PropertyName, new { @class = "form-control",  @placeholder = @SharedLocalizer["Property Name"] }) *@
                                            @*  @Html.ValidationMessageFor(model => model.PropertyName, "", new { @class = "text-danger" }) *@
                                        </label>
                                    </div>
                                    <div class="flex mb-28">
                                        <label for="" class="w-50">
                                            Unit Type
                                            @Html.DropDownListFor(model => model.UnitType, new List<SelectListItem> { }, new { @disabled = htmlAttributes, @class = "form-control" })
                                            @*    @Html.ValidationMessageFor(model => model.OwnershipTypeId, "", new { @class = "text-danger" }) *@
                                        </label>
                                        <label for="" class="w-50">
                                            Additional Units
                                            @Html.TextBoxFor(model => model.AdditionalUnits, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Additional Unit"] })

                                        </label>
                                    </div>
                                    <div class="flex mb-28">
                                        <label for=" class=" w-50"">
                                            <p class="m-0">
                                                Furnished
                                            </p>
                                            @Html.DropDownListFor(model => model.Furnished, new List<SelectListItem> { }, new { @disabled = htmlAttributes, @class = "form-control" })
                                            @* @Html.ValidationMessageFor(model => model.OwnershipTypeId, "", new { @class = "text-danger" }) *@
                                        </label>
                                        <label for="" class="w-50">
                                            Purpose of Valuation
                                            @Html.TextBoxFor(model => model.ValuationPurpose, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Valuation Purpose"] })

                                        </label>
                                    </div>
                                    <div class="flex mb-28">
                                        <label for="" class="w-50">
                                            <p class="m-0">
                                                Built Up Area (Sq.Ft)
                                            </p>
                                            @Html.TextBoxFor(model => model.BuildUpAreaSqFt, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Area in Sq Ft"] })
                                            @*  @Html.ValidationMessageFor(model => model.BuildUpAreaSqFt, "", new { @class = "text-danger" }) *@
                                        </label>
                                        <label for="" class="w-50">
                                            <p class="m-0">
                                                Built up Area (Sq.Meter)
                                            </p>
                                            @Html.TextBoxFor(model => model.BuildUpAreaSqMtr, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Area in Sq Mtr"] })
                                            @*   @Html.ValidationMessageFor(model => model.BuildUpAreaSqMtr, "", new { @class = "text-danger" }) *@
                                        </label>
                                    </div>
                                    <div class="flex mb-28">
                                        <label for="" class="w-50">
                                            Age of construction
                                            @Html.TextBoxFor(model => model.AgeOfConstruction, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Area in Sq Mtr"] })

                                        </label>
                                        <label for="" class="w-50">
                                            Parking
                                            @Html.TextBoxFor(model => model.Parking, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Parking"] })

                                        </label>
                                    </div>
                                    <div class="flex mb-28">
                                        <label for="" class="w-50">
                                            Parking BAY Number
                                            @Html.TextBoxFor(model => model.ParkingBayNo, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Parking Bay No"] })

                                        </label>
                                        <label for="" class="w-50">
                                            Description
                                            @Html.TextBoxFor(model => model.Description, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Description"] })

                                        </label>

                                    </div>
                                    <h3 class="blueHeading mb-16"> Amenities</h3>
                                    <div class="inputSearchs p-0">
                                        <div class="form">
                                            <div class="flex mb-28 flex-start" id="amentiesdiv">
                                                @{
                                                    if (Model.AmenityList != null)
                                                    {
                                                        @for (int z = 0; z < Model.AmenityList.Count; z++)
                                                        {
                                                            var amt = @Model.AmenityList[z];
                                                            <label for="" class="position-relative checkboxBtn w-30 mr-20">
                                                                @Html.HiddenFor(m => m.AmenityList[z].Id)
                                                                @Html.HiddenFor(m => m.AmenityList[z].AmenityId)
                                                                @Html.HiddenFor(m => m.AmenityList[z].PropertyId)
                                                                @Html.CheckBoxFor(model => Model.AmenityList[z].IsActive, new { @class = "checkbox-checked", @checked = "checked" })
                                                                <p>@amt.AmenityName</p>
                                                                <img src="/assets/@amt.Icon" class="amenitiesIcon">
                                                            </label>
                                                        }
                                                    }
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="text-right buttonArea bodyContent">
                                <button type="button" class="lineBtn greyBtn">Cancel</button>

                               @*  @if (roleId == (int)RoleEnum.Admin)
                                {
                                    <button type="submit" class="blueBtn" style="width:100px">Save</button>
                                }

                                @if (roleId == (int)RoleEnum.Approver || roleId == (int)RoleEnum.Valuer)
                                {
                                    <button type="button" class="blueBtn" id="isApprove" style="width:100px">
                                        Save
                                    </button>
                                } *@


                                <button type="submit" class="blueBtn" id="btnSaveEdit" style="width:100px">Save</button>
                               @*  <button type="button" class="blueBtn" id="btnSaveApprove" style="width:100px">Save</button> *@
                                @if (roleId == (int)RoleEnum.Approver || roleId == (int)RoleEnum.Valuer)
                                {
                                    <button type="button" class="blueBtn" id="btnSaveApprove" style="width:100px">
                                        Save
                                    </button>
                                } 
                            </div>
                        </form>
                    </div>
                </div>


                <div id="profile2" class="tabcontent">
                    <div class="buttonArea">
                        <div class="flex justify-between align-item-center plr-0">

                            <h3>Quotation Listing</h3>
                            <a href="/ValuationRequest/ValuationQuotationManage?vId=@Model.Id&refNo=@Model.ReferenceNo">
                                <button id="addNewQt" class="blueBtn" style="width:120px">
                                    <img src="../assets/plus.svg" alt="plus">
                                    Add New
                                </button>
                            </a>
                        </div>
                    </div>
                    <div class="scroll-x">
                        <table id="QuatationTable" class="table-striped">
                            <thead>
                                <tr>
                                    <th>#Quotation</th>
                                    <th>Valuation Charges</th>
                                    <th>VAT</th>
                                    <th>Other Charges</th>
                                    <th>Discount (%)</th>
                                    <th>Total Valuation Charge</th>
                                    <th>Creation Date</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>


                <div id="profile3" class="tabcontent">
                    <div class="buttonArea">
                        <div class="flex justify-between align-item-center p-0">
                            <h3>Invoice Listing</h3>
                            <a href="/ValuationRequest/ValuationInvoiceManage?vId=@Model.Id&refNo=@Model.ReferenceNo">
                                <button class=" blueBtn " style="width:120px" id="addNewIn">
                                    <img src="../assets/plus.svg" alt="plus">
                                    Add New
                                </button> 
                            </a>
                        </div>
                    </div> 

                    <div class="scroll-x">
                        <table id="InvoiceTable" class="table-striped">
                            <thead>
                                <tr>
                                    <th>#Invoice</th>
                                    <th>Valuation Request Id</th>
                                    <th>Transaction Model</th>
                                    <th>Transaction Status</th>
                                    <th>Amount</th>
                                    <th>Transaction Date</th>
                                    <th>Creation Date</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div> 
                </div>
            </div>
        </div>
    </div>
</main>


<div id="DeleteQuotationModel" class="modal themeModal " role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@SharedLocalizer["Delete"]</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Label(@SharedLocalizer["DeleteConfirm"])
                        </div>
                    </div>
                </div>
                @Html.Hidden("Id")
                <div class="buttonArea popup-btn">
                    <button class="gray" data-dismiss="modal">@SharedLocalizer["Cancel"]</button>
                    <button type="button" onclick="DeleteQuotation()" data-dismiss="modal" class="redBtn">@SharedLocalizer["Delete"]</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="DeleteInvoiceModel" class="modal themeModal " role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@SharedLocalizer["Delete"]</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Label(@SharedLocalizer["DeleteConfirm"])
                        </div>
                    </div>
                </div>
                @Html.Hidden("Id")
                <div class="buttonArea popup-btn">
                    <button class="gray" data-dismiss="modal">@SharedLocalizer["Cancel"]</button>
                    <button type="button" onclick="DeleteInvoice()" data-dismiss="modal" class="redBtn">@SharedLocalizer["Delete"]</button>
                </div>
            </div>
        </div>
    </div>
</div>


@section MyScripts {
    <script type="text/javascript" src="~/js/custom/ValuationRequest/ValuationRequestManage.js?v=@jsVersion"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>

        //var DeleteValuationByIdUrl = "@Eltizam.Web.Helpers.APIURLHelper.DeleteValuationById";
        var DeleteLabel = "@SharedLocalizer["Delete"]";
        var ErrorMessage = "@SharedLocalizer["Error"]";
        var RecordDelete = "@SharedLocalizer["RecordDelete"]";
        var StatusMessage = '@TempData["StatusMessage"]';

        //#region Setup API Url
        // var ValuationFees = "@Eltizam.Web.Helpers.APIURLHelper.GetAllValuation";
        var GetAllValuationRequestStatus = "@Eltizam.Web.Helpers.APIURLHelper.GetAllValuationRequestStatus";
        var PropertyList = "@Eltizam.Web.Helpers.APIURLHelper.GetPropertyTypeList";//GetAllPropertyType";
        var PropertyByIdSubType = "@Eltizam.Web.Helpers.APIURLHelper.GetPropertyByPropertyTypeId";
        var ClientTypeList = "@Eltizam.Web.Helpers.APIURLHelper.GetSearchClientType";
        var ClientByClientTypeId = "@Eltizam.Web.Helpers.APIURLHelper.GetClientByClientTypeId";
        var OwnershipTypeList = "@Eltizam.Web.Helpers.APIURLHelper.OwnershipTypeList";//GetAllOwnershipType";
        var GetPropertyByFilters = "@Eltizam.Web.Helpers.APIURLHelper.GetPropertyByFilters";//GetAllOwnershipType";
        var GetPropertyById = "@Eltizam.Web.Helpers.APIURLHelper.GetPropertyById";//GetAllOwnershipType";
        var GetClientDetailById = "@Eltizam.Web.Helpers.APIURLHelper.GetClientById";//GetAllOwnershipType";
        // var ValuationFeeTypeList = "@Eltizam.Web.Helpers.APIURLHelper.ValuationFeeTypeList";//GetAllValuationFeeType";
        var CountryList = "@Eltizam.Web.Helpers.APIURLHelper.GetCountryList";
        var stateListUrl = "@Eltizam.Web.Helpers.APIURLHelper.GetStateListByCountryId";
        var cityListUrl = "@Eltizam.Web.Helpers.APIURLHelper.GeCityListByStateId";
        var GetApproverList = "@Eltizam.Web.Helpers.APIURLHelper.GetApproverList";
        var GetValuerList = "@Eltizam.Web.Helpers.APIURLHelper.GetApproverList";
        var GetDictionaryWithSubDetails = "@Eltizam.Web.Helpers.APIURLHelper.GetDictionaryWithSubDetails";
        var ValuationRequestGetById = "@Eltizam.Web.Helpers.APIURLHelper.ValuationRequestGetById";
        var ValuationQuatationById = "@Eltizam.Web.Helpers.APIURLHelper.ValuationQuatationById";
        var ValuationInvoiceList = "@Eltizam.Web.Helpers.APIURLHelper.ValuationInvoiceList";
        var ValuationQuatationList = "@Eltizam.Web.Helpers.APIURLHelper.ValuationQuatationList";
        var DeleteQuotationByIdUrl = "@Eltizam.Web.Helpers.APIURLHelper.DeleteQuotationById";
        var DeleteInvoiceByIdUrl = "@Eltizam.Web.Helpers.APIURLHelper.DeleteInvoiceById";
        var ValuationRequestGetById = "@Eltizam.Web.Helpers.APIURLHelper.ValuationRequestGetById";
        var RequeStatusReview = "@Eltizam.Web.Helpers.APIURLHelper.ReviewRequestStatus";




        //#region Static Messae Init
        var EditLabel = "@SharedLocalizer["Edit"]";

        var AddLabel = "@SharedLocalizer["Add"]";
        var UpdateLabel = "@SharedLocalizer["Update"]";
        var isViewQt = objPermssionQt.View ? true : false;


    </script>

}
