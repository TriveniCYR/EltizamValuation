@using Eltizam.Business.Models
@using Eltizam.Utility.Models;
@using Eltizam.Utility.Enums;
@using Eltizam.Web.Helpers
@using Microsoft.AspNetCore.Http
@using Eltizam.Web.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHttpContextAccessor HttpContextAccessor
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Master> MasterLocalizer
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Shared> SharedLocalizer

@model Eltizam.Business.Models.ValuationRequestModel
@{
    string jsVersion = @Configuration.GetSection("StaticJS")["version"];
    var _header = " Valuation Request";
    var _md = Model.Id > 0 ? "Edit" : "Add";
    var isView = ViewData["Title"] = _md + _header;

    var objPermssion = (RolePermissionModel)ViewBag.Access; // TODO: Return the list for Request, Quoation & Invoice
    var isDelete = objPermssion.Delete ? 1 : 0;
    var isAdd = objPermssion.Add ? 1 : 0;
    var isEdit = objPermssion.Edit ? 1 : 0;
    var isApprove = objPermssion.Approve ? 1 : 0;
    var roleId = objPermssion.RoleId;
    var subModuleId = objPermssion.SubModuleId;

    var objPermssionQt = (RolePermissionModel)ViewBag.QuotationAccess;
    var isAddQt = objPermssionQt.Add ? 1 : 0;
    var isEditQt = objPermssionQt.Edit ? 1 : 0;
    var isViewQt = objPermssionQt.View ? 1 : 0;
    var isDeleteQt = objPermssionQt.Delete ? 1 : 0;

    var objPermssionIn = (RolePermissionModel)ViewBag.InvoiceAccess;
    var isAddIn = objPermssionIn.Add ? 1 : 0;
    var isEditIn = objPermssionIn.Edit ? 1 : 0;
    var isViewIn = objPermssionIn.View ? 1 : 0;
    var isDeleteIn = objPermssionIn.Delete ? 1 : 0;

    var objPermssionSite = (RolePermissionModel)ViewBag.SiteDescription;
    var isAddSite = objPermssionSite.Add ? 1 : 0;
    var isEditSite = objPermssionSite.Edit ? 1 : 0;
    var isViewSite = objPermssionSite.View ? 1 : 0;
    var isDeleteSite = objPermssionSite.Delete ? 1 : 0;


    var objPermssionevidence = (RolePermissionModel)ViewBag.ComparableEvidences;
    var isAddEvidence = objPermssionevidence.Add ? 1 : 0;
    var isEditEvidence = objPermssionevidence.Edit ? 1 : 0;
    var isViewEvidence = objPermssionevidence.View ? 1 : 0;
    var isDeleteEvidence = objPermssionevidence.Delete ? 1 : 0;

    var objPermssionAssesment = (RolePermissionModel)ViewBag.ValuationAssessement;
    var isAddAssesment = objPermssionAssesment.Add ? 1 : 0;
    var isEditAssesment = objPermssionAssesment.Edit ? 1 : 0;
    var isViewAssesment = objPermssionAssesment.View ? 1 : 0;
    var isDeleteAssesment = objPermssionAssesment.Delete ? 1 : 0;

    var htmlAttributes = true;
    var isHideBtn = ViewBag.PageViewMode == 1;

    // Get distinct levels
    var Levels = Model.ValuationRequestApproverLevel;
    var distinctLevels = Levels?.Select(approverLevel => approverLevel.ApproverLevelId).Distinct();
    var LevelsApproved = Model.ValuationRequestApproverLevel?.Where(a => a.IsSelected != null).ToList();
    
    var _valRegHeader = (ValuationRequestDependencies)TempData[UserHelper.ValReqHeader];
}

<div id="PlaceHolderHere"></div>
<main class="bodyContent">
    <div class="whiteBoxShadow">
        <div class="flex justify-between align-item-center cursor-pointer heading position-relative">
            <h3 class="dashboardTitle">@_md @_header</h3>
            <div class="hamburger">
                <a class="greyBtn lineBtn formAbtn" asp-action="ValuationRequests">@_header</a>
                <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                <span>@_md @_header</span>
                <input type="hidden" id="md" value="@_md" />
            </div>
        </div>

        <div class="">
            <div class="profileTabSection inputSearchs p-0 ">
                @if (Model.Id > 0 && _valRegHeader != null)
                {
                    <div class="whiteBoxShadow m-0" id="valReqHeader">
                        <div class=" position-relative flex justify-between align-item-center" style="margin: 10px 10px 5px 15px;font-size: 16px;">
                            <label style="font-size:16px;">
                                Val. Ref# : @_valRegHeader.ReferenceNo
                            </label>
                            <label style="font-size:16px;">
                                Client : @_valRegHeader.ClientName
                            </label>
                            <label style="font-size:16px;">
                                Property : @_valRegHeader.PropertyName
                            </label>
                            <label style="font-size:16px;">
                                Status : <label class="tableStatusBanner" style="color: @_valRegHeader.ColorCode; background-color: @_valRegHeader.BackGroundColor; border: 1px solid @_valRegHeader.ColorCode;">
                                    @_valRegHeader.StatusName
                                </label>
                            </label>

                            <div class="flex align-item-center position-relative" onclick="showValuationActions()">
                                <label class="visible-in-web">
                                    Valuation Actions<br>
                                </label>

                                <img src="/assets/arrow-down.svg" alt="arrow-down" class="cursor-pointer visible-in-web" style="width: 2em;background-color: var(--blue);margin-left: 1em;">
                                <div id="ValuationActions" class="actionItem" style="width: 95%;display: none;margin:1.2em 0em 0em 0em;">
                                    <ul>
                                        <li>
                                            <a href="#">
                                                Mark as Quoted
                                            </a>
                                        </li>  
                                         <li>
                                            <a href="#">
                                                Mark as Paid
                                            </a>
                                        </li>  
                                         <li>
                                            <a href="#">
                                                Submitted to Approver
                                            </a>
                                        </li>
                                        <li>
                                            <a href="#">
                                                Submitted to Valuer
                                            </a>
                                        </li>
                                        <li>
                                            <a href="#">
                                                Approved
                                            </a>
                                        </li>
                                        <li>
                                            <a href="#">
                                                Rejected
                                            </a>
                                        </li>
                                        <li>
                                            <a href="#">
                                                Cancelled
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                }


                <div class="tab flex flex-start m-0 ptrl-20">
                    <button class="tablinks" onclick="profileTab(event, 'profile1')" id="defaultOpen">Valuation Details</button>
                    @{
                        var displayStyleQt = (objPermssionQt.View == false) ? "none" : (_md.Equals("Add") == false) ? "block" : "none";
                        var displayStyleIn = (objPermssionIn.View == false) ? "none" : (_md.Equals("Add") == false) ? "block" : "none";
                        var displayStyleSite = (objPermssionSite.View == false) ? "none" : (_md.Equals("Add") == false) ? "block" : "none";
                        var displayStyleevidence = (objPermssionevidence.View == false) ? "none" : (_md.Equals("Add") == false) ? "block" : "none";
                        var displayStyleAssesment = (objPermssionAssesment.View == false) ? "none" : (_md.Equals("Add") == false) ? "block" : "none";
                    }
                    <button class="tablinks" style="display: @displayStyleQt" onclick="profileTab(event, 'profile2')" id="tab_2">Quotations</button>
                    <button class="tablinks" style="display: @displayStyleIn" onclick="profileTab(event, 'profile3')" id="tab_3">Invoices/Payments</button>
                    <button class="tablinks" style="display: @displayStyleSite " onclick="profileTab(event, 'profile4')" id="tab_4">Site Description</button>
                    <button class="tablinks" style="display: @displayStyleevidence" onclick="profileTab(event, 'profile5')" id="tab_5">Comparable Evidences</button>
                    <button class="tablinks" style="display: @displayStyleAssesment" onclick="profileTab(event, 'profile6')" id="tab_6">Valuation Assessement</button>
                </div>

                <div id="profile1" class="tabcontent p-0">
                    <h5 class="ptrl-20">Valuation Details</h5>
                    <div class="inputSearchs p-0">
                        <form asp-action="ValuationRequestManage" id="valuation">
                            @Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.ReferenceNo)

                            <input type="hidden" id="isAddPerm" value="@isAdd" />
                            <input type="hidden" id="isEditPerm" value="@isEdit" />
                            <input type="hidden" id="isAddPermQuotation" value="@isAddQt" />
                            <input type="hidden" id="isEditPermQuotation" value="@isEditQt" />
                            <input type="hidden" id="isAddPermInvoice" value="@isAddIn" />
                            <input type="hidden" id="isEditPermInvoice" value="@isEditIn" />
                            <input type="hidden" id="isApprovePerm" value="@isApprove" />

                            <input type="hidden" id="hdnId" value="@(Model == null ? 0 : Model.Id)" />
                            <input type="hidden" id="hdnReferenceNo" value="@(Model == null ? 0 : Model.ReferenceNo)" />
                            <input type="hidden" id="hdnStatusId" value="@(_md == "Add" ? 3 : (Model == null ? 0 : Model.StatusId))" />
                            <input type="hidden" id="hdnClientId" value="@(Model == null ? 0 : Model.ClientId)" />
                            <input type="hidden" id="hdnApproverId" value="@(Model == null ? 0 : Model.ApproverId)" />
                            <input type="hidden" id="hdnValuationModeId" value="@(Model == null ? 0 : Model.ValuationModeId)" />
                            <input type="hidden" id="hdnValuerId" value="@(Model == null ? 0 : Model.ValuerId)" />
                            <input type="hidden" id="hdnClientTypeId" value="@(Model == null ? 0 : Model.ClientTypeId)" />
                            <input type="hidden" id="hdnClientName" value="@(Model == null ? 0 : Model.ClientName)" />
                            <input type="hidden" id="hdnRoleId" value=@roleId />
                            <input type="hidden" id="roleEnum" value=@roleId />
                            <input type="hidden" id="isDeleteSite" value="@isDeleteSite" />
                            <input type="hidden" id="isDeleteQt" value="@isDeleteQt" />
                            <input type="hidden" id="isDeleteEvidence" value="@isDeleteEvidence" />
                            <input type="hidden" id="isDeleteIn" value="@isDeleteIn" />
                            <input type="hidden" id="isDeleteAssesment" value="@isDeleteAssesment" />
                            <input type="hidden" id="isDeletePerm" value="@isDelete" />
                            <input type="hidden" id="isAction" />
                            <input type="hidden" id="compId" value="@(Model == null ? 0 : Model.ValuationAssesment.comparableEvidenceModel.Id)" />
                            <input type="hidden" id="siteId" value="@(Model == null ? 0 : Model.ValuationAssesment.SiteDescription.Id)" />
                            <input type="hidden" id="assesmentId" value="@(Model == null ? 0 : Model.ValuationAssesment.valuationAssessementModel.Id)" />
                            <input type="hidden" id="valuationdetailsId" value="@(Model == null ? 0 : Model.Id)" />
                            <input type="hidden" id="Valuationapprovalvalues" name="ValuationApprovalValues" />

                            <div class="ptrl-20" id="editables0">
                                <div class="flex  mb-28">
                                    <label for="" class="w-50">
                                        Val. Ref#
                                        @Html.TextBoxFor(model => model.ReferenceNo, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Valuation Reference no"] })
                                    </label>
                                    <label for="" class="w-50">
                                        Other Reference no
                                        @Html.TextBoxFor(model => model.OtherReferenceNo, new { @class = "form-control", @placeholder = @SharedLocalizer["Other Reference no"] })
                                        @Html.ValidationMessageFor(model => model.OtherReferenceNo, "", new { @class = "text-danger" })
                                    </label>
                                </div>

                                <div class="flex  mb-28">
                                    <label for="" class="w-50">
                                        <p class="m-0">Valuation Status<span class="text-danger">*</span></p>
                                        @Html.DropDownListFor(model => model.StatusId, new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown" })
                                        @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                                    </label>

                                    <label for="" class="w-50 m-0">
                                        <p class="m-0">Valuation Date<span class="text-danger">*</span></p>
                                        <input type="text" class="formatted-date-input" id="ValuationDate" name="ValuationDate" asp-for="ValuationDate">
                                        @Html.ValidationMessageFor(model => model.ValuationDate, "", new { @class = "text-danger" })
                                    </label>
                                </div>

                                <div class="flex  mb-28">
                                    <label for="" class="w-50">
                                        Approver Name
                                        @Html.DropDownList("ApproverId", new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown " })
                                    </label>

                                    <label for="" class="w-50 m-0" id="comment">
                                        Approver Comment
                                        @Html.TextBoxFor(model => model.ApproverComment, new { @class = "form-control", @placeholder = @SharedLocalizer["Review Comment"] })
                                        @Html.ValidationMessageFor(model => model.ApproverComment, "", new { @class = "text-danger" })
                                    </label>
                                </div>

                                <div class="flex  mb-28">
                                    <label for="" class="w-50">
                                        Valuer Name
                                        @Html.DropDownList("ValuerId", new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown" })
                                    </label>

                                    <label for="" class="w-50">
                                        Method of Valuation
                                        <div class="flex m-0 valuationType">
                                            @Html.DropDownList("ValuationModeId", new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown" })
                                        </div>
                                    </label>
                                </div>

                                <div class="flex  mb-28">
                                    @if (Levels != null && Levels.Count > 0)
                                    {
                                        // Iterate over each distinct level
                                        foreach (var lId in distinctLevels)
                                        {
                                            var level = Levels.Where(a => a.ApproverLevelId == lId).First().ApproverLevel;
                                            var dropdownId = $"ApproverLevelId_{lId}";
                                            var curList = Levels.Where(approver => approver.ApproverLevelId == lId).ToList();
                                            curList.Insert(0, new ValuationRequestApproverLevelModel()
                                            {
                                                ApproverLevelId = lId,
                                                ApproverLevel = level,
                                                ApproverId = 0,
                                                ApproverName = "--select--"
                                            });

                                            var ddSelected = Levels.FirstOrDefault(approver => approver.ApproverLevelId == lId && approver.IsSelected == 1)?.ApproverId.ToString();

                                            //append to page
                                            <label for="" class="bodyContent p-0 w-50">
                                                @level
                                                @Html.DropDownListFor(model => ddSelected, new SelectList(curList.Select(approver => new SelectListItem
                                                {
                                                   Value = approver.ApproverId.ToString(),
                                                   Text = approver.ApproverName
                                                }), "Value", "Text"), new { @class = "form-control searchable-dropdown", @id = dropdownId, @onchange = "updateHiddenInput()" })
                                            </label>
                                        }
                                    }
                                </div>

                                <div class="flex  mb-28">
                                    <label for="" class="w-50">
                                        Valuation Time Frame (In Days)
                                        @Html.TextBoxFor(model => model.ValuationTimeFrame, new { @class = "form-control valiadteint", @placeholder = @SharedLocalizer["Valuation Time Frame"] })
                                        @Html.ValidationMessageFor(model => model.ValuationTimeFrame, "", new { @class = "text-danger" })
                                    </label>
                                </div>


                            </div>


                            @* Added by YReddy for approval level history *@
                            @if (LevelsApproved != null && LevelsApproved.Count > 0)
                            {
                                <div class="roundBorderBox ptrl-20">
                                    <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                        <p>Approver(s) history</p>
                                        <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                    </div>
                                    <div class="inputSearchs p-0">
                                        <div class="flex m-0">
                                            <table id="ApproverLevelHistory" class="table-striped">
                                                <thead>
                                                    <tr>
                                                        <th>Level</th>
                                                        <th>Approver</th>
                                                        <th>Status</th>
                                                        <th>Comment</th>
                                                        <th>Updated By</th>
                                                        <th>Updated Date</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var level in LevelsApproved)
                                                    {
                                                        <tr>
                                                            <td>@level.ApproverLevel</td>
                                                            <td>@level.ApproverName</td>
                                                            @if (@level.Status != null)
                                                            {
                                                                <td><span class="tableStatus" style="color: @level.ColorCode; background-color: @level.BackGroundColor; border: 1px solid @level.ColorCode;">@level.Status</span></td>
                                                            }
                                                            else
                                                            {
                                                                <td></td>
                                                            }
                                                            <td>@level.ApproverComment</td>
                                                            <td>@level.CreatedByName</td>
                                                            <td class="formatted-td-date-input">@level.CreatedDate.ToString() </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            }

                            <div class="roundBorderBox ptrl-20">
                                <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                    <p>Client Details</p>
                                    <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                </div>
                                <div class="inputSearchs p-0">

                                    <input type="hidden" id="hdnCountry" value="@(Model == null ? 0 : Model.CountryId)" />
                                    <input type="hidden" id="hdnState" value="@(Model == null ? 0 : Model.StateId)" />
                                    <input type="hidden" id="hdnCity" value="@(Model == null ? 0 : Model.CityId)" />
                                    <div class="flex  mb-28" id="editables1">
                                        <label for="" class="w-50">
                                            <p class="m-0">Client Type<span class="text-danger">*</span></p>
                                            @Html.DropDownListFor(model => model.ClientTypeId, new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown", @onchange = "BindClientByClientType(this.options[this.selectedIndex].value)" })
                                            @Html.ValidationMessageFor(model => model.ClientTypeId, "", new { @class = "text-danger" })
                                        </label>
                                        <label for="" class="w-50">
                                            <p class="m-0">Client<span class="text-danger">*</span></p>
                                            @Html.DropDownListFor(model => model.ClientId, new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown", @onchange = "BindClientDetailsByClientId(this.options[this.selectedIndex].value)" })
                                            @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
                                        </label>
                                    </div>
                                    <div class="flex  mb-28">
                                        <label for="" class="w-50">
                                            TRN Number
                                            @Html.TextBoxFor(model => model.Trnnumber, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["TRN Number"] })
                                        </label>
                                        <label for="" class="w-50">
                                            TRN Expiry Date
                                            @Html.TextBoxFor(model => model.TrnexpiryDate, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["TRN Expiry Date"] })
                                        </label>
                                    </div>

                                    <div class="flex ">
                                        <label for="" class="w-50">
                                            License Number
                                            @Html.TextBoxFor(model => model.LicenseNumber, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["License Number"] })
                                        </label>
                                    </div>
                                    <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                        <p>Address Details</p>
                                        <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                    </div>

                                    <div class="inputSearchs p-0">
                                        <table class="table-striped sec" id="NewAddressTable">
                                            <thead>
                                                <tr>
                                                    <th>Address 1</th>
                                                    <th>Address 2</th>
                                                    <th>City</th>
                                                    <th>State</th>
                                                    <th>Country</th>
                                                    <th>Zip / PO Box</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>

                                    <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                        <p>Contact Details</p>
                                        <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                    </div>
                                    <div class="inputSearchs p-0">
                                        <table class="table-striped sec" id="NewContactTable">
                                            <thead>
                                                <tr>
                                                    <th>Contact Person Name</th>
                                                    <th>Department</th>
                                                    <th>Designation</th>
                                                    <th>Email ID</th>
                                                    <th>Phone Number</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>

                            </div>

                            <div class="roundBorderBox ptrl-20">
                                <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                    <p>Property Details</p>
                                    <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                </div>
                                <div class="inputSearchs p-0">

                                    <input type="hidden" id="hdnPropertyType" value="@(Model == null ? 0 : Model.PropertyTypeId)" />
                                    <input type="hidden" id="hdnPropertySub" value="@(Model == null ? 0 : Model.PropertySubTypeId)" />
                                    <input type="hidden" id="hdnOwnershipType" value="@(Model == null ? 0 : Model.OwnershipTypeId)" />
                                    <input type="hidden" id="hdnPropertyId" value="@(Model.PropertyId)" />
                                    <input type="hidden" id="hdnPropertyName" value="@(Model == null ? 0 : Model.PropertyName)" />
                                    <input type="hidden" id="hdnUnitTypeId" value="@(Model == null ? 0 : Model.UnitTypeId)" />
                                    <input type="hidden" id="hdnFurnishedId" value="@(Model == null ? 0 : Model.FurnishedId)" />
                                    <div class="flex  mb-28" id="editables2">
                                        <label for="" class="w-50">
                                            <p class="m-0">Property Type<span class="text-danger">*</span></p>
                                            @Html.DropDownListFor(model => model.PropertyTypeId, new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown", @onchange = "BindPropertySub(this.options[this.selectedIndex].value);" })
                                            @Html.ValidationMessageFor(model => model.PropertyTypeId, "", new { @class = "text-danger" })
                                        </label>
                                        <label for="" class="w-50">
                                            <p class="m-0">Property SubType<span class="text-danger">*</span></p>
                                            @Html.DropDownListFor(model => model.PropertySubTypeId, new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown", @onchange = "BindPropertyDetail()" })
                                            @Html.ValidationMessageFor(model => model.PropertySubTypeId, "", new { @class = "text-danger" })
                                        </label>
                                    </div>
                                    <div class="flex  mb-28" id="editables3">
                                        <label for="" class="w-50">
                                            <p class="m-0">Ownership Type</p>
                                            @Html.DropDownListFor(model => model.OwnershipTypeId, new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown", @onchange = "BindPropertyDetail()" })
                                            @Html.ValidationMessageFor(model => model.OwnershipTypeId, "", new { @class = "text-danger" })
                                        </label>

                                        <label for="" class="w-50">
                                            <p class="m-0">Property Name<span class="text-danger">*</span></p>
                                            @Html.DropDownListFor(model => model.PropertyId, new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown", @onchange = "BindPropertyDetailById(this.options[this.selectedIndex].value)" })
                                            @Html.ValidationMessageFor(model => model.PropertyId, "", new { @class = "text-danger" })
                                        </label>
                                    </div>
                                    <div class="flex mb-28">
                                        <label for="" class="w-50">
                                            Unit Type
                                            @Html.DropDownListFor(model => model.UnitTypeId, new List<SelectListItem> { }, new { @disabled = htmlAttributes, @class = "form-control searchable-dropdown" })
                                            @*    @Html.ValidationMessageFor(model => model.OwnershipTypeId, "", new { @class = "text-danger" }) *@
                                        </label>
                                        <label for="" class="w-50">
                                            Unit Number
                                            @Html.TextBoxFor(model => model.UnitNumber, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["UnitNumber"] })

                                        </label>
                                    </div>
                                    <div class="flex mb-28">
                                        <label for=" class=" w-50"">
                                            <p class="m-0">
                                                Furnished
                                            </p>
                                            @Html.DropDownListFor(model => model.FurnishedId, new List<SelectListItem> { }, new { @disabled = htmlAttributes, @class = "form-control" })
                                            @* @Html.ValidationMessageFor(model => model.OwnershipTypeId, "", new { @class = "text-danger" }) *@
                                        </label>
                                        <label for="" class="w-50">
                                            Purpose of Valuation
                                            @Html.TextBoxFor(model => model.ValuationPurpose, new { @disabled = htmlAttributes, @class = "form-control valiadteint", @placeholder = @SharedLocalizer["Valuation Purpose"] })

                                        </label>
                                    </div>
                                    <div class="flex mb-28">
                                        <label for="" class="w-50">
                                            <p class="m-0">
                                                Built Up Area (Sq.Ft)
                                            </p>
                                            @Html.TextBoxFor(model => model.BuildUpAreaSqFt, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Area in Sq Ft"] })
                                            @*  @Html.ValidationMessageFor(model => model.BuildUpAreaSqFt, "", new { @class = "text-danger" }) *@
                                        </label>
                                        <label for="" class="w-50">
                                            <p class="m-0">
                                                Built up Area (Sq.Meter)
                                            </p>
                                            @Html.TextBoxFor(model => model.BuildUpAreaSqMtr, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Area in Sq Mtr"] })
                                            @*   @Html.ValidationMessageFor(model => model.BuildUpAreaSqMtr, "", new { @class = "text-danger" }) *@
                                        </label>
                                    </div>
                                    <div class="flex mb-28">
                                        <label for="" class="w-50">
                                            Age of construction (In Years)
                                            @Html.TextBoxFor(model => model.AgeOfConstruction, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Area in Sq Mtr"] })

                                        </label>
                                        <label for="" class="w-50">
                                            Additional Units
                                            @Html.TextBoxFor(model => model.AdditionalUnits, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Additional Unit"] })

                                        </label>
                                    </div>
                                    <div class="flex mb-28">
                                        <label for="" class="w-50">
                                            Parking
                                            @Html.TextBoxFor(model => model.Parking, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Parking"] })

                                        </label>
                                        <label for="" class="w-50">
                                            Parking BAY Number
                                            @Html.TextBoxFor(model => model.ParkingBayNo, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Parking Bay No"] })

                                        </label>
                                    </div>

                                    <div>
                                        <label for="" class="w-50">
                                            Description
                                            @Html.TextBoxFor(model => model.Description, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Description"] })

                                        </label>
                                    </div>

                                    @* <h5 class="blueHeading mb-16"> Amenities</h5> *@
                                    <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                        <p>Amenities</p>
                                        <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                    </div>
                                    <div class="inputSearchs p-0">
                                        <div class="form">
                                            <div class="flex mb-28 flex-start" id="amentiesdiv">
                                                @{
                                                    if (Model.AmenityList != null)
                                                    {
                                                        @for (int z = 0; z < Model.AmenityList.Count; z++)
                                                        {
                                                            var amt = @Model.AmenityList[z];
                                                            <label for="" class="position-relative checkboxBtn w-30 mr-20">
                                                                @Html.HiddenFor(m => m.AmenityList[z].Id)
                                                                @Html.HiddenFor(m => m.AmenityList[z].AmenityId)
                                                                @Html.HiddenFor(m => m.AmenityList[z].PropertyId)
                                                                @Html.CheckBoxFor(model => Model.AmenityList[z].IsActive, new { @class = "checkbox-checked", @checked = "checked" })
                                                                <p style="font-weight:400;">@amt.AmenityName</p>
                                                                <img src="/assets/@amt.Icon" class="amenitiesIcon">
                                                            </label>
                                                        }
                                                    }
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    @*  <h5 class="blueHeading mb-16">Property Location</h5> *@
                                    <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                        <p>Property Location</p>
                                        <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                    </div>
                                    <div class="inputSearchs p-0">
                                        <input type="hidden" id="hdnLocationCountryId" value="@(Model == null ? 0 : Model.LocationCountryId)" />
                                        <input type="hidden" id="hdnLocationStateId" value="@(Model == null ? 0 : Model.LocationStateId)" />
                                        <input type="hidden" id="hdnLocationCityId" value="@(Model == null ? 0 : Model.LocationCityId)" />
                                        <div class="flex  mb-28">
                                            <label for="CountryId" class="w-50">
                                                Country
                                                @Html.DropDownListFor(model => model.PropertyDetail.CountryId, new List<SelectListItem> { }, new { @disabled = htmlAttributes, @class = "form-control searchable-dropdown", @onchange = "BindLocationState(this.options[this.selectedIndex].value)" })

                                            </label>
                                            <label for="StateId" class="w-50">
                                                State
                                                @Html.DropDownListFor(model => model.PropertyDetail.StateId, new List<SelectListItem> { }, new { @disabled = htmlAttributes, @class = "form-control searchable-dropdown", @onchange = "BindLocationCity(this.options[this.selectedIndex].value)" })

                                            </label>
                                        </div>
                                        <div class="flex  mb-28" class="w-50">
                                            <label for="CityId">
                                                City
                                                @Html.DropDownListFor(model => model.PropertyDetail.CityId, new List<SelectListItem> { }, new { @disabled = htmlAttributes, @class = "form-control searchable-dropdown" })

                                            </label>
                                            <label for="Zone" class="w-50">
                                                Sector /Zone
                                                @Html.TextBoxFor(model => model.PropertyDetail.Zone, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Zone"] })

                                            </label>
                                        </div>
                                        <div class="flex mb-28">
                                            <label for="address2" class="w-50">
                                                <p class="m-0">Building Projects<span class="text-danger">*</span></p>
                                                @Html.TextBoxFor(model => model.PropertyDetail.BuildingProject, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Zone"] })

                                            </label>
                                            <label for="address2" class="w-50">
                                                Latitude
                                                @Html.TextBoxFor(model => model.PropertyDetail.Latitude, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Latitude"] })

                                            </label>
                                        </div>
                                        <div class="flex mb-28">
                                            <label for="address2" class="w-50">
                                                Longitude
                                                @Html.TextBoxFor(model => model.PropertyDetail.Longitude, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Longitude"] })

                                            </label>
                                            <label for="" class="w-50">
                                                <p class="m-0">Address<span class="text-danger">*</span></p>
                                                @Html.TextBoxFor(model => model.PropertyDetail.Address1, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Address1"] })

                                            </label>
                                        </div>
                                        <div class="flex mb-28">
                                            <label for="" class="w-50">
                                                Address (2)
                                                @Html.TextBoxFor(model => model.PropertyDetail.Address2, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Address2"] })

                                            </label>
                                            <label for="address2" class="w-50">
                                                Zip / PO Box
                                                @Html.TextBoxFor(model => model.PropertyDetail.Pincode, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Pincode"] })
                                            </label>
                                        </div>
                                        <div class="flex mb-28">
                                            <label for="address2" class="w-50">
                                                Landmark
                                                @Html.TextBoxFor(model => model.PropertyDetail.Landmark, new { @disabled = htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Landmark"] })

                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="text-right buttonArea bodyContent">
                                <a href='/ValuationRequest/ValuationRequests'> <button type="button" class="lineBtn greyBtn mr-12">Cancel</button></a>

                                @if (ViewBag.IsView == 1)
                                {
                                    <a href='/ValuationRequest/ValuationRequestManage?id=@Model.Id'>
                                        <button type="button" class=" blueBtn mr-12" style=" width:100px">Edit</button>
                                    </a>
                                }
                                else
                                {
                                    @if (roleId == (int)RoleEnum.Admin || roleId == (int)RoleEnum.Requestor)
                                    {
                                        <button type="submit" class="blueBtn" id="btnSaveEdit" style="width:100px">Save</button>
                                    }

                                    @if (roleId == (int)RoleEnum.Approver || roleId == (int)RoleEnum.Valuer)
                                    {
                                        <button type="button" class="blueBtn" id="btnSaveApprove" style="width:100px">
                                            Save
                                        </button>
                                    }
                                }
                            </div>
                        </form>
                    </div>
                </div>


                <div id="profile2" class="tabcontent">
                    @*  <div class="whiteBoxShadow m-0 ">
                    <div class="bodyContent footerAudit">
                    <div class=" position-relative flex justify-between align-item-center m-0">
                    <h5 class="m-0">
                    Valuation Id : @Html.DisplayFor(model => model.Id)
                    </h5>
                    <h5 class="m-0">
                    Val. Ref# : @Html.DisplayFor(model => model.ReferenceNo)
                    </h5>
                    </div>
                    </div>
                    </div> *@
                    <div class="buttonArea">
                        <div class="flex justify-between align-item-center plr-0">
                            <h5>Quotations</h5>
                            @if (!isHideBtn)
                            {
                                <a href="/ValuationRequest/ValuationQuotationManage?vId=@Model.Id">
                                    <button id="addNewQt" class="blueBtn" style="width:120px">
                                        <img src="../assets/plus.svg" alt="plus">
                                        Add New
                                    </button>
                                </a>
                            }
                        </div>
                    </div>
                    <div class="scroll-x">
                        <table id="QuatationTable" class="table-striped">
                            <thead>
                                <tr>
                                    <th>#Quotation</th>
                                    <th>Valuation Charges</th>
                                    <th>VAT</th>
                                    <th>Other Charges</th>
                                    <th>Discount (%)</th>
                                    <th>Total Valuation Charge</th>
                                    <th>Created By</th>
                                    <th>Creation Date</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>


                <div id="profile3" class="tabcontent">
                    <div class="buttonArea">
                        <div class="flex justify-between align-item-center p-0">
                            <h5>Invoices</h5>
                            @if (!isHideBtn)
                            {
                                <a href="/ValuationRequest/ValuationInvoices?vId=@Model.Id">
                                    <button class="blueBtn" style="width:120px" id="addNewIn">
                                        <img src="../assets/plus.svg" alt="plus">
                                        Add New
                                    </button>
                                </a>
                            }
                        </div>
                    </div>

                    <div class="scroll-x">
                        <table id="InvoiceTable" class="table-striped">
                            <thead>
                                <tr>
                                   
                                    <th>#Invoice</th>
                                    <th>Transaction Date</th>
                                    <th>Payment Mode</th>
                                    <th>Status</th>
                                    <th>Amount</th>
                                    <th>Created By</th>
                                    <th>Creation Date</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>

                    <div class="buttonArea">
                        <div class="flex justify-between align-item-center p-0">
                            <h5>Payments</h5>
                            @if (!isHideBtn)
                            {
                                <a href="/ValuationRequest/ValuationInvoiceManage?vId=@Model.Id">
                                    <button class="blueBtn" style="width:120px" id="addNewIn">
                                        <img src="../assets/plus.svg" alt="plus">
                                        Add New
                                    </button>
                                </a>
                            }
                        </div>
                    </div>

                    <div class="scroll-x">
                        <table id="PaymentTable" class="table-striped">
                            <thead>
                                <tr>
                                    <th>#Payment</th>
                                    <th>Transaction Date</th>
                                    <th>Payment Mode</th>
                                    <th>Status</th>
                                    <th>Amount</th>
                                    <th>Created By</th>
                                    <th>Creation Date</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>

                <form asp-action="ValuationAssesmentManage" asp-controller="ValuationRequest" method="POST" enctype="multipart/form-data">
                    @Html.HiddenFor(model => model.Id)
                    <div id="profile4" class="tabcontent">
                        @* <div class="whiteBoxShadow m-0 ">
                        <div class="bodyContent footerAudit">
                        <div class=" position-relative flex justify-between align-item-center m-0">
                        <h5 class="m-0">
                        Valuation Id : @Html.DisplayFor(model => model.Id)
                        </h5>
                        <h5 class="m-0">
                        Val. Ref# : @Html.DisplayFor(model => model.ReferenceNo)
                        </h5>
                        </div>
                        </div>
                        </div> *@
                        <h5 class="ptrl-20">Structural Information</h5>
                        <div class="inputSearchs">

                            <input type="hidden" id="Test" name="Test" value="@Model.Id">
                            <div class="flex">
                                <label for="">
                                    <p class="m-0">Location<span class="text-danger">*</span></p>
                                    @Html.TextBoxFor(model => model.ValuationAssesment.SiteDescription.Location, new { @class = "form-control", @placeholder = @SharedLocalizer["Location"] })
                                    @Html.ValidationMessageFor(model => model.ValuationAssesment.SiteDescription.Location, "", new { @class = "text-danger" })
                                </label>
                                <label for="">
                                    <p class="m-0"> Internal Area<span class="text-danger">*</span></p>

                                    @Html.TextBoxFor(model => model.ValuationAssesment.SiteDescription.InternalArea, new { @class = "form-control price", @placeholder = @SharedLocalizer["InternalArea"] })
                                    @Html.ValidationMessageFor(model => model.ValuationAssesment.SiteDescription.InternalArea, "", new { @class = "text-danger" })
                                </label>
                            </div>
                            <div class="flex">
                                <label for="">
                                    <p class="m-0"> External Area<span class="text-danger">*</span></p>

                                    @Html.TextBoxFor(model => model.ValuationAssesment.SiteDescription.ExternalArea, new { @class = "form-control price", @placeholder = @SharedLocalizer["ExternalArea"] })
                                    @Html.ValidationMessageFor(model => model.ValuationAssesment.SiteDescription.ExternalArea, "", new { @class = "text-danger" })
                                </label>
                                <label for="">
                                    <p class="m-0"> Floor<span class="text-danger">*</span></p>
                                    @Html.TextBoxFor(model => model.ValuationAssesment.SiteDescription.Floor, new { @class = "form-control valiadteint", @placeholder = @SharedLocalizer["Floor"] })
                                    @Html.ValidationMessageFor(model => model.ValuationAssesment.SiteDescription.Floor, "", new { @class = "text-danger" })
                                </label>
                            </div>
                            <div class="flex">
                                <label for="">
                                    <p class="m-0"> Room<span class="text-danger">*</span></p>
                                    @Html.TextBoxFor(model => model.ValuationAssesment.SiteDescription.Room, new { @class = "form-control valiadteint", @type = "number", @placeholder = @SharedLocalizer["Room"] })
                                    @Html.ValidationMessageFor(model => model.ValuationAssesment.SiteDescription.Room, "", new { @class = "text-danger" })
                                </label>
                                <label for="">
                                    Bedrooms
                                    @Html.TextBoxFor(model => model.ValuationAssesment.SiteDescription.Bedrooms, new { @class = "form-control valiadteint", @type = "number", @placeholder = @SharedLocalizer["Bedrooms"] })

                                </label>
                            </div>
                            <div class="flex">
                                <label for="">
                                    Storage
                                    @Html.TextBoxFor(model => model.ValuationAssesment.SiteDescription.Storage, new { @class = "form-control", @placeholder = @SharedLocalizer["Storage"] })
                                </label>
                                <label>
                                    Quantity
                                    @Html.TextBoxFor(model => model.ValuationAssesment.SiteDescription.Quantity, new { @class = "form-control valiadteint", @placeholder = @SharedLocalizer["Quantity"] })
                                </label>
                            </div>
                            <div class="flex">

                                <label>
                                    Additional Comment
                                    @Html.TextBoxFor(model => model.ValuationAssesment.SiteDescription.AdditionComment, new { @class = "form-control", @placeholder = @SharedLocalizer["AdditionComment"] })
                                </label>
                            </div>

                        </div>
                        <div class="inputSearchs p-0">
                            <div class="tabSection ptrl-20">
                                <div class="addMoreAddress roundBorderBox m-0">
                                    <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                        <p>External Information</p>
                                        <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                    </div>
                                    <div class="panel">
                                        <div class="flex">
                                            <label for="" class="w-100">
                                                <p class="m-0"> Property Condition<span class="text-danger">*</span></p>

                                                @Html.TextBoxFor(model => model.ValuationAssesment.SiteDescription.PropertyCondition, new { @class = "form-control", @placeholder = @SharedLocalizer["PropertyCondition"] })
                                                @Html.ValidationMessageFor(model => model.ValuationAssesment.SiteDescription.PropertyCondition, "", new { @class = "text-danger" })

                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="" class="w-100">
                                                Additional Notes
                                                @Html.TextBoxFor(model => model.ValuationAssesment.SiteDescription.AdditionalNotes, new { @class = "form-control", @placeholder = @SharedLocalizer["AdditionalNotes"] })

                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="" class="w-100">
                                                Others
                                                @Html.TextBoxFor(model => model.ValuationAssesment.SiteDescription.Others, new { @class = "form-control", @placeholder = @SharedLocalizer["Others"] })
                                            </label>
                                        </div>

                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="inputSearchs p-0">
                            <div class="tabSection ptrl-20">
                                <div class="addMoreAddress roundBorderBox m-0">
                                    <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                        <p>Documents</p>
                                        <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                    </div>
                                    <div class="panel" style="display: none;">
                                        <div class="flex">
                                            <label for="" class="w-100">
                                                <span class="m-0" style="font-weight:normal;">File size upto 5MB *</span>
                                                <input type="file" class="fileInput" asp-for="ValuationAssesment.SiteDescription.Document.Files" multiple onchange="validateFileSize(this)">
                                                <input type="text" class="fileNames" readonly placeholder="file names">
                                            </label>
                                        </div>
                                        <div class="W-100">
                                            <div class="prevUpload roundBorderBox m-0">
                                                <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                                    <p>Previously uploaded</p>
                                                    <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                                </div>
                                                <div class="scroll-x">
                                                    <table id="SiteTableDocument" class="table-striped">
                                                        <thead>
                                                            <tr>
                                                                <th>File Name</th>
                                                                <th>DateUpdate </th>
                                                                <th>Uploaded By</th>
                                                                <th>Download</th>
                                                                @if (!isHideBtn)
                                                                {
                                                                    <th>Action</th>
                                                                }
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @if (Model.ValuationAssesment.SiteDescription.Documents != null && Model.ValuationAssesment.SiteDescription.Documents.Any())
                                                            {
                                                                @foreach (var docs in Model.ValuationAssesment.SiteDescription.Documents)
                                                                {
                                                                    <tr id="@docs.Id">
                                                                        <td>@docs.DocumentName</td>
                                                                        <td class="formatted-td-date-input">@docs.CreatedDate.ToString() </td>
                                                                        <td>@docs.CreatedName</td>
                                                                        <td><a href="@docs.FilePath" download target="_blank"><img src="../assets/download.svg" alt="download" /></a></td>
                                                                        @if (!isHideBtn)
                                                                        {
                                                                            <td><a title="Delete" data-toggle="modal" data-target="#DeleteDocumentModel" data-backdrop="static" data-keyboard="false" onclick="ConfirmationDocument(@docs.Id,'isSite'); return false;"><img src="../assets/trash.svg" alt="trash" /></a></td>
                                                                        }
                                                                    </tr>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <tr>
                                                                    <td colspan="5">NA</td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        @if (!isHideBtn)
                        {
                            <div class="text-right buttonArea bodyContent plr-0">
                                <button type="button" class="blueBtn mr-12" onclick="redirectToComparableEvidences()">Next</button>
                            </div>
                        }
                    </div>

                    <div id="profile5" class="tabcontent">
                        <div class="whiteBoxShadow m-0 ">
                            @*   <div class="bodyContent footerAudit">
                            <div class=" position-relative flex justify-between align-item-center m-0">
                            <h5 class="m-0">
                            Valuation Id : @Html.DisplayFor(model => model.Id)
                            </h5>
                            <h5 class="m-0">
                            Val. Ref# : @Html.DisplayFor(model => model.ReferenceNo)
                            </h5>
                            </div>
                            </div> *@
                        </div>
                        <h5 class="ptrl-20">Comparable Evidences</h5>
                        <div class="inputSearchs">
                            @Html.HiddenFor(model => model.ValuationAssesment.comparableEvidenceModel.RequestId, new { @value = "Model.Id" })
                            <div class="flex">
                                <label for="">
                                    Type
                                    @Html.TextBoxFor(model => model.ValuationAssesment.comparableEvidenceModel.Type, new { @class = "form-control", @placeholder = @SharedLocalizer["Type"] })

                                </label>
                                <label>
                                    Size
                                    @Html.TextBoxFor(model => model.ValuationAssesment.comparableEvidenceModel.Size, new { @class = "form-control valiadteint", @placeholder = @SharedLocalizer["Size"] })

                                </label>
                            </div>
                            <div class="flex">
                                <label>
                                    Remarks
                                    @Html.TextBoxFor(model => model.ValuationAssesment.comparableEvidenceModel.Remarks, new { @class = "form-control", @placeholder = @SharedLocalizer["Remarks"] })
                                </label>
                                <label>

                                    <p class="m-0">  Rate (Sq.Ft)<span class="text-danger">*</span></p>
                                    @Html.TextBoxFor(model => model.ValuationAssesment.comparableEvidenceModel.RateSqFt, new { @class = "form-control price formatting", @placeholder = @SharedLocalizer["RateSqFt"] })
                                    @Html.ValidationMessageFor(model => model.ValuationAssesment.comparableEvidenceModel.RateSqFt, "", new { @class = "text-danger" })
                                </label>
                            </div>
                            <div class="flex">
                                <label>
                                    <p class="m-0"> Price<span class="text-danger">*</span></p>
                                    @Html.TextBoxFor(model => model.ValuationAssesment.comparableEvidenceModel.Price, new { @class = "form-control price formatting", @placeholder = @SharedLocalizer["Price"] })
                                    @Html.ValidationMessageFor(model => model.ValuationAssesment.comparableEvidenceModel.Price, "", new { @class = "text-danger" })
                                </label>
                                <label>
                                    Additional Comments
                                    @Html.TextBoxFor(model => model.ValuationAssesment.comparableEvidenceModel.AddtionalComments, new { @class = "form-control", @placeholder = @SharedLocalizer["AddtionalComments"] })
                                </label>
                            </div>

                        </div>
                        <div class="inputSearchs p-0">
                            <div class="tabSection ptrl-20">
                                <div class="addMoreAddress roundBorderBox m-0">
                                    <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                        <p>Documents</p>
                                        <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                    </div>
                                    <div class="panel" style="display: none;">
                                        <div class="flex">
                                            <label for="" class="w-100">
                                                <span class="m-0" style="font-weight:normal;">File size upto 5MB *</span>
                                                <input type="file" class="fileInput" asp-for="ValuationAssesment.comparableEvidenceModel.Document.Files" multiple onchange="validateFileSize(this)">
                                                <input type="text" class="fileNames" readonly placeholder="file names">
                                            </label>
                                        </div>
                                        <div class="W-100">
                                            <div class="prevUpload roundBorderBox m-0">
                                                <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                                    <p>Previously uploaded</p>
                                                    <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                                </div>
                                                <div class="scroll-x">
                                                    <table id="EvidenceTableDocument" ="table-striped">
                                                        <thead>
                                                            <tr>
                                                                <th>File Name</th>
                                                                <th>DateUpdate </th>
                                                                <th>Uploaded By</th>
                                                                <th>Download</th>
                                                                @if (!isHideBtn)
                                                                {
                                                                    <th>Action</th>
                                                                }
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @if (Model.ValuationAssesment.comparableEvidenceModel.Documents != null && Model.ValuationAssesment.comparableEvidenceModel.Documents.Any())
                                                            {
                                                                @foreach (var docs in Model.ValuationAssesment.comparableEvidenceModel.Documents)
                                                                {
                                                                    <tr id="@docs.Id">
                                                                        <td>@docs.DocumentName</td>
                                                                        <td class="formatted-td-date-input">@docs.CreatedDate.ToString() </td>
                                                                        <td>@docs.CreatedName</td>
                                                                        <td><a href="@docs.FilePath" download target="_blank"><img src="../assets/download.svg" alt="download" /></a></td>
                                                                        @if (!isHideBtn)
                                                                        {
                                                                            <td><a title="Delete" data-toggle="modal" data-target="#DeleteDocumentModel" data-backdrop="static" data-keyboard="false" onclick="ConfirmationDocument(@docs.Id,'isEvidence'); return false;"><img src="../assets/trash.svg" alt="trash" /></a></td>
                                                                        }
                                                                    </tr>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <tr>
                                                                    <td colspan="5">NA</td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        @if (!isHideBtn)
                        {
                            <div class="text-right buttonArea bodyContent plr-0">
                                <button type="button" class="blueBtn mr-12" onclick="redirectToValuationAssesment()">Next</button>
                            </div>
                        }
                    </div>

                    <div id="profile6" class="tabcontent">
                        <div class="whiteBoxShadow m-0 ">
                            @* <div class="bodyContent footerAudit">
                            <div class=" position-relative flex justify-between align-item-center m-0">
                            <h5 class="m-0">
                            Valuation Id : @Html.DisplayFor(model => model.Id)
                            </h5>
                            <h5 class="m-0">
                            Val. Ref# : @Html.DisplayFor(model => model.ReferenceNo)
                            </h5>
                            </div>
                            </div> *@
                        </div>
                        <h5 class="ptrl-20">Valuation Evidences</h5>
                        <div class="inputSearchs">
                            @Html.HiddenFor(model => model.ValuationAssesment.valuationAssessementModel.RequestId, new { @value = "Model.Id" })
                            <div class="flex">
                                <label for="">
                                    <p class="m-0"> Market Value<span class="text-danger">*</span></p>
                                    @Html.TextBoxFor(model => model.ValuationAssesment.valuationAssessementModel.MarketValue, new { @class = "form-control price formatting", @placeholder = @SharedLocalizer["MarketValue"] })
                                    @Html.ValidationMessageFor(model => model.ValuationAssesment.valuationAssessementModel.MarketValue, "", new { @class = "text-danger" })
                                </label>
                                <label for="">

                                    <p class="m-0"> Market Rate<span class="text-danger">*</span></p>
                                    @Html.TextBoxFor(model => model.ValuationAssesment.valuationAssessementModel.MarketRate, new { @class = "form-control price formatting", @placeholder = @SharedLocalizer["MarkentRate"] })
                                    @Html.ValidationMessageFor(model => model.ValuationAssesment.valuationAssessementModel.MarketRate, "", new { @class = "text-danger" })
                                </label>
                            </div>

                            <div class="flex">
                                <label for="">
                                    <p class="m-0"> Life of Building<span class="text-danger">*</span></p>

                                    @Html.TextBoxFor(model => model.ValuationAssesment.valuationAssessementModel.LifeOfBuilding, new { @class = "form-control valiadteint", @placeholder = @SharedLocalizer["LifeOfBuilding"] })
                                    @Html.ValidationMessageFor(model => model.ValuationAssesment.valuationAssessementModel.LifeOfBuilding, "", new { @class = "text-danger" })
                                </label>
                                <label for="">
                                    <p class="m-0">  Annual Maintenance Cost<span class="text-danger">*</span></p>

                                    @Html.TextBoxFor(model => model.ValuationAssesment.valuationAssessementModel.AnnualMaintainceCost, new { @class = "form-control price formatting", @placeholder = @SharedLocalizer["AnnualMaintenanceCost"] })
                                    @Html.ValidationMessageFor(model => model.ValuationAssesment.valuationAssessementModel.AnnualMaintainceCost, "", new { @class = "text-danger" })
                                </label>
                            </div>
                            <div class="flex">
                                <label>
                                    Insuarance
                                    <span class="flex yesNoToggle">
                                        @Html.RadioButtonFor(model => model.ValuationAssesment.valuationAssessementModel.Insuarance, true, new { onclick = "toggleInput('yes')" })
                                        <span>Yes</span>  &nbsp; &nbsp;
                                        @Html.RadioButtonFor(model => model.ValuationAssesment.valuationAssessementModel.Insuarance, false, new { onclick = "toggleInput('no')" })
                                        <span>No</span> &nbsp; &nbsp;
                                    </span>
                                </label>

                                <label id="yesInput" for="yesField" style="display: @(Model.ValuationAssesment.valuationAssessementModel.Insuarance ? "block" : "none");">
                                    Insurance details
                                    @Html.TextBoxFor(model => model.ValuationAssesment.valuationAssessementModel.InsuranceDetails, new { @class = "form-control", @placeholder = @SharedLocalizer["InsuaranceDetail"] })
                                </label>
                            </div>

                        </div>

                        <div class="inputSearchs p-0">
                            <div class="tabSection ptrl-20">
                                <div class="addMoreAddress roundBorderBox m-0">
                                    <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                        <p>Documents</p>
                                        <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                    </div>
                                    <div class="panel" style="display: none;">
                                        <div class="flex">
                                            <label for="" class="w-100">
                                                <span class="m-0" style="font-weight:normal;">File size upto 5MB *</span>
                                                <input type="file" class="fileInput" asp-for="ValuationAssesment.valuationAssessementModel.Document.Files" multiple onchange="validateFileSize(this)">
                                                <input type="text" class="fileNames" readonly placeholder="file names">
                                            </label>
                                        </div>
                                        <div class="W-100">
                                            <div class="prevUpload roundBorderBox m-0">
                                                <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                                    <p>Previously uploaded</p>
                                                    <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                                </div>
                                                <div class="scroll-x">
                                                    <table id="AssesmentTableDocument class="table-striped">
                                                        <thead>
                                                            <tr>
                                                                <th>File Name</th>
                                                                <th>DateUpdate </th>
                                                                <th>Uploaded By</th>
                                                                <th>Download</th>
                                                                @if (!isHideBtn)
                                                                {
                                                                    <th>Action</th>
                                                                }
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @if (Model.ValuationAssesment.valuationAssessementModel.Documents != null && Model.ValuationAssesment.valuationAssessementModel.Documents.Any())
                                                            {
                                                                @foreach (var docs in Model.ValuationAssesment.valuationAssessementModel.Documents)
                                                                {
                                                                    <tr id="@docs.Id">
                                                                        <td>@docs.DocumentName</td>
                                                                        <td class="formatted-td-date-input">@docs.CreatedDate.ToString() </td>
                                                                        <td>@docs.CreatedName</td>
                                                                        <td><a href="@docs.FilePath" download target="_blank"><img src="../assets/download.svg" alt="download" /></a></td>
                                                                        @if (!isHideBtn)
                                                                        {
                                                                            <td><a title="Delete" data-toggle="modal" data-target="#DeleteDocumentModel" data-backdrop="static" data-keyboard="false" onclick="ConfirmationDocument(@docs.Id,'isAssesment'); return false;"><img src="../assets/trash.svg" alt="trash" /></a></td>
                                                                        }
                                                                    </tr>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <tr>
                                                                    <td colspan="5">NA</td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        @if (!isHideBtn)
                        {
                            <div class="text-right buttonArea bodyContent plr-0">
                                <button type="reset" onclick="getPDF(@(Model == null ? 0 : Model.Id))" class="blueBtn mr-12" id="btngetPDF">Generate PDF</button>
                                <button type="submit" class="blueBtn mr-12">Save</button>
                            </div>
                        }
                    </div>
                </form>
            </div>
        </div>
    </div>
</main>


<div id="DeleteQuotationModel" class="modal themeModal " role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@SharedLocalizer["Delete"]</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Label(@SharedLocalizer["DeleteConfirm"])
                        </div>
                    </div>
                </div>
                @Html.Hidden("Id")
                <div class="buttonArea popup-btn">
                    <button class="gray" data-dismiss="modal">@SharedLocalizer["Cancel"]</button>
                    <button type="button" onclick="DeleteQuotation()" data-dismiss="modal" class="redBtn">@SharedLocalizer["Delete"]</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="DeleteInvoiceModel" class="modal themeModal " role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@SharedLocalizer["Delete"]</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Label(@SharedLocalizer["DeleteConfirm"])
                        </div>
                    </div>
                </div>
                @Html.Hidden("Id")
                <div class="buttonArea popup-btn">
                    <button class="gray" data-dismiss="modal">@SharedLocalizer["Cancel"]</button>
                    <button type="button" onclick="DeleteInvoice()" data-dismiss="modal" class="redBtn">@SharedLocalizer["Delete"]</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="DeletePaymentInvoiceModel" class="modal themeModal " role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@SharedLocalizer["Delete"]</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Label(@SharedLocalizer["DeleteConfirm"])
                        </div>
                    </div>
                </div>
                @Html.Hidden("Id")
                <div class="buttonArea popup-btn">
                    <button class="gray" data-dismiss="modal">@SharedLocalizer["Cancel"]</button>
                    <button type="button" onclick="DeleteInvoice()" data-dismiss="modal" class="redBtn">@SharedLocalizer["Delete"]</button>
                </div>
            </div>
        </div>
    </div>
</div>





<div id="DeleteDocumentModel" class="modal themeModal " role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@SharedLocalizer["Delete"]</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Label(@SharedLocalizer["DeleteConfirm"])
                        </div>
                    </div>
                </div>
                @Html.Hidden("ID")
                <div class="buttonArea popup-btn">
                    <button class="gray" data-dismiss="modal">@SharedLocalizer["Cancel"]</button>
                    <button type="button" onclick="DeleteDocument()" data-dismiss="modal" class="redBtn">@SharedLocalizer["Delete"]</button>
                </div>
            </div>
        </div>
    </div>
</div>


@section MyScripts {
    <script type="text/javascript" src="~/js/custom/ValuationRequest/ValuationRequestManage.js?v=@jsVersion"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js" integrity="sha512-GsLlZN/3F2ErC5ifS5QtgpiJtWd43JWSuIgh7mbzZ8zBps+dvLusV+eNQATqgA/HdeKFVgA5v3S/cIrLF7QnIg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <!-- html-to-pdfmake file: -->
    <script src="https://cdn.jsdelivr.net/npm/html-to-pdfmake/browser.js"></script>
    <script>
        //var DeleteValuationByIdUrl = "@Eltizam.Web.Helpers.APIURLHelper.DeleteValuationById";
        var DeleteLabel = "@SharedLocalizer["Delete"]";
        var ErrorMessage = "@SharedLocalizer["Error"]";
        var RecordDelete = "@SharedLocalizer["RecordDelete"]";
        var StatusMessage = '@TempData["StatusMessage"]';

        //#region Setup API Url
        // var ValuationFees = "@Eltizam.Web.Helpers.APIURLHelper.GetAllValuation";
        var GetAllValuationRequestStatus = "@Eltizam.Web.Helpers.APIURLHelper.GetAllValuationRequestStatus";
        var PropertyList = "@Eltizam.Web.Helpers.APIURLHelper.GetPropertyTypeList";//GetAllPropertyType";
        var PropertyByIdSubType = "@Eltizam.Web.Helpers.APIURLHelper.GetPropertyByPropertyTypeId";
        var ClientTypeList = "@Eltizam.Web.Helpers.APIURLHelper.GetSearchClientType";
        var ClientByClientTypeId = "@Eltizam.Web.Helpers.APIURLHelper.GetClientByClientTypeId";
        var OwnershipTypeList = "@Eltizam.Web.Helpers.APIURLHelper.OwnershipTypeList";//GetAllOwnershipType";
        var GetPropertyByFilters = "@Eltizam.Web.Helpers.APIURLHelper.GetPropertyByFilters";//GetAllOwnershipType";
        var GetPropertyById = "@Eltizam.Web.Helpers.APIURLHelper.GetPropertyById";//GetAllOwnershipType";
        var GetClientDetailById = "@Eltizam.Web.Helpers.APIURLHelper.GetClientById";//GetAllOwnershipType";
        // var ValuationFeeTypeList = "@Eltizam.Web.Helpers.APIURLHelper.ValuationFeeTypeList";//GetAllValuationFeeType";
        var CountryList = "@Eltizam.Web.Helpers.APIURLHelper.GetCountryList";
        var stateListUrl = "@Eltizam.Web.Helpers.APIURLHelper.GetStateListByCountryId";
        var cityListUrl = "@Eltizam.Web.Helpers.APIURLHelper.GeCityListByStateId";
        var GetApproverList = "@Eltizam.Web.Helpers.APIURLHelper.GetApproverList";
        var GetValuerList = "@Eltizam.Web.Helpers.APIURLHelper.GetApproverList";
        var GetDictionaryWithSubDetails = "@Eltizam.Web.Helpers.APIURLHelper.GetDictionaryWithSubDetails";
        var ValuationRequestGetById = "@Eltizam.Web.Helpers.APIURLHelper.ValuationRequestGetById";
        var ValuationQuatationById = "@Eltizam.Web.Helpers.APIURLHelper.ValuationQuatationById";
        var ValuationInvoiceList = "@Eltizam.Web.Helpers.APIURLHelper.ValuationInvoiceList";
        var ValuationQuatationList = "@Eltizam.Web.Helpers.APIURLHelper.ValuationQuatationList";
        var DeleteQuotationByIdUrl = "@Eltizam.Web.Helpers.APIURLHelper.DeleteQuotationById";
        var DeleteInvoiceByIdUrl = "@Eltizam.Web.Helpers.APIURLHelper.DeleteInvoiceById";
        var ValuationRequestGetById = "@Eltizam.Web.Helpers.APIURLHelper.ValuationRequestGetById";
        var RequeStatusReview = "@Eltizam.Web.Helpers.APIURLHelper.ReviewRequestStatus";
        var GetSiteDescriptionList = "@Eltizam.Web.Helpers.APIURLHelper.GetSiteDescriptionList";
         var GetPaymentInvoiceById = "@Eltizam.Web.Helpers.APIURLHelper.GetPaymentInvoiceById";
        var GetPaymentInvoiceById = "@Eltizam.Web.Helpers.APIURLHelper.GetPaymentInvoiceById";
        var DeletePyamentInvoice = "@Eltizam.Web.Helpers.APIURLHelper.DeletePyamentInvoice";
        var DeleteAssesmentDocument = "@Eltizam.Web.Helpers.APIURLHelper.DeleteDocument";
        //#region Static Messae Init
        var EditLabel = "@SharedLocalizer["Edit"]";

        var AddLabel = "@SharedLocalizer["Add"]";
        var UpdateLabel = "@SharedLocalizer["Update"]";
        var isViewHide = "@ViewBag.IsView";
        var isAddValuation = @Model.Id == 0;
    </script>
}
