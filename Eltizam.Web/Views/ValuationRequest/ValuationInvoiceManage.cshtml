@using Eltizam.Utility.Models
@model Eltizam.Business.Models.ValuationInvoiceListModel;
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Master> MasterLocalizer
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Shared> SharedLocalizer

@inject IConfiguration Configuration
@{
    string jsVersion = @Configuration.GetSection("StaticJS")["version"];
    var _header = " Valuation Invoice";
    var _md = @Model.Id > 0 ? "View" : "Add";
    ViewData["Title"] = _md + _header;

    var _cls = "defaultOpenPay";
    var _id1 = @Model.TransactionModeId == 1 ? _cls : "";
    var _id2 = @Model.TransactionModeId == 2 ? _cls : "";
    var _id3 = @Model.TransactionModeId == 3 ? _cls : "";
    var _id4 = @Model.TransactionModeId == 4 ? _cls : "";
    if (Model.Id <= 0)
    {
        _id1 = _cls;
    } 
}

<main>
    <div class="whiteBoxShadow">
        <div class="heading position-relative flex justify-between">
            <h3 class="dashboardTitle">@_md @_header</h3>
            <div class="hamburger">
                <a class="greyBtn lineBtn formAbtn" asp-action="ValuationRequests">Valuation Requests</a>
                <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                <a class="greyBtn lineBtn formAbtn" href="ValuationRequestManage?id=@Model.ValuationRequestId">Valuation Details</a>
                <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                <input type="hidden" id="md" value="@_md" />
                <span>@_md @_header</span>
            </div>
        </div>
        <div class="bodyContent">

            <div class="whiteBoxShadow m-0" id="footerAudit">
                <div class=" position-relative flex justify-between align-item-center" style="margin: 10px 10px 5px 15px;font-size: 16px;">
                    <label style="font-size:16px;">
                        Val. Ref# : @Model.ReferenceNo
                    </label>
                    <label style="font-size:16px;">
                        Client : @Model.ClientName
                    </label>
                    <label style="font-size:16px;">
                        Property : @Model.PropertyName
                    </label>
                    <label style="font-size:16px;">
                        Status : <label class="tableStatusBanner" style="color: @Model.ColorCode; background-color: @Model.BackGroundColor; border: 1px solid @Model.ColorCode;">@Model.StatusName</label>
                    </label>
                </div>
            </div>

            <form asp-action="ValuationInvoiceManage" method="POST" enctype="multipart/form-data" id="invoice">
                <div class="paymentOption">
                    <div class="payTab">
                        @Html.HiddenFor(model => model.Id, new { @class = "control-label" })
                        @Html.HiddenFor(model => model.ValuationRequestId, new { @class = "control-label" })
                        @Html.HiddenFor(model => model.ReferenceNo, new { @class = "control-label" })
                        @Html.HiddenFor(model => model.TransactionModeId, new { @class = "control-label" })
                        <input type="hidden" id="hdnValuationRequestId" value="@(Model == null ? 0 : Model.ValuationRequestId)" />
                        <input type="hidden" id="hdnReferenceNo" value="@(Model == null ? 0 : Model.ReferenceNo)" />
                        <input type="hidden" id="hdnId" value="@(Model == null ? 0 : Model.Id)" />
                        <input type="hidden" id="hdnTransactionStatusId" value="@(Model == null ? 0 : Model.TransactionStatusId)" />
                        <input type="hidden" id="hdnTransactionModeId" value="@(Model == null ? 0 : Model.TransactionModeId)" />
                        <input type="hidden" id="hdnTabId" value="1" />
                        <button class="payTabLink" type="button" onclick="payTab(event, 'pay1', 1)" id="@_id1">Cash</button>
                        <button class="payTabLink" type="button" onclick="payTab(event, 'pay2', 2)" id="@_id2">Cheque</button>
                        <button class="payTabLink" type="button" onclick="payTab(event, 'pay3', 3)" id="@_id3">Credit Card</button>
                        <button class="payTabLink" type="button" onclick="payTab(event, 'pay4', 4)" id="@_id4">Net Banking</button>
                    </div>

                    <div id="pay1" class="payTabContent">
                        <div class="flex buttonArea justify-between ptrl-20">
                            <h5>Cash Payment Details</h5>
                        </div>
                        <div class="inputSearchs">
                            <div class="tabSection">
                                <div class="flex mb-28">
                                    <label for="" class="w-50">
                                        <p class="m-0">Status<span class="text-danger">*</span></p>
                                        @* <select id="CashTransactionStatusId" class="">
                                        </select> *@
                                        @Html.DropDownListFor(model => model.CashTransactionStatusId, new List<SelectListItem> { }, new { @class = "form-control  searchable-dropdown" })
                                    </label>
                                    <label for="" class="w-50">
                                        <p class="m-0">Amount<span class="text-danger">*</span></p>
                                        @*  <input type="text" id="Amount" placeholder="enter the amount" class=" price formatting"> *@
                                        @Html.EditorFor(model => model.CashAmount, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control  formatting price", @placeholder = "enter amount" } })
                                        @* @Html.ValidationMessageFor(model => model.Vat, "", new { @class = "text-danger" }) *@
                                    </label>
                                </div>
                                <div class="flex mb-28">
                                    <label for="" class="w-50">
                                        <p class="m-0">Date<span class="text-danger">*</span></p>
                                        <input type="text" id="CashTransactionDate" asp-for="CashTransactionDate" class=" formatted-date-input">
                                        @* <input type="date" id="TransactionDate" name="TransactionDate" asp-for="TransactionDate" class=""> *@

                                    </label>
                                </div>

                            </div>
                        </div>
                    </div>
                    <div id="pay2" class="payTabContent">
                        <div class="flex buttonArea justify-between ptrl-20">
                            <h5>Cheque Payment Details</h5>
                        </div>
                        <div class="inputSearchs">
                            <div class="tabSection">
                                <div class="flex mb-28">
                                    <label for="" class="w-50">
                                        <p class="m-0">Status<span class="text-danger">*</span></p>
                                        @Html.DropDownListFor(model => model.ChequeTransactionStatusId, new List<SelectListItem> { }, new { @class = "form-control  searchable-dropdown" })
                                    </label>
                                    <label for="" class="w-50">
                                        <p class="m-0">Amount<span class="text-danger">*</span></p>
                                        @*  <input type="text" id="Amount" placeholder="enter the amount" class=" price formatting"> *@
                                        @Html.EditorFor(model => model.ChequeAmount, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control  formatting price", @placeholder = "enter amount" } })
                                        @* @Html.ValidationMessageFor(model => model.Vat, "", new { @class = "text-danger" }) *@
                                    </label>
                                </div>
                                <div class="flex mb-28">
                                    <label for="" class="w-50">
                                        <p class="m-0">Date<span class="text-danger">*</span></p>
                                        <input type="text" id="ChequeTransactionDate" asp-for="ChequeTransactionDate" class=" formatted-date-input">
                                        @* <input type="date" id="ChequeTransactionDate" name="ChequeTransactionDate" asp-for="ChequeTransactionDate" class=""> *@
                                    </label>
                                    <label for="" class="w-50">
                                        <p class="m-0">Cheque Number<span class="text-danger">*</span></p>
                                        @* <input type="number" id="ChequeNumber" placeholder="enter cheque number" class=""> *@
                                        @Html.EditorFor(model => model.CheckNumer, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control ", @placeholder = "enter cheque number" } })

                                    </label>
                                </div>
                                <div class="flex mb-28">
                                    <label for="" class="w-50">
                                        <p class="m-0">Cheque Bank Name<span class="text-danger">*</span></p>
                                        @* <input type="text" id="ChequeBankName" placeholder="enter bank name" class=""> *@
                                        @Html.EditorFor(model => model.CheckBankName, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control ", @placeholder = "enter bank name", oninput = "validateInput(this)" } })
                                    </label>
                                    <label for="" class="w-50">
                                        <p class="m-0">Cheque Date<span class="text-danger">*</span></p>
                                        <input type="text" id="CheckDate" asp-for="CheckDate" class=" formatted-date-input">
                                    </label>
                                </div>
                                <div class="flex mb-28">
                                    <label for="" class="w-50">
                                        <p class="m-0">Cheque Recieved Date<span class="text-danger">*</span></p>
                                        <input type="text" id="ChequeRecievedDate" asp-for="ChequeRecievedDate" class=" formatted-date-input">
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="pay3" class="payTabContent">
                        <div class="flex buttonArea justify-between ptrl-20">
                            <h5>Credit Card Payment Details</h5>
                        </div>
                        <div class="inputSearchs">
                            <div class="tabSection">

                                <div class="flex mb-28">
                                    <label for="" class="w-50">
                                        <p class="m-0">Status<span class="text-danger">*</span></p>
                                        @Html.DropDownListFor(model => model.CardTransactionStatusId, new List<SelectListItem> { }, new { @class = "form-control  searchable-dropdown" })
                                    </label>
                                    <label for="" class="w-50">
                                        <p class="m-0">Amount<span class="text-danger">*</span></p>
                                        @Html.EditorFor(model => model.CardAmount, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control  formatting price", @placeholder = "enter amount" } })
                                        @* @Html.ValidationMessageFor(model => model.Vat, "", new { @class = "text-danger" }) *@
                                    </label>
                                </div>
                                <div class="flex mb-28">
                                    <label for="" class="w-50">
                                        <p class="m-0">Date<span class="text-danger">*</span></p>
                                        <input type="text" id="CardTransactionDate" asp-for="CardTransactionDate" name="CardTransactionDate" class=" formatted-date-input">
                                    </label>
                                    <label for="" class="w-50">
                                        <p class="m-0">Transaction ID<span class="text-danger">*</span></p>
                                        @* <input type="number" id="CardTransactionId" placeholder="enter Transaction ID" class=""> *@
                                        @Html.EditorFor(model => model.CardTransactionId, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control ", @placeholder = "enter transaction id" } })
                                        @* @Html.ValidationMessageFor(model => model.Vat, "", new { @class = "text-danger" }) *@
                                    </label>
                                </div>
                                <div class="flex mb-28">
                                    <label for="" class="w-50">
                                        <p class="m-0">Credit Card Number<span class="text-danger">*</span></p>
                                        @* <input type="number" id="CreditCardNumber" placeholder="enter credit card number" class=""> *@
                                        @Html.EditorFor(model => model.CardNumber, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control  valiadteint", @placeholder = "enter card number" } })

                                    </label>
                                    <label for="" class="w-50">
                                        <p class="m-0">Bank Name<span class="text-danger">*</span></p>
                                        @* <input type="text" id="CardBankName" placeholder="enter bank name" class=""> *@
                                        @Html.EditorFor(model => model.CardBankName, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control ", @placeholder = "enter bank name", oninput = "validateInput(this)" } })

                                    </label>
                                </div>
                                <div class="flex mb-28">
                                    <label for="" class="w-50">
                                        <p class="m-0">Name on card<span class="text-danger">*</span></p>
                                        @* <input type="text" id="NameOnCard" placeholder="enter name on card" class=""> *@
                                        @Html.EditorFor(model => model.CardHolderName, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control ", @placeholder = "enter name on card", oninput = "validateInput(this)" } })

                                    </label>
                                    <label for="" class="w-50">
                                        <p class="m-0">Expiry Date<span class="text-danger">*</span></p>
                                        <input type="text" id="ExpireDate" asp-for="ExpireDate" name="ExpireDate" class=" formatted-date-input">

                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="pay4" class="payTabContent">
                        <div class="flex buttonArea justify-between ptrl-20">
                            <h5>Net Banking Payment Details</h5>
                        </div>
                        <div class="inputSearchs">
                            <div class="tabSection">
                                <div class="flex mb-28">
                                    <label for="" class="w-50">
                                        <p class="m-0">Status<span class="text-danger">*</span></p>
                                        @Html.DropDownListFor(model => model.BankTransactionStatusId, new List<SelectListItem> { }, new { @class = "form-control searchable-dropdown" })
                                    </label>
                                    <label for="" class="w-50">
                                        <p class="m-0">Amount<span class="text-danger">*</span></p>
                                        @Html.EditorFor(model => model.BankAmount, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control  formatting price", @placeholder = "enter amount" } })
                                        @* @Html.ValidationMessageFor(model => model.Vat, "", new { @class = "text-danger" }) *@
                                    </label>
                                </div>
                                <div class="flex mb-28">
                                    <label for="" class="w-50">
                                        <p class="m-0">Date<span class="text-danger">*</span></p>
                                        <input type="text" id="BankTransactionDate" asp-for="BankTransactionDate" class=" formatted-date-input">

                                    </label>
                                    <label for="" class="w-50">
                                        <p class="m-0">Transaction ID<span class="text-danger">*</span></p>
                                        @* <input type="number" id="BankTransactionId" placeholder="enter Transaction ID" class=""> *@
                                        @Html.EditorFor(model => model.BankTransactionId, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control", @placeholder = "enter transaction id" } })

                                    </label>
                                </div>
                                <div class="flex mb-28">
                                    <label for="" class="w-50">
                                        <p class="m-0">Bank Name<span class="text-danger">*</span></p>
                                        @*  <input type="text" id="BankName" placeholder="enter banke name" class=""> *@
                                        @Html.EditorFor(model => model.AccountBankName, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control ", @placeholder = "enter banke name", oninput = "validateInput(this)" } })

                                    </label>
                                    <label for="" class="w-50">
                                        <p class="m-0">Account Number<span class="text-danger">*</span></p>
                                        @* <input type="number" id="AccountNumber" placeholder="enter acount number" class=""> *@
                                        @Html.EditorFor(model => model.AccountHolderName, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control  valiadteint", @placeholder = "enter acount number" } })

                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <h3 class="blueHeading">Documents</h3>
                <div class="inputSearchs uploadDocBox">

                    <div class="tabSection">
                        @if (ViewBag.IsView != 1)
                        {
                            <div class="flex">
                                <label for="" class="w-100">
                                    <span class="m-0" style="font-weight:normal;">File size upto 5MB *</span>
                                    <input type="file" class="fileInput" asp-for="Document.Files" multiple onchange="validateFileSize(this)">
                                    <input type="text" class="fileNames" readonly placeholder="file names">
                                </label>
                            </div>
                        }
                        <div class="W-100">
                            <div class="prevUpload roundBorderBox m-0">
                                <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                    <p>Previously uploaded</p>
                                    <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                </div>
                                <div class="scroll-x">
                                    <table id="InvoiceTableDocument" class="table-striped">
                                        <thead>
                                            <tr>
                                                <th>File Name</th>
                                                <th>Updated Date</th>
                                                <th>Uploaded By</th>
                                                <th>Download</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div class="text-right ptrl-20 buttonArea bodyContent plr-0">
                               @*  <a href='/ValuationRequest/ValuationRequestManage?id=@Model.ValuationRequestId'> <button type="button" class="lineBtn greyBtn mr-12">Cancel</button></a> *@
                                <a href="/ValuationRequest/ValuationRequestManage?id=@Model.ValuationRequestId&IsView=1">
                                    <button type="button" class="lineBtn greyBtn mr-12">Cancel</button>
                                </a>
                                @if (Model.Id == 0)
                                {
                                    <button type="submit" class="blueBtn" style="width: 100px;border-radius: 4px;padding: 12px;" onclick="return SaveInvoice()">
                                        Save
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</main>


<div id="DeleteDocumentModel" class="modal themeModal " role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@SharedLocalizer["Delete"]</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Label(@SharedLocalizer["DeleteConfirm"])
                        </div>
                    </div>
                </div>
                @Html.Hidden("Id")
                <div class="buttonArea popup-btn">
                    <button class="gray" data-dismiss="modal">@SharedLocalizer["Cancel"]</button>
                    <button type="button" onclick="DeleteDocument()" data-dismiss="modal" class="redBtn">@SharedLocalizer["Delete"]</button>
                </div>
            </div>
        </div>
    </div>
</div>



@section MyScripts {
    <script type="text/javascript" src="~/js/custom/ValuationRequest/ValuationInvoiceManage.js?v=@jsVersion"></script>

    <script>
        // payemnt option JS here
        function payTab(evt, payName, num) {
            document.getElementById('hdnTabId').value = num;
            var i, payTabContent, payTabLink;
            payTabContent = document.getElementsByClassName("payTabContent");
            for (i = 0; i < payTabContent.length; i++) {
                payTabContent[i].style.display = "none";
            }
            payTabLink = document.getElementsByClassName("payTabLink");
            for (i = 0; i < payTabLink.length; i++) {
                payTabLink[i].className = payTabLink[i].className.replace(" active", "");
            }
            document.getElementById(payName).style.display = "block";
            evt.currentTarget.className += " active";

        }


        document.getElementById("defaultOpenPay").click();

        var ValuationInvoiceById = "@Eltizam.Web.Helpers.APIURLHelper.ValuationInvoiceById";
        var UpsertValuationInvoice = "@Eltizam.Web.Helpers.APIURLHelper.UpsertValuationInvoice";
        var transactionStatus = "@Eltizam.Web.Helpers.APIURLHelper.GetInvoiceTransactionStatus";
        var DeleteInvoiceDocument = "@Eltizam.Web.Helpers.APIURLHelper.DeleteInvoiceDocument";

        var DeleteLabel = "@SharedLocalizer["Delete"]";
        var ErrorMessage = "@SharedLocalizer["Error"]";
        var RecordDelete = "@SharedLocalizer["RecordDelete"]";
        var StatusMessage = '@TempData["StatusMessage"]';

    </script>
}