@using Microsoft.AspNetCore.Http
@using Eltizam.Web.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHttpContextAccessor HttpContextAccessor
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Master> MasterLocalizer

@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Shared> SharedLocalizer
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

@model Eltizam.Business.Models.Master_PropertyTypeModel
@{
    ViewData["Title"] = @MasterLocalizer["Property Type Manage"];
    string PageHeading = "";
    string jsVersion = @Configuration.GetSection("StaticJS")["version"];

}

<form asp-action="PropertyTypeManage" method="post">
    <main>
        <div class="whiteBoxShadow">
            <div class="heading position-relative">
                <h3 class="dashboardTitle">Property Sub Type</h3>
            </div>
            <div class="bodyContent">
                <div class="inputSearchs">
                    @Html.HiddenFor(model => model.Id, new { @class = "control-label" })
                    <div class="flex mb-28">
                        <label for="" class="w-50">
                            @Html.LabelFor(model => model.PropertyType, new { @class = "control-label" })
                            <span class="text-danger">*</span>
                            @Html.EditorFor(model => model.PropertyType, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control checkbox-checked", @placeholder = @MasterLocalizer["Property Type Name"] } })
                            @Html.ValidationMessageFor(model => model.PropertyType, "", new { @class = "text-danger" })
                        </label>
                        <label for="" class="w-50">
                            @Html.LabelFor(model => model.subType.PropertySubType, new { @class = "control-label" })
                            <span class="text-danger">*</span>
                            @Html.EditorFor(model => model.subType.PropertySubType, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control checkbox-checked", @placeholder = @MasterLocalizer["Property Type Name"] } })
                            @Html.ValidationMessageFor(model => model.subType.PropertySubType, "", new { @class = "text-danger" })
                        </label>
                    </div>
                   @*  <div class="propertySubTypeContainer">
                        @for (var i = 0; i < Model.subType.PropertySubType.Count; i++)
                        {
                            <div class="flex mb-28">
                                <label for="" class="w-50">
                                    <input type="text" asp-for="subType.PropertySubType[i]" class="form-control checkbox-checked" placeholder="Property SubType Name" />
                                </label>
                                @if (i > 0)
                                {
                                    <button type="button" class="btn btn-danger removeSubType" data-row="@i">Remove</button>
                                }
                            </div>
                        }

                    </div> *@
                    <button type="button" id="addSubTypeButton" class="btn btn-secondary">Add Property SubType</button>
                    <div class="text-center buttonArea">
                        <button type="submit" id="btnSaveRole" class="bgBlue mr-12">@SharedLocalizer["Save"]</button>
                        <a class="greyBtn lineBtn formAbtn" asp-action="Designation">@SharedLocalizer["Cancel"]</a>
                    </div>
                </div>
            </div>
        </div>
    </main>
</form>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
@* <script>
    $(document).ready(function () {
        var subTypeCounter = @Model.subType.PropertySubType.Count;

        // Function to add a new PropertySubType input
        function addSubTypeInput() {
            subTypeCounter++;
            var subTypeHtml = '<div class="flex mb-28" id="subTypeRow' + subTypeCounter + '">' +
                '<label for="" class="w-50">' +
                '<input type="text" asp-for="subType.PropertySubType[' + subTypeCounter + ']" class="form-control checkbox-checked" placeholder="Property SubType Name" />' +
                '</label>' +
                '<button type="button" class="btn btn-danger removeSubType" data-row="' + subTypeCounter + '">Remove</button>' +
                '</div>';
            $('.propertySubTypeContainer').append(subTypeHtml);
        }

        // Event handler for the plus button
        $('#addSubTypeButton').click(function () {
            addSubTypeInput();
        });

        // Event handler to remove a PropertySubType field
        $(document).on('click', '.removeSubType', function () {
            var rowToRemove = $(this).data('row');
            $('#subTypeRow' + rowToRemove).remove();
        });
    });

</script>
 *@

