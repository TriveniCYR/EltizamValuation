@model Eltizam.Business.Models.MasterClientModel;

@inject IConfiguration Configuration
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Master> MasterLocalizer
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Shared> SharedLocalizer
@{
    string jsVersion = @Configuration.GetSection("StaticJS")["version"];
}
    <!-- system user master -->
    <div class="flex">
        <div class="w-100 position-relative">
            <main class="plr-0">
                <div class="profileHead flex justify-between align-item-center cursor-pointer">
                    @if(Model.Id > 0)
                {
                    <h3 class="dashboardTitle">EDIT CLIENT MASTER</h3>
                    <div class="hamburger">
                        <span onclick="clientMaster()">Client Master</span>
                        <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                        <span>Edit Client Master</span>
                    </div>
                }
                else
                {
                    <h3 class="dashboardTitle">ADD CLIENT MASTER</h3>
                    <div class="hamburger">
                        <span onclick="clientMaster()">Client Master</span>
                        <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                        <span>Add Client Master</span>
                    </div>
                }
                </div>
                <div class="flex">
                    <div class="profileTabSection addProperty">
                        <div class="tab">
                            <button class="tablinks" onclick="profileTab(event, 'profile1')" id="defaultOpen">Client Details</button>
                            <button class="tablinks" onclick="profileTab(event, 'profile2')">Mailing Address</button>
                            <button class="tablinks" onclick="profileTab(event, 'profile3')">Upload Supporting Documents</button>
                        </div>

                    <form asp-action="ClientManage" method="POST" enctype="multipart/form-data">
                        <input type="hidden" id="hdnClientType" value="@(Model == null ? 0 : Model.ClientTypeId)" />
                        <input type="hidden" id="hdnId" asp-for="Id" value="@(Model == null ? 0 : Model.Id)" />
                            <div id="profile1" class="tabcontent">
                                <h3 class="ptrl-20">Clinet Details</h3>
                                <div class="inputSearchs">
                                    <div class="tabSection">

                                        <div class="flex fourBox">
                                            <div class="flex justify-center mb-28">
                                                <div class="resourceProfile clientImg text-center">
                                                    <img src="../assets/client1.png" alt="img-7" />
                                                    <div class="position-relative">
                                                        <div class="upload-profile-pic-btn">
                                                            <img src="../assets/upload-profile-pic.svg" alt="upload-profile-pic" />
                                                            Change photo
                                                        </div>
                                                        <input type="file" class="uploadPhoto" />
                                                    </div>
                                                </div>
                                            </div>
                                        <label for="ClientTypeId">
                                                Client Type
                                                <select id="ClientTypeId" name="ClientTypeId" class="form-control" asp-for="ClientTypeId"></select>
                                            </label>
                                        <label for="FirstName">
                                            First Name
                                            @Html.TextBoxFor(model => model.FirstName, new {@class = "form-control",  @placeholder = @SharedLocalizer["First Name"] })
                                        </label>
                                        <label for="MiddleName">
                                            Middle Name
                                            @Html.TextBoxFor(model => model.MiddleName, new {@class = "form-control",  @placeholder = @SharedLocalizer["Middle Name"] })
                                        </label>
                                    </div>
                                    <div class="flex">
                                           <label for="LastName">
                                            Middle Name
                                            @Html.TextBoxFor(model => model.LastName, new {@class = "form-control",  @placeholder = @SharedLocalizer["Last Name"] })
                                        </label>  
                                        <label for="Trnnumber">
                                                TRN Number
                                            @Html.TextBoxFor(model => model.Trnnumber, new {@class = "form-control",  @placeholder = @SharedLocalizer["TRN Number"] })
                                            </label>                                          
                                    </div>
                                    <div class="flex">
                                            <label for="TrnexpiryDate">
                                                TRN Expire Date
                                            <input type="date" id="TrnexpiryDate" name="TrnexpiryDate" asp-for="TrnexpiryDate">
                                            </label>
                                            <label for="">
                                                License Number
                                                @Html.TextBoxFor(model => model.LicenseNumber, new {@class = "form-control",  @placeholder = @SharedLocalizer["License Number"] })

                                        </label>
                                    </div>
                                    <div class="flex">
                                            <label for="IsActive" class="w-50">
                                                Status
                                                <input class='input-switch' type="checkbox" asp-for="IsActive" />
                                                <label class="label-switch" for="IsActive"></label>
                                                <span class="info-text"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div id="profile2" class="tabcontent">
                                <h3 class="ptrl-20">Mailing Address</h3>
                                <div class="inputSearchs">
                                <div class="tabSection">
                                    <input type="hidden" id="hdnCountry" value="@(Model.Address == null ? 0 : Model.Address.CountryId)" />
                                    <input type="hidden" id="hdnState" value="@(Model.Address == null ? 0 : Model.Address.StateId)" />
                                    <input type="hidden" id="hdnCity" value="@(Model.Address == null ? 0 : Model.Address.CityId)" />
                                    @Html.HiddenFor(model => model.Address.Id)
                                    <div class="addMoreAddress">
                                        <div class="flex">
                                            <label for="address1" class="w-100">
                                                <span>Address Line 1 </span>
                                                @Html.TextBoxFor(model => model.Address.Address1, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Address Line 1"] })
                                            </label>
                                            <label for="address2" class="w-100">
                                                Address Line 2
                                                @Html.TextBoxFor(model => model.Address.Address2, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Address Line 2"] })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="CountryId">
                                                CountryId
                                                @Html.DropDownListFor(model => model.Address.CountryId, new List<SelectListItem> { }, new { @class = "form-control"})
                                            </label>
                                            <label for="StateId">
                                                State
                                                @Html.DropDownListFor(model => model.Address.StateId, new List<SelectListItem> { }, new { @class = "form-control"})
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="CityId">
                                                City
                                                @Html.DropDownListFor(model => model.Address.CityId, new List<SelectListItem> { }, new { @class = "form-control"})
                                            </label>
                                            <label for="PinNo">
                                                Pin Code
                                                @Html.TextBoxFor(model => model.Address.PinNo, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Pin No"] })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="Email">
                                                Email
                                                @Html.TextBoxFor(model => model.Address.Email, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Email"] })
                                            </label>
                                            <label for="AlternateEmail">
                                                Alternate Email
                                                @Html.TextBoxFor(model => model.Address.AlternateEmail, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Alternate Email"] })
                                            </label>
                                        </div>
                                        <div class="flex threeBox">
                                            <label for="Phone">
                                                Phone
                                                @Html.TextBoxFor(model => model.Address.Phone, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Phone"] })
                                            </label>
                                            <label for="AlternatePhone">
                                                Alternate Phone
                                                @Html.TextBoxFor(model => model.Address.AlternatePhone, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Alternate Phone"] })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="">
                                                Landline phone
                                                @Html.TextBoxFor(model => model.Address.Landlinephone, new {@autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Landline phone"] })
                                            </label>
                                        </div>
                                    </div>
                                    <div class="text-right buttonArea bodyContent plr-0">
                                        <button type="button" class="lineBtn" onclick="addMoreAddress()">Add More</button>
                                    </div>
                                </div>
                                </div>
                            </div>


                            <div id="profile3" class="tabcontent">
                                <h3 class="ptrl-20">Upload Supporting Documents</h3>
                                <<div class="inputSearchs uploadDocBox">

                                    <div class="tabSection">
                                        <div class="flex mb-28">
                                            <label for="document">
                                                Documents Name
                                                @Html.TextBoxFor(model => model.Document.DocumentName, new {@autocomplete = "off", @class = "form-control",  @placeholder = @SharedLocalizer["Document"] })
                                            </label>
                                            <label for="atach">
                                                Attach Supporting Documents
                                                <div class="attachDoc">
                                                    <img src="../assets/cloud-upload.svg" alt="cloud-upload" />
                                                    <input type="file" asp-for="Document.Files" multiple />
                                                    <p>click to upload.</p>
                                                </div>
                                            </label>
                                        </div>
                                        <div class="W-100">
                                            <div class="prevUpload roundBorderBox m-0">
                                                <h3>Previously uploaded</h3>
                                                <div class="flex">
                                                    @if (Model.Documents != null)
                                                    {
                                                        @foreach (var docs in Model.Documents)
                                                        {
                                                            <div class="prevUploadTab">
                                                                <div class="flex align-item-center m-0">
                                                                    <img src="../assets/file.svg" alt="file" />
                                                                    <span>@docs.DocumentName</span>
                                                                </div>
                                                                <a href="../assets/download.svg" download target="_blank"><img src="../assets/download.svg" alt="download" /></a>
                                                            </div>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <label>NA</label>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="text-right buttonArea bodyContent plr-0">
                            <a href='/Client/Client'> <button type="button" class="lineBtn">Cancel</button></a>
                                <button type="submit" class="blueBtn">Update</button>
                            </div>
                        </form>

                    </div>
                </div>
            </main>
            <footer class="flex justify-between">
                <p>2023 © Eltizam.</p>
                <p>Design & Develop by NeoSoft</p>
            </footer>


        </div>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const addResourceRedirection = document.getElementById("addResourceRedirection");

            addResourceRedirection.addEventListener('click', () => {
                window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_Resource/addResource.html'
            });
        });
        
        $(document).ready(function () {
            BindClientType();
            BindCountry();
            BindState();
            BindCity();
            BindGender();
        });

        function profileTab(evt, cityName) {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            document.getElementById(cityName).style.display = "block";
            evt.currentTarget.className += " active";
        }
        document.getElementById("defaultOpen").click();

        function sideNavToggle() {
            var x = document.getElementById("sideNav");
            if (x.style.display === "none") {
                x.style.display = "block";
            } else {
                x.style.display = "none";
            }
        }

        function removeParentDiv(element) {
            const parentDiv = element.closest('.roundBorderBox');
            if (parentDiv) {
                parentDiv.remove();
            }
        }

        function addRoundBorderBox() {
            const roundBorderBox = document.querySelector('.roundBorderBox');
            const clonedDiv = roundBorderBox.cloneNode(true);

            roundBorderBox.parentElement.insertBefore(clonedDiv, roundBorderBox.nextSibling);

            const inputFields = clonedDiv.querySelectorAll('input');
            inputFields.forEach((input) => {
                input.value = '';
            });
        }

        // more address field on click
        function addMoreAddress() {
            const addMoreAddressBox = document.querySelector('.addMoreAddress');
            const clonedDiv = addMoreAddressBox.cloneNode(true);

            const minusDiv = document.createElement('div');
            minusDiv.className = 'text-right';
            minusDiv.innerHTML = `
                        <img src="../assets/minus-icon.svg" alt="minus-icon" class="minus-icon cursor-pointer" onclick="removeParentDivAddress(this)">
                    `;
            clonedDiv.insertBefore(minusDiv, clonedDiv.firstChild);

            addMoreAddressBox.parentElement.insertBefore(clonedDiv, addMoreAddressBox.nextSibling);

            const inputFields = clonedDiv.querySelectorAll('input');
            inputFields.forEach((input) => {
                input.value = '';
            });
        }
        function removeParentDivAddress(element) {
            const parentDivAdd = element.closest(".addMoreAddress");
            if (parentDivAdd) {
                parentDivAdd.remove()
            }
        }

        

    function BindClientType() {

        var ClientTypeList = "@Eltizam.Web.Helpers.APIURLHelper.GetClientTypeList";
        var ClientType = $("#ClientTypeId");
        $.ajax({
            type: "GET",
            url: $('#hdnBaseURL').val() + ClientTypeList,
            "datatype": "json",
            success: function (response) {
                ;
                ClientType.empty().append('<option selected="selected" value="0">Please select</option>');
                for (var i = 0; i < response.length; i++) {
                    ClientType.append($("<option></option>").val(response[i].id).html(response[i].clientType));
                }
                if ($('#hdnClientType').val() != 0) {
                    ClientType.val($('#hdnClientType').val());
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
                $("#loader").hide();
            }
        });
    }

    function BindCountry() {

        var CountryList = "@Eltizam.Web.Helpers.APIURLHelper.GetCountryList";
        var Country = $("#Address_CountryId");
        $.ajax({
            type: "GET",
            url: $('#hdnBaseURL').val() + CountryList,
            "datatype": "json",
            success: function (response) {
                ;
                Country.empty().append('<option selected="selected" value="0">Please select</option>');
                for (var i = 0; i < response.length; i++) {
                    Country.append($("<option></option>").val(response[i].id).html(response[i].countryName));
                }
                if ($('#hdnCountry').val() != 0) {
                    Country.val($('#hdnCountry').val());
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
                $("#loader").hide();
            }
        });
    }

    function BindState() {

        var StateList = "@Eltizam.Web.Helpers.APIURLHelper.GetStateList";
        var State = $("#Address_StateId");
        $.ajax({
            type: "GET",
            url: $('#hdnBaseURL').val() + StateList,
            "datatype": "json",
            success: function (response) {
                ;
                State.empty().append('<option selected="selected" value="0">Please select</option>');
                for (var i = 0; i < response.length; i++) {
                    State.append($("<option></option>").val(response[i].id).html(response[i].stateName));
                }
                if ($('#hdnState').val() != 0) {
                    State.val($('#hdnState').val());
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
                $("#loader").hide();
            }
        });
    }

    function BindCity() {

        var CityList = "@Eltizam.Web.Helpers.APIURLHelper.GetCityList";
        var City = $("#Address_CityId");
        $.ajax({
            type: "GET",
            url: $('#hdnBaseURL').val() + CityList,
            "datatype": "json",
            success: function (response) {
                ;
                City.empty().append('<option selected="selected" value="0">Please select</option>');
                for (var i = 0; i < response.length; i++) {
                    City.append($("<option></option>").val(response[i].id).html(response[i].cityName));
                }
                if ($('#hdnCity').val() != 0) {
                    City.val($('#hdnCity').val());
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
                $("#loader").hide();
            }
        });
    }
        function resourceMaster() {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_Resource/resource-master.html'
        }
        function userMaster() {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_User/user-master.html'
        }
        function roleMaster() {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_Role/role-master.html'
        }

        function locationMaster() {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_location-master.html'
        }
        function propTypeMaster() {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_Property_Type/property-type-master.html'
        }
        function designation() {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_Designation/designation-master.html'
        }
        function department() {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_Department/department-master.html'
        }
        function propMaster() {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_Property/property-master.html'
        }
        function clientMaster() {
            window.location.href = 'file:///C:/Users/User/OneDrive/Desktop/workspace/Eltizam/Master_Client/client-master.html'
        }
    </script>