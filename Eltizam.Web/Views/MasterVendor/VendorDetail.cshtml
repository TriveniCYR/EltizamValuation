@model Eltizam.Business.Models.MasterVendorModel;

@inject IConfiguration Configuration
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Master> MasterLocalizer
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Shared> SharedLocalizer
@{
    string jsVersion = @Configuration.GetSection("StaticJS")["version"];
    var _header = " Vendor Manage";
    var _md = "View";
    var htmlAttributes = true;
    ViewData["Title"] = _md + _header;
}
 
<main>
    <div class="whiteBoxShadow">
        <div class="heading position-relative flex justify-between">
            <h3 class="dashboardTitle">@_md @_header</h3>
            <div class="hamburger">
                <a class="greyBtn lineBtn formAbtn" asp-action="Vendors">@_header</a>
                <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                <span>@_md</span>
            </div>
        </div>
        <div class="bodyContent">
            <div class="profileTabSection">
                <div class="tab">
                    <button class="tablinks" onclick="profileTab(event, 'profile1')" id="defaultOpen">Vendor Details</button>
                    <button class="tablinks" onclick="profileTab(event, 'profile2')">Mailing Address</button>
                    <button class="tablinks" onclick="profileTab(event, 'profile3')">Contact Details</button>
                </div>

                <form asp-action="VendorManage" method="POST" enctype="multipart/form-data">
                    <input type="hidden" id="hdnId" asp-for="Id" value="@(Model == null ? 0 : Model.Id)" />
                    <div id="profile1" class="tabcontent">
                        @* <h3 class="ptrl-20">Clinet Details</h3> *@
                        <div class="inputSearchs">
                            <div class="tabSection">
                                <div class="flex">
                                    <div class="flex justify-center mb-28">

                                        <div class="resourceProfile clientImg text-center">
                                            @if (Model.ProfileAttachmentId > 0)
                                            {
                                                <img id="previewImage" src="@Model.ProfilePath" alt="upload-profile-pic" class="w-100" style="margin-bottom: 36px;" />
                                            }
                                            else
                                            {
                                                <img id="previewImage" src="../assets/client1.png" alt="img-7" />
                                            }


                                        </div>
                                    </div>
                                    <label for="Status" class="w-50">
                                        Status
                                        <input type="checkbox" id="addLocation" class="input-switch" name="IsActive" disabled asp-for="Status" />
                                        <label class="label-switch" for="addLocation"></label>
                                        <span class="info-text" style="top:-20px;"></span>
                                    </label>
                                </div>
                                <div class="flex">
                                    <label for="VendorName">
                                        Vendor Name
                                        @Html.TextBoxFor(model => model.VendorName, new {@disabled=htmlAttributes, @class = "form-control",  @placeholder = @SharedLocalizer["Vendor Name"] })

                                    </label>
                                    <label for="CompanyName">
                                        Company Name
                                        @Html.TextBoxFor(model => model.CompanyName, new {@disabled=htmlAttributes, @class = "form-control",  @placeholder = @SharedLocalizer["Company Name"] })
                                    </label>
                                </div>
                                <div class="flex">
                                    <label for="EstimattionDate">
                                        Estimation Date
                                        <input type="text" id="EstimattionDate" class="formatted-date-input" name="EstimattionDate" asp-for="EstimattionDate" disabled />
                                    </label>
                                    <label for="BusinessTypeId">
                                        Business Type
                                        @Html.TextBoxFor(model => model.BusinessType, new {@disabled=htmlAttributes, @class = "form-control",  @placeholder = @SharedLocalizer["Business Type"] })
                                    </label>
                                </div>
                                <div class="flex">
                                    <label for="CompanyDescription">
                                        Company Description
                                        @Html.TextBoxFor(model => model.CompanyDescription, new {@disabled=htmlAttributes, @class = "form-control",  @placeholder = @SharedLocalizer["Company Description"] })
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="profile2" class="tabcontent">
                        @*  <h3 class="ptrl-20">Mailing Address</h3> *@
                        <div class="inputSearchs p-0">
                            <div class="tabSection" id="addresses-container">
                                @for (int i = 0; i < Model.Addresses.Count; i++)
                                {
                                    <div class="addMoreAddress">
                                        <input type="hidden" id="@("hdnCountry_"+i)" value="@(Model.Addresses[i] == null ? 0 : Model.Addresses[i].CountryId)" />
                                        <input type="hidden" id="@("hdnState_"+i)" value="@(Model.Addresses[i] == null ? 0 : Model.Addresses[i].StateId)" />
                                        <input type="hidden" id="@("hdnCity_"+i)" value="@(Model.Addresses[i] == null ? 0 : Model.Addresses[i].CityId)" />
                                        <input type="hidden" id="@("hdnPhoneExt_"+i)" value="@(Model.Addresses[i] == null ? 0 : Model.Addresses[i].PhoneExt)" />
                                        <input type="hidden" id="@("hdnAlternatePhoneExt_"+i)" value="@(Model.Addresses[0] == null ? 0 : Model.Addresses[i].AlternatePhoneExt)" />
                                        @Html.HiddenFor(model => model.Addresses[i].Id)
                                        <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                            <p>Mailing Address Section</p>
                                            <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                        </div>
                                        <div class="pannel" style="height:auto;overflow:hidden">
                                            <div class="flex">
                                                <label for="address1">
                                                    <p class="m-0">Address<span class="text-danger">*</span></p>
                                                    @Html.TextBoxFor(model => model.Addresses[i].Address1, new {@disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Address"] })
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].Address1, "", new { @class = "text-danger" })
                                                </label>
                                                <label for="address2">
                                                    Address (2)
                                                    @Html.TextBoxFor(model => model.Addresses[i].Address2, new {@disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Address (2)"] })
                                                </label>
                                            </div>
                                            <div class="flex">
                                                <label for="CountryId">
                                                    <p class="m-0">Country<span class="text-danger">*</span></p>
                                                    @Html.DropDownListFor(model => model.Addresses[i].CountryId, new List<SelectListItem> { }, new { @disabled=htmlAttributes, @class = "form-control", @onchange = "BindCurrentState(this.options[this.selectedIndex].value,event)"})
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].CountryId, "", new { @class = "text-danger" })
                                                </label>
                                                <label for="StateId">
                                                    <p class="m-0">State<span class="text-danger">*</span></p>
                                                    @Html.DropDownListFor(model => model.Addresses[i].StateId, new List<SelectListItem> { }, new { @disabled=htmlAttributes, @class = "form-control", @onchange = "BindCurrentCity(this.options[this.selectedIndex].value,event)"})
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].StateId, "", new { @class = "text-danger" })
                                                </label>
                                            </div>
                                            <div class="flex">
                                                <label for="CityId">
                                                    <p class="m-0">City<span class="text-danger">*</span></p>
                                                    @Html.DropDownListFor(model => model.Addresses[i].CityId, new List<SelectListItem> { }, new { @disabled=htmlAttributes, @class = "form-control"})
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].CityId, "", new { @class = "text-danger" })
                                                </label>
                                                <label for="PinNo">
                                                    Zip / PO Box
                                                    @Html.TextBoxFor(model => model.Addresses[i].PinNo, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked", @placeholder = @SharedLocalizer["Zip / PO Box"] })
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].PinNo, "", new { @class = "text-danger" })
                                                </label>
                                            </div>
                                            <div class="flex">
                                                <label for="Email">
                                                    <p class="m-0">Email<span class="text-danger">*</span></p>
                                                    @Html.TextBoxFor(model => model.Addresses[i].Email, new {@disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Email"] })
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].Email, "", new { @class = "text-danger" })
                                                </label>
                                                <label for="AlternateEmail">
                                                    Alternate Email
                                                    @Html.TextBoxFor(model => model.Addresses[i].AlternateEmail, new {@disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Alternate Email"] })
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].AlternateEmail, "", new { @class = "text-danger" })
                                                </label>
                                            </div>
                                            <div class="flex">
                                                <label for="Phone">
                                                    <p class="m-0">Phone<span class="text-danger">*</span></p>
                                                    <div class="flex align-item-center flex-start m-0 phoneWithDrop">
                                                        @Html.DropDownListFor(model => model.Addresses[i].PhoneExt, new List<SelectListItem> { }, new { @disabled=htmlAttributes, @class = "", @style="border-right: 0" })

                                                        @Html.TextBoxFor(model => model.Addresses[i].Phone, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked", @placeholder = @SharedLocalizer["Phone"] })

                                                    </div>
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].Phone, "", new { @class = "text-danger" })
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].PhoneExt, "", new { @class = "text-danger" })
                                                </label>
                                                <label for="AlternatePhone">
                                                    Alternate Phone
                                                    <div class="flex align-item-center flex-start m-0 phoneWithDrop">
                                                        @Html.DropDownListFor(model => model.Addresses[i].AlternatePhoneExt, new List<SelectListItem> { }, new { @disabled=htmlAttributes, @class = "", @style="border-right: 0" })

                                                        @Html.TextBoxFor(model => model.Addresses[i].AlternatePhone, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked", @placeholder = @SharedLocalizer["Alternate Phone"] })

                                                    </div>
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].AlternatePhone, "", new { @class = "text-danger" })
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].AlternatePhoneExt, "", new { @class = "text-danger" })
                                                </label>
                                            </div>
                                            <div class="flex">
                                                <label for="">
                                                    Landline phone
                                                    @Html.TextBoxFor(model => model.Addresses[i].Landlinephone, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Landline phone"] })
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].Landlinephone, "", new { @class = "text-danger" })
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div id="profile3" class="tabcontent">
                        @* <h3 class="ptrl-20">Contact Details</h3> *@
                        <div class="inputSearchs p-0">
                            <div class="tabSection" id="contacts-container">
                                @for (int i = 0; i < Model.Contacts.Count; i++)
                                {
                                    <div class="roundBorderBox">
                                        <input type="hidden" id="@("hdnDeparment_"+i)" value="@(Model.Contacts[i] == null ? 0 : Model.Contacts[i].DepartmentId)" />
                                        <input type="hidden" id="@("hdnDesignation_"+i)" value="@(Model.Contacts[i] == null ? 0 : Model.Contacts[i].DesignationId)" />
                                        <input type="hidden" id="@("hdnMobileExt_"+i)" value="@(Model.Contacts[i] == null ? 0 : Model.Contacts[i].MobileExt)" />
                                        @Html.HiddenFor(model => model.Contacts[i].Id)
                                        <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                            <p>Contact Section</p>
                                            <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                        </div>
                                        <div class="pannel mt-28" style="height:auto;overflow:hidden">
                                            <div class="flex">
                                                <label for="ContactPersonName">
                                                    Contact Person Name
                                                    @Html.TextBoxFor(model => model.Contacts[i].ContactPersonName, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Contact Person"] })
                                                    @Html.ValidationMessageFor(model => model.Contacts[i].ContactPersonName, "", new { @class = "text-danger" })
                                                </label>
                                                <label for="Subject">
                                                    Department
                                                    @Html.DropDownListFor(model => model.Contacts[i].DepartmentId, new List<SelectListItem>(), new { @disabled=htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Department"] })
                                                </label>
                                            </div>
                                            <div class="flex">
                                                <label for="Institute">
                                                    Designation
                                                    @Html.DropDownListFor(model => model.Contacts[i].DesignationId, new List<SelectListItem>(), new { @disabled=htmlAttributes, @class = "form-control", @placeholder = @SharedLocalizer["Designation"] })
                                                </label>
                                                <label for="year">
                                                    <p class="m-0">Email<span class="text-danger">*</span></p>
                                                    @Html.TextBoxFor(model => model.Contacts[i].Email, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Email"] })
                                                    @Html.ValidationMessageFor(model => model.Contacts[i].Email, "", new { @class = "text-danger" })
                                                </label>
                                            </div>
                                            <div class="flex">
                                                <label for="grade" class="w-50">
                                                    <p class="m-0">Phone Number<span class="text-danger">*</span></p>
                                                    <div class="flex align-item-center flex-start m-0 phoneWithDrop">
                                                        @Html.DropDownListFor(model => model.Contacts[i].MobileExt, new List<SelectListItem> { }, new { @disabled=htmlAttributes, @class = "", @style="border-right: 0" })

                                                        @Html.TextBoxFor(model => model.Contacts[i].Mobile, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Phone Number"] })

                                                    </div>
                                                    @Html.ValidationMessageFor(model => model.Contacts[i].MobileExt, "", new { @class = "text-danger" })
                                                    @Html.ValidationMessageFor(model => model.Contacts[i].Mobile, "", new { @class = "text-danger" })
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="text-right buttonArea bodyContent plr-0">
                        <a href='/MasterVendor/Vendors'> <button type="button" class="lineBtn greyBtn">Cancel</button></a>
                        <a href='/MasterVendor/VendorManage?id=@Model.Id'>
                            <button type="button" class="blueBtn" style=" width:100px">Edit</button>
                        </a>                        
                        @* <button type="submit" class="blueBtn">Save</button> *@
                    </div>
                </form>

            </div>
        </div>
    </div>
</main>
 
@section MyScripts {

    <script type="text/javascript" src="~/js/custom/Vendor/VendorDetail.js?v=@jsVersion"></script>
    <script>
        //#region Setup API Url
        var CountryList = "@Eltizam.Web.Helpers.APIURLHelper.GetCountryList";
        var StateList = "@Eltizam.Web.Helpers.APIURLHelper.GetStateListByCountryId";
        var CityList = "@Eltizam.Web.Helpers.APIURLHelper.GeCityListByStateId";
        var DesignationList = "@Eltizam.Web.Helpers.APIURLHelper.GetDesignationList";
        var DepartmentList = "@Eltizam.Web.Helpers.APIURLHelper.GetDepartmentList";
        var GetDictionaryWithSubDetails = "@Eltizam.Web.Helpers.APIURLHelper.GetDictionaryWithSubDetails";

        var addressContainer = $("#addresses-container");
        var addressLength = addressContainer.children(".addMoreAddress").length;
        var contactContainer = $("#contacts-container");
        var contactLength = contactContainer.children(".roundBorderBox").length;
    </script>
}