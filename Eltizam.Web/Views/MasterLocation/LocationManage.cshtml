@model Eltizam.Business.Models.MasterLocationEntity;

@inject IConfiguration Configuration
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Master> MasterLocalizer
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Shared> SharedLocalizer
@{
    string jsVersion = @Configuration.GetSection("StaticJS")["version"];
    string PageHeading = "";
    if (ViewBag.IsView == 0)
    {
        PageHeading = "Edit";
    }

    else if (ViewBag.IsView == 2)
    {
        PageHeading = "Add";
    }
    else
    {
        PageHeading = "View";
    }
    var _header = "Location";
    ViewData["Title"] = "Location Manage";
}
<!-- system user master -->
<form asp-action="LocationManage" autocomplete="off" asp-controller="MasterLocation" method="post">
    <main>
        <div class="whiteBoxShadow">
            <div class="heading position-relative flex justify-between">
                <h3 class="dashboardTitle">@PageHeading @_header</h3>
                <div class="hamburger">
                    <a class="greyBtn lineBtn formAbtn" asp-action="Locations">@_header</a>
                    <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                    <span>@PageHeading</span>
                </div>
            </div>
            <div class="bodyContent">
                <div class="inputSearchs p-0">
                    <div class="tabSection">
                        <input type="hidden" id="hdnCountry" value="@(Model.CountryId == null ? 0 : Model.CountryId)" />
                        <input type="hidden" id="hdnState" value="@(Model.StateId == null ? 0 : Model.StateId)" />
                        <input type="hidden" id="hdnCity" value="@(Model.CityId == null ? 0 : Model.CityId)" />
                        <input type="hidden" id="hdnId" value="@(Model.Id == null ? 0 : Model.Id)" />
                        <input type="hidden" id="hdnHomeCurrencyId" value="@(Model.HomeCurrencyId == null ? 0 : Model.HomeCurrencyId)" />
                        <input type="hidden" id="hdnForeignCurrencyId" value="@(Model.ForeignCurrencyId == null ? 0 : Model.ForeignCurrencyId)" />
                        @Html.HiddenFor(model=>model.Id)                      
                        <div class="flex">
                            <label for="CountryId" class="w-50">
                                Country Name
                                @Html.DropDownListFor(model => model.CountryId, new List<SelectListItem> { }, new { @class = "form-control disabletxtbox", @onchange = "BindState(this.options[this.selectedIndex].value)"})

                            </label>
                            <label for="" class="w-50">
                                Status
                                @{
                                    bool isActive = Model.Status == 1; // Convert 1 to true, any other value to false
                                }

                                <input type="checkbox" id="addLocation" class="input-switch" name="Status" value="1" @(isActive ? "checked" : "") required />
                                <label class="label-switch" for="addLocation"></label>
                                <span class="info-text"></span>
                            </label>

                        </div>
                        <div class="flex">                        
                            <label for="StateId" class="w-50">
                                State Name
                                @Html.DropDownListFor(model => model.StateId, new List<SelectListItem> { }, new { @class = "form-control disabletxtbox",@onchange = "BindCity(this.options[this.selectedIndex].value)"})
                            </label>
                            <label for="CityId" class="w-50">
                                City / Emirates
                                @Html.DropDownListFor(model => model.CityId, new List<SelectListItem> { }, new { @class = "form-control disabletxtbox"})
                            </label>
                        </div>
                        <div class="flex">
                            <label for="resourceType" class="w-50">
                                Sector / Zone
                                @Html.TextBoxFor(model => model.Sector,  new { @class = "form-control disabletxtbox" })
                            </label>
                            <label for="Geo-coordinates" class="w-50">
                                Latitude
                                @Html.TextBoxFor(model => model.Latitude,  new { @class = "form-control disabletxtbox" })
                            </label>
                        </div>
                        <div class="flex">
                            <label for="" class="w-50">
                                Longitude
                                @Html.TextBoxFor(model => model.Longitude,  new { @class = "form-control disabletxtbox" })
                            </label>
                            <label for="Geo-coordinates" class="w-50">
                                Home Currency
                               @*  @Html.TextBoxFor(model => model.HomeCurrencyId,  new { @class = "form-control disabletxtbox" }) *@
                                @Html.DropDownListFor(model => model.HomeCurrencyId, new List<SelectListItem>{},  new { @class = "form-control disabletxtbox"})
                               @*  @Html.DropDownListFor(model => model.HomeCurrencyId, new SelectList(new List<SelectListItem>(), "Value", "Text", Model.HomeCurrencyId), new { @class = "form-control disabletxtbox" })
 *@
                            </label>
                        </div>
                        <div class="flex">
                            <label for="Geo-coordinates" class="w-50">
                                Foreign Currency
                                @*  @Html.TextBoxFor(model => model.ForeignCurrencyId,  new { @class = "form-control disabletxtbox" })*@
                                 @Html.DropDownListFor(model => model.ForeignCurrencyId, new List<SelectListItem> { },  new { @class = "form-control disabletxtbox" })
                            </label>
                        </div> 
                        <div class="flex">
                        </div>
                        <div class="text-right buttonArea bodyContent plr-0">
                            @if (ViewBag.IsView != 1)
                            {
                                <button type="submit" class="lineBtn greyBtn" id="resetLocation">Cancel</button>
                                <button type="submit" id="btnSave" class="bgBlue">Save</button>

                            }

                        </div>
                    </div>
                </div>
            </div>


        </div>
    </main>
</form>

@section MyScripts {
    <script type="text/javascript" src="~/js/custom/location/locationmanagement.js?v=@jsVersion"></script>
   @*  <script type="text/javascript" src="~/js/Custom/Location/LocationManagement.js?v=@jsVersion"></script> *@
    <script>
        var CountryList = "@Eltizam.Web.Helpers.APIURLHelper.GetCountryList";
        var stateListUrl = "@Eltizam.Web.Helpers.APIURLHelper.GetStateListByCountryId";
        var cityListUrl = "@Eltizam.Web.Helpers.APIURLHelper.GeCityListByStateId";
        $(document).ready(function () {
            BindCountry();
            if (@ViewBag.IsView == 1) {
                $(".disabletxtbox").prop("disabled", true);
                $("#addLocation").prop("disabled", true);
                // Disable the associated label element
                $("label[for='addLocation']").addClass("disabled");
            }
            var selectedHomeCurrencyId = $('#hdnHomeCurrencyId').val() //@Model.HomeCurrencyId;           
            $("#HomeCurrencyId").text(selectedHomeCurrencyId);
            var HdnCountryId = $('#hdnCountry').val();
            if (HdnCountryId) {
                BindState(HdnCountryId);
            }
            var HdnStateId = $('#hdnState').val();
            if (HdnStateId) {
                BindCity(HdnStateId);
            }
        });
        function BindCountry() {
            var countryId = $("#CountryId");
            var _val = $('#hdnCountry').val();
            var _rpname = "countryName";

            BindDropdowns(CountryList, countryId, _rpname, _val);
        }
        function BindState(id) {
            var state = $("#StateId");
            var _val = $('#hdnState').val();
            var _rpname = "stateName";

            BindDropdowns(stateListUrl + '/' + id, state, _rpname, _val);
        }
        function BindCity(id) {
            var city = $("#CityId");
            var _val = $('#hdnCity').val();
            var _rpname = "cityName";

            BindDropdowns(cityListUrl + '/' + id, city, _rpname, _val);
        }
    </script>
}