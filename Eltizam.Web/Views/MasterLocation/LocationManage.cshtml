@model Eltizam.Business.Models.MasterLocationEntity;
@using Eltizam.Utility.Models;
@inject IConfiguration Configuration
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Master> MasterLocalizer
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Shared> SharedLocalizer
@{
    string jsVersion = @Configuration.GetSection("StaticJS")["version"];
    var objPermssion = (RolePermissionModel)ViewBag.Access;
    var isAdd = objPermssion.Add ? 1 : 0;
    var isEdit = objPermssion.Edit ? 1 : 0;
    string PageHeading = "";
    if (ViewBag.IsView == 0)
    {
        PageHeading = "Edit";
    }

    else if (ViewBag.IsView == 2)
    {
        PageHeading = "Add";
    }
    else
    {
        PageHeading = "View";
    }
    var _header = "Location";
    ViewData["Title"] = "Location Manage";
}
<!-- system user master -->
<form asp-action="LocationManage" autocomplete="off" asp-controller="MasterLocation" method="post">
    <main>
        <div class="whiteBoxShadow">
            <div class="heading position-relative flex justify-between">
                <h3 class="dashboardTitle">@PageHeading @_header</h3>
                <div class="hamburger">
                    <a class="greyBtn lineBtn formAbtn" asp-action="Locations">@_header</a>
                    <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                    <span>@PageHeading</span>
                </div>
            </div>
            <div class="bodyContent">
                <div class="inputSearchs p-0">
                    <div class="tabSection">
                        <input type="hidden" id="hdnCountry" value="@(Model.CountryId == null ? 0 : Model.CountryId)" />
                        <input type="hidden" id="hdnState" value="@(Model.StateId == null ? 0 : Model.StateId)" />
                        <input type="hidden" id="hdnCity" value="@(Model.CityId == null ? 0 : Model.CityId)" />
                        <input type="hidden" id="hdnId" value="@(Model.Id == null ? 0 : Model.Id)" />
                        <input type="hidden" id="hdnHomeCurrencyId" value="@(Model.HomeCurrencyId == null ? 0 : Model.HomeCurrencyId)" />
                        <input type="hidden" id="hdnForeignCurrencyId" value="@(Model.ForeignCurrencyId == null ? 0 : Model.ForeignCurrencyId)" />
                        <input type="hidden" id="isAddPerm" value="@isAdd" />
                        <input type="hidden" id="isEditPerm" value="@isEdit" />
                        @Html.HiddenFor(model=>model.Id)
                        <div class="flex">
                            <label for="CountryId" class="w-50">
                                <p class="m-0">Country<span class="text-danger">*</span></p>
                                @Html.DropDownListFor(model => model.CountryId, new List<SelectListItem> { }, new { @class = "form-control  ", @onchange = "BindState(this.options[this.selectedIndex].value)"})
                                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                            </label>

                            <label for="IsActive" class="w-50">
                                Status
                                <input class='input-switch' type="checkbox" asp-for="IsActive" />
                                <label class="label-switch" for="IsActive"></label>
                                <span class="info-text"></span>
                            </label>

                        </div>
                        <div class="flex">
                            <label for="StateId" class="w-50">
                                <p class="m-0">State<span class="text-danger">*</span></p>
                                @Html.DropDownListFor(model => model.StateId, new List<SelectListItem> { }, new { @class = "form-control  ",@onchange = "BindCity(this.options[this.selectedIndex].value)"})
                                @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                            </label>
                            <label for="CityId" class="w-50">
                                <p class="m-0">City / Emirates<span class="text-danger">*</span></p>
                                @Html.DropDownListFor(model => model.CityId, new List<SelectListItem> { }, new { @class = "form-control  "})
                                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                            </label>
                        </div>
                        <div class="flex">
                            <label for="resourceType" class="w-50">
                                <p class="m-0">Sector / Zone<span class="text-danger">*</span></p>
                                @Html.TextBoxFor(model => model.Sector,  new { @class = "form-control " })
                                @Html.ValidationMessageFor(model => model.Sector, "", new { @class = "text-danger" })
                            </label>
                            <label for="Geo-coordinates" class="w-50">
                                Latitude
                                @Html.TextBoxFor(model => model.Latitude,  new { @class = "form-control  " })
                            </label>
                        </div>
                        <div class="flex">
                            <label for="" class="w-50">
                                Longitude
                                @Html.TextBoxFor(model => model.Longitude,  new { @class = "form-control  " })
                            </label>
                            <label for="Geo-coordinates" class="w-50">
                                <p class="m-0">Home Currency<span class="text-danger">*</span></p>
                                @Html.DropDownListFor(model => model.HomeCurrencyId, new List<SelectListItem>{},  new { @class = "form-control  "})
                                @Html.ValidationMessageFor(model => model.HomeCurrencyId, "", new { @class = "text-danger" })
                            </label>
                        </div>
                        <div class="flex">
                            <label for="Geo-coordinates" class="w-50">
                                <p class="m-0">Foreign Currency<span class="text-danger">*</span></p>
                                @Html.DropDownListFor(model => model.ForeignCurrencyId, new List<SelectListItem> { },  new { @class = "form-control  " })
                                @Html.ValidationMessageFor(model => model.ForeignCurrencyId, "", new { @class = "text-danger" })
                            </label>
                        </div>
                        <div class="flex">
                        </div>
                        <div class="text-right buttonArea bodyContent plr-0">
                            <a class="greyBtn lineBtn formAbtn" asp-action="Locations">@SharedLocalizer["Cancel"]</a>
                            @if (ViewBag.IsView != 1)
                            {

                                <button type="submit" id="btnSaveEdit" class="bgBlue">Save</button>

                            }
                        </div>
                    </div>
                </div>
            </div>


        </div>
    </main>
</form>

@section MyScripts {
    <script type="text/javascript" src="~/js/custom/location/locationmanagement.js?v=@jsVersion"></script>
    <script>
        var CountryList = "@Eltizam.Web.Helpers.APIURLHelper.GetCountryList";
        var stateListUrl = "@Eltizam.Web.Helpers.APIURLHelper.GetStateListByCountryId";
        var cityListUrl = "@Eltizam.Web.Helpers.APIURLHelper.GeCityListByStateId";
        var currencyUrl = "@Eltizam.Web.Helpers.APIURLHelper.GetDictionaryDescriptionById";
        var LocationGetAll = "@Eltizam.Web.Helpers.APIURLHelper.GetAllLocations";
    </script>
}