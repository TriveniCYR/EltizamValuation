@model Eltizam.Business.Models.MasterLocationEntity;

@inject IConfiguration Configuration
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Master> MasterLocalizer
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Shared> SharedLocalizer
@{
    string jsVersion = @Configuration.GetSection("StaticJS")["version"];
    string PageHeading = "";
    if (ViewBag.IsView == 0)
    {
        PageHeading = "Edit Location";
    }

    else if (ViewBag.IsView == 2)
    {
        PageHeading = "Add Location";
    }
    else 
    {
        PageHeading = "View Location";
    }
}
   


  <!-- system user master -->
<div class="" id="">
    <main>
        <div class="whiteBoxShadow">
            <div class="heading position-relative">
                <h3 class="dashboardTitle">@PageHeading</h3>
                @*  <h3 class="dashboardTitle">Add Location</h3> *@
               @*  <img src="../assets/x.svg" alt="x" id="closePopup" class="addRoleClose"> *@
            </div>
            
                <div class="bodyContent">
                    @*    <form id="locationForm"> *@
                    <div class="inputSearchs">
                    <form asp-action="LocationManage" method="POST" enctype="multipart/form-data">
                        <input type="hidden" id="hdnCountry" value="@(Model.CountryId == null ? 0 : Model.CountryId)" />
                        <input type="hidden" id="hdnState" value="@(Model.StateId == null ? 0 : Model.StateId)" />
                        <input type="hidden" id="hdnCity" value="@(Model.CityId == null ? 0 : Model.CityId)" />
                        @{
                            var htmlAttributes = new Dictionary<string, object> { { "class", "form-control" } };

                            if (ViewBag.IsView == 1)
                            {
                                htmlAttributes.Add("disabled", "disabled");
                            }
                        }
                        <div class="flex threeBox">
                            <label for="LocationName">
                                Location Name                                 
                                @Html.TextBoxFor(model => model.LocationName, htmlAttributes)
                            </label>
                            <label for="CountryId">
                                Country Name
                               @Html.DropDownListFor(model => model.CountryId, new List<SelectListItem>(), htmlAttributes)
                            </label>
                            <label for="StateId">
                                State Name
                                @Html.DropDownListFor(model => model.StateId, new List<SelectListItem> { }, htmlAttributes)
                            </label>
                        </div>
                        <div class="flex threeBox">

                            <label for="CityId">
                                City / Emirates
                                @Html.DropDownListFor(model => model.CityId, new List<SelectListItem> { }, htmlAttributes)
                            </label>
                                             
                            <label for="resourceType">
                                Sector / Zone
                                @Html.TextBoxFor(model => model.Sector, htmlAttributes)
                            </label>

                            <label for="Geo-coordinates">
                                Latitude
                                @Html.TextBoxFor(model => model.Latitude, htmlAttributes)

                            </label>
                        </div>
                        <div class="flex threeBox">
                            <label for="">
                                Longitude
                                @Html.TextBoxFor(model => model.Longitude, htmlAttributes)
                            </label>
                            <label for="Geo-coordinates">
                                Home Currency
                                @Html.TextBoxFor(model => model.HomeCurrencyId, htmlAttributes)
                            </label>
                            <label for="Geo-coordinates">
                                Foreign Currency
                                @Html.TextBoxFor(model => model.ForeignCurrencyId, htmlAttributes)
                            </label>
                        </div>
                        <div class="flex">
                        <label for="" class="">
                                Status
                                @{
                                    bool isActive = Model.Status == 1; // Convert 1 to true, any other value to false
                                }

                                <input type="checkbox" id="addLocation" class="input-switch" name="Status" value="1" @(isActive ? "checked" : "") required />
                                <label class="label-switch" for="addLocation"></label>
                                <span class="info-text"></span>
                    </div>
                        <div class="buttonArea centerBtn">
                            @if (ViewBag.IsView!=1)
                            {
                                <button type="submit" class="lineBtn" id="resetLocation">Reset</button>
                                <button type="submit" class="bgBlue">Submit</button>
                               
                            }
              
                    </div>
                </form>
                </div>
                </div>
           
           
        </div>
    </main>
</div>
@section MyScripts {
<input type="hidden" id="hdnBaseURL" value="@Configuration.GetSection("Apiconfig")["baseurl"]" />
<script src="../js/locationMaster.js"></script>
<script src="~/AdminLTE/plugins/jquery/jquery.min.js"></script>
<script type="text/javascript" src="~/js/Custom/main.js?v=@jsVersion"></script>
<script type="text/javascript" src="~/js/Custom/Location/LocationManagement.js?v=@jsVersion"></script>
<script type="text/javascript" src="~/js/Custom/JqueryExtension.js?v=@jsVersion"></script>
<script>
    $(document).ready(function () {
        BindCountry();
        BindState();
        BindCity();

    });
    function BindCountry() {
        var CountryList = "@Eltizam.Web.Helpers.APIURLHelper.GetCountryList";
        var Country = $("#CountryId");
        $.ajax({
            type: "GET",
            url: $('#hdnBaseURL').val() + CountryList,
            "datatype": "json",
            success: function (response) {
                ;
                Country.empty().append('<option selected="selected" value="0">Please select</option>');
                for (var i = 0; i < response.length; i++) {
                    Country.append($("<option></option>").val(response[i].id).html(response[i].countryName));
                }
                if ($('#hdnCountry').val() != 0) {
                    Country.val($('#hdnCountry').val());
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
                $("#loader").hide();
            }
        });
    }

    function BindState() {

        var StateList = "@Eltizam.Web.Helpers.APIURLHelper.GetStateList";
        var State = $("#StateId");
        $.ajax({
            type: "GET",
            url: $('#hdnBaseURL').val() + StateList,
            "datatype": "json",
            success: function (response) {
                ;
                State.empty().append('<option selected="selected" value="0">Please select</option>');
                for (var i = 0; i < response.length; i++) {
                    State.append($("<option></option>").val(response[i].id).html(response[i].stateName));
                }
                if ($('#hdnState').val() != 0) {
                    State.val($('#hdnState').val());
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
                $("#loader").hide();
            }
        });
    }

    function BindCity() {

        var CityList = "@Eltizam.Web.Helpers.APIURLHelper.GetCityList";
        var City = $("#CityId");
        $.ajax({
            type: "GET",
            url: $('#hdnBaseURL').val() + CityList,
            "datatype": "json",
            success: function (response) {
                ;
                City.empty().append('<option selected="selected" value="0">Please select</option>');
                for (var i = 0; i < response.length; i++) {
                    City.append($("<option></option>").val(response[i].id).html(response[i].cityName));
                }
                if ($('#hdnCity').val() != 0) {
                    City.val($('#hdnCity').val());
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
                $("#loader").hide();
            }
        });
    }</script>
@* <script src="~/js/custom/location/locationmaster.js"></script> *@
}