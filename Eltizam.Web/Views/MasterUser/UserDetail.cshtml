@model Eltizam.Business.Models.MasterUserModel;

@inject IConfiguration Configuration
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Master> MasterLocalizer
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Shared> SharedLocalizer
@{
    string jsVersion = @Configuration.GetSection("StaticJS")["version"];
}
@{
    var htmlAttributes = true;
}
<!-- system user master -->
<div class="flex">
    <div class="w-100 position-relative">
        <main class="plr-0">
            <div class="profileHead flex justify-between align-item-center cursor-pointer">
                    <h3 class="dashboardTitle">VIEW RESOURCE MASTER</h3>
                    <div class="hamburger">
                        <span onclick="clientMaster()">Resource Master</span>
                        <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                        <span>View Resource Master</span>
                    </div>
                    
                }
            </div>
            <div class="flex">
                <div class="profileTabSection addProperty">
                    <div class="tab">
                        <button class="tablinks" onclick="profileTab(event, 'profile1')" id="defaultOpen">Profile Details</button>
                        <button class="tablinks" onclick="profileTab(event, 'profile2')">Mailing Address</button>
                        <button class="tablinks" onclick="profileTab(event, 'profile3')">Qualification Details</button>
                        <button class="tablinks" onclick="profileTab(event, 'profile4')">Upload Supporting Documents</button>
                    </div>

                    <form asp-action="ResourceManage" method="POST" enctype="multipart/form-data">
                        <input type="hidden" id="hdnDeparment" value="@(Model == null ? 0 : Model.DepartmentId)" />
                        <input type="hidden" id="hdnDesignation" value="@(Model == null ? 0 : Model.DesignationId)" />
                        <input type="hidden" id="hdnRole" value="@(Model == null ? 0 : Model.RoleId)" />
                        <input type="hidden" id="hdnResourceType" value="@(Model == null ? 0 : Model.ResourceId)" />
                        <input type="hidden" id="hdnGender" value="@(Model == null ? 0 : Model.Gender)" />
                        <input type="hidden" id="hdnId" asp-for="Id" value="@(Model == null ? 0 : Model.Id)" />
                        <div id="profile1" class="tabcontent">
                            <h3 class="ptrl-20">Profile Details</h3>
                            <div class="inputSearchs">
                                <div class="tabSection">
                                    <div class="flex fourBox">
                                        <div class="flex justify-center mb-28">
                                            <div class="resourceProfile clientImg text-center">
                                                <img src="../assets/client1.png" alt="img-7" />
                                            </div>
                                        </div>                                        
                                    </div>
                                    <div class="flex">
                                        <label for="FirstName">
                                            First Name
                                            @Html.TextBoxFor(model => model.FirstName, new { @disabled=htmlAttributes, @class = "form-control",  @placeholder = @SharedLocalizer["First Name"], htmlAttributes })
                                        </label>
                                        <label for="MiddleName">
                                            Middle Name
                                            @Html.TextBoxFor(model => model.MiddleName, new { @disabled=htmlAttributes, @class = "form-control",  @placeholder = @SharedLocalizer["Middle Name"], htmlAttributes })
                                        </label>
                                    </div>
                                    <div class="flex">
                                        <label for="LastName">
                                            Last Name
                                            @Html.TextBoxFor(model => model.LastName, new { @disabled=htmlAttributes, @class = "form-control",  @placeholder = @SharedLocalizer["Last Name"] })
                                        </label>                                        
                                        <label for="IsActive" class="w-50">
                                            Status
                                            <input class='input-switch' type="checkbox" asp-for="IsActive"  disabled/>
                                            <label class="label-switch" for="IsActive"></label>
                                            <span class="info-text"></span>
                                        </label>
                                    </div>
                                    <div class="flex">
                                        <label for="DepartmentId">
                                            Department
                                            @Html.DropDownListFor(model => model.DepartmentId, new List<SelectListItem>(),  new { @disabled=htmlAttributes, @class = "form-control",  @placeholder = @SharedLocalizer["Department"] })

                                        </label>
                                        <label for="DesignationId">
                                            Designation
                                            @Html.DropDownListFor(model => model.DesignationId, new List<SelectListItem>(),  new { @disabled=htmlAttributes, @class = "form-control",  @placeholder = @SharedLocalizer["Designation"] })
                                        </label>
                                    </div>
                                    <div class="flex">
                                        <label for="DateOfBirth">
                                            Date of Birth
                                                <input type="date" id="DateOfBirth" name="DateOfBirth" asp-for="DateOfBirth" class="form-control" disabled=htmlAttributes>
                                            
                                        </label>
                                        <label for="Gender">
                                            Gender
                                            @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>(),  new { @disabled=htmlAttributes, @class = "form-control",  @placeholder = @SharedLocalizer["Select Gender"] })
                                        </label>
                                    </div>
                                    <div class="flex">
                                        <label for="ResourceId">
                                            Resource Type
                                            @Html.DropDownListFor(model => model.ResourceId, new List<SelectListItem>(),  new { @disabled=htmlAttributes, @class = "form-control",  @placeholder = @SharedLocalizer[" Select ResourceType"] })
                                        </label>
                                        <label for="RoleId">
                                            Role
                                            @Html.DropDownListFor(model => model.RoleId, new List<SelectListItem>(),  new { @disabled=htmlAttributes, @class = "form-control",  @placeholder = @SharedLocalizer[" Select Role"] })
                                        </label>
                                    </div>
                                    @if (Model.Id <= 0)
                                    {
                                        <div class="flex">
                                            <label for="Password">
                                                <label>Password</label>
                                                @Html.PasswordFor(model => model.Password, new { @autocomplete = "off", @id = "password", @class = "form-control", @placeholder = @SharedLocalizer["Password"], @required = "" })
                                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                            </label>
                                            <label for="ConfirmPassowrd">
                                                Confirm Passowrd
                                                @Html.PasswordFor(model => model.ConfirmPassowrd, new { @autocomplete = "off", @class = "form-control", @placeholder = @SharedLocalizer["ConfirmPassword"] })
                                                @Html.ValidationMessageFor(model => model.ConfirmPassowrd, "", new { @class = "text-danger" })
                                            </label>
                                        </div>
                                    }
                                    <div class="flex">
                                        <label for="CompanyName">
                                            Company / Vendor Name
                                            @Html.TextBoxFor(model => model.CompanyName, new { @disabled=htmlAttributes, @class = "form-control",  @placeholder = @SharedLocalizer["Last Name"] })
                                        </label>
                                        <label for="LicenseNo">
                                            AD Municipality / License No
                                            @Html.TextBoxFor(model => model.LicenseNo, new { @disabled=htmlAttributes,  @class = "form-control",  @placeholder = @SharedLocalizer["License No"] })

                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div id="profile2" class="tabcontent">
                            <h3 class="ptrl-20">Mailing Address</h3>
                            <div class="inputSearchs">
                                <div class="tabSection">
                                    <input type="hidden" id="hdnCountry" value="@(Model.Address == null ? 0 : Model.Address.CountryId)" />
                                    <input type="hidden" id="hdnState" value="@(Model.Address == null ? 0 : Model.Address.StateId)" />
                                    <input type="hidden" id="hdnCity" value="@(Model.Address == null ? 0 : Model.Address.CityId)" />
                                    @Html.HiddenFor(model => model.Address.Id)
                                    <div class="addMoreAddress">
                                        <div class="flex">
                                            <label for="address1">
                                                <span>Address Line 1 </span>
                                                @Html.TextBoxFor(model => model.Address.Address1, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Address Line 1"] })
                                            </label>
                                            <label for="address2">
                                                Address Line 2
                                                @Html.TextBoxFor(model => model.Address.Address2, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Address Line 2"] })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="CountryId">
                                                CountryId
                                                @Html.DropDownListFor(model => model.Address.CountryId, new List<SelectListItem> { }, new { @disabled=htmlAttributes,  @class = "form-control"})
                                            </label>
                                            <label for="StateId">
                                                State
                                                @Html.DropDownListFor(model => model.Address.StateId, new List<SelectListItem> { }, new { @disabled=htmlAttributes,  @class = "form-control"})
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="CityId">
                                                City
                                                @Html.DropDownListFor(model => model.Address.CityId, new List<SelectListItem> { }, new { @disabled=htmlAttributes,  @class = "form-control"})
                                            </label>
                                            <label for="PinNo">
                                                Pin Code
                                                @Html.TextBoxFor(model => model.Address.PinNo, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Pin No"] })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="Email">
                                                Email
                                                @Html.TextBoxFor(model => model.Address.Email, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Email"] })
                                            </label>
                                            <label for="AlternateEmail">
                                                Alternate Email
                                                @Html.TextBoxFor(model => model.Address.AlternateEmail, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Alternate Email"] })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="Phone">
                                                Phone
                                                @Html.TextBoxFor(model => model.Address.Phone, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Phone"] })
                                            </label>
                                            <label for="AlternatePhone">
                                                Alternate Phone
                                                @Html.TextBoxFor(model => model.Address.AlternatePhone, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Alternate Phone"] })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="">
                                                Landline phone
                                                @Html.TextBoxFor(model => model.Address.Landlinephone, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Landline phone"] })
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div id="profile3" class="tabcontent">
                            <h3 class="ptrl-20">Qualification Details</h3>
                            <div class="roundBorderBox">
                                <div class="text-right">
                                    <img src="../assets/minus-icon.svg" alt="minus-icon" class="minus-icon" onClick="removeParentDiv(this)" />
                                </div>
                                <div class="inputSearchs p-0">

                                    <div class="tabSection">
                                        @Html.HiddenFor(model => model.Qualification.Id)
                                        <div class="flex">
                                            <label for="Qualification">
                                                Programme of Study/ Qualification
                                                @Html.TextBoxFor(model => model.Qualification.Qualification, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Qualification"] })
                                            </label>
                                            <label for="Subject">
                                                Subject/Stream
                                                @Html.TextBoxFor(model => model.Qualification.Subject, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Subject"] })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="Institute">
                                                Education Institute
                                                @Html.TextBoxFor(model => model.Qualification.Institute, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Institute"] })
                                            </label>
                                            <label for="year">
                                                Year of Institute
                                                @Html.TextBoxFor(model => model.Qualification.YearOfInstitute, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Year"] })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="grade" class="w-100">
                                                Grade/Percent/class
                                                @Html.TextBoxFor(model => model.Qualification.Grade, new { @disabled=htmlAttributes, @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Grade"] })
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="profile4" class="tabcontent">
                            <h3 class="ptrl-20">Upload Supporting Documents</h3>
                            <div class="inputSearchs uploadDocBox">

                                <div class="tabSection">
                                    <div class="W-100">
                                        <div class="prevUpload roundBorderBox m-0">
                                            <h3>Previously uploaded</h3>
                                            <div class="flex">
                                                @if (Model.Documents != null)
                                                {
                                                    @foreach (var docs in Model.Documents)
                                                    {
                                                        <div class="prevUploadTab">
                                                            <div class="flex align-item-center m-0">
                                                                <img src="../assets/file.svg" alt="file" />
                                                                <span>@docs.DocumentName</span>
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                                else
                                                {
                                                    <label>NA</label>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="text-right buttonArea bodyContent plr-0">
                            <a href='/MasterUser/Users'> <button type="button" class="lineBtn">Update</button></a>
                        </div>
                    </form>
                </div>
            </div>

        </main>

    </div>
</div>


<input type="hidden" id="hdnBaseURL" value="@Configuration.GetSection("Apiconfig")["baseurl"]" />
<script src="~/AdminLTE/plugins/jquery/jquery.min.js"></script>

<script type="text/javascript" src="~/js/Custom/main.js?v=@jsVersion"></script>
<script type="text/javascript" src="~/js/Custom/CustomDateFormat.js?v=@jsVersion"></script>
<script type="text/javascript" src="~/js/Custom/JqueryExtension.js?v=@jsVersion"></script>
<script>
    function profileTab(evt, cityName) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " active";
    }
    document.getElementById("defaultOpen").click();

    function sideNavToggle() {
        var x = document.getElementById("sideNav");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }

    function removeParentDiv(element) {
        const parentDiv = element.closest('.roundBorderBox');
        if (parentDiv) {
            parentDiv.remove();
        }
    }

    function addRoundBorderBox() {
        const roundBorderBox = document.querySelector('.roundBorderBox');
        const clonedDiv = roundBorderBox.cloneNode(true);

        roundBorderBox.parentElement.insertBefore(clonedDiv, roundBorderBox.nextSibling);

        const inputFields = clonedDiv.querySelectorAll('input');
        inputFields.forEach((input) => {
            input.value = '';
        });
    }

    // more address field on click
    function addMoreAddress() {
        const addMoreAddressBox = document.querySelector('.addMoreAddress');
        const clonedDiv = addMoreAddressBox.cloneNode(true);

        const minusDiv = document.createElement('div');
        minusDiv.className = 'text-right';
        minusDiv.innerHTML = `<img src="../assets/minus-icon.svg" alt="minus-icon" class="minus-icon cursor-pointer" onclick="removeParentDivAddress(this)">
                                                `;
        clonedDiv.insertBefore(minusDiv, clonedDiv.firstChild);

        addMoreAddressBox.parentElement.insertBefore(clonedDiv, addMoreAddressBox.nextSibling);

        const inputFields = clonedDiv.querySelectorAll('input');
        inputFields.forEach((input) => {
            input.value = '';
        });
    }

    function removeParentDivAddress(element) {
        const parentDivAdd = element.closest(".addMoreAddress");
        if (parentDivAdd) {
            parentDivAdd.remove()
        }
    }

    $(document).ready(function () {
        BindDepartment();
        BindDesignation();
        BindRole();
        BindResourceType();
        BindCountry();
        BindState();
        BindCity();
        BindGender();
    });

    function BindDepartment() {
        var DepartmentList = "@Eltizam.Web.Helpers.APIURLHelper.GetDepartmentList";
        var Department = $("#DepartmentId");
        var _val = $('#hdnDeparment').val();
        var _rpname = "department";

        BindDropdowns(DepartmentList, Department, _rpname, _val);
        //$.ajax({
        //    type: "GET",
        //    url: $('#hdnBaseURL').val() + DepartmentList,
        //    "datatype": "json",
        //    success: function (response) {
        //         ;
        //        Department.empty().append('<option selected="selected" value="0">Please select</option>');
        //        for (var i = 0; i < response.length; i++) {
        //            Department.append($("<option></option>").val(response[i].id).html(response[i].department));
        //        }
        //        if ($('#hdnDeparment').val() != 0) {
        //            Department.val($('#hdnDeparment').val());
        //        }
        //    },
        //    failure: function (response) {
        //        alert(response.responseText);
        //    },
        //    error: function (response) {
        //        alert(response.responseText);
        //        $("#loader").hide();
        //    }
        //});
    }
    function BindDesignation() {
        var DesignationList = "@Eltizam.Web.Helpers.APIURLHelper.GetDesignationList";
        var Designation = $("#DesignationId");
        var _val = $('#hdnDesignation').val();
        var _rpname = "designation";

        BindDropdowns(DesignationList, Designation, _rpname, _val);

        //$.ajax({
        //    type: "GET",
        //    url: $('#hdnBaseURL').val() + DesignationList,
        //    "datatype": "json",
        //    success: function (response) {
        //         ;
        //        Designation.empty().append('<option selected="selected" value="0">Please select</option>');
        //        for (var i = 0; i < response.length; i++) {
        //            Designation.append($("<option></option>").val(response[i].id).html(response[i].designation));
        //        }
        //        if ($('#hdnDesignation').val() != 0) {
        //            Designation.val($('#hdnDesignation').val());
        //        }
        //    },
        //    failure: function (response) {
        //        alert(response.responseText);
        //    },
        //    error: function (response) {
        //        alert(response.responseText);
        //        $("#loader").hide();
        //    }
        //});
    }

    function BindRole() {

        var RoleList = "@Eltizam.Web.Helpers.APIURLHelper.GetRoleList";
        var Role = $("#RoleId");
        var _val = $('#hdnRole').val();
        var _rpname = "roleName";

        BindDropdowns(RoleList, Role, _rpname, _val);
        //$.ajax({
        //    type: "GET",
        //    url: $('#hdnBaseURL').val() + RoleList,
        //    "datatype": "json",
        //    success: function (response) {
        //         ;
        //        Role.empty().append('<option selected="selected" value="0">Please select</option>');
        //        for (var i = 0; i < response.length; i++) {
        //            Role.append($("<option></option>").val(response[i].roleId).html(response[i].roleName));
        //        }
        //        if ($('#hdnRole').val() != 0) {
        //            Role.val($('#hdnRole').val());
        //        }
        //    },
        //    failure: function (response) {
        //        alert(response.responseText);
        //    },
        //    error: function (response) {
        //        alert(response.responseText);
        //        $("#loader").hide();
        //    }
        //});
    }

    function BindResourceType() {

        var ResourceTypeList = "@Eltizam.Web.Helpers.APIURLHelper.GetResourceTypeList";
        var ResourceType = $("#ResourceId");
        var _val = $('#hdnResourceType').val();
        var _rpname = "resourceType";
        BindDropdowns(ResourceTypeList, ResourceType, _rpname, _val);
        //$.ajax({
        //    type: "GET",
        //    url: $('#hdnBaseURL').val() + ResourceTypeList,
        //    "datatype": "json",
        //    success: function (response) {
        //         ;
        //        ResourceType.empty().append('<option selected="selected" value="0">Please select</option>');
        //        for (var i = 0; i < response.length; i++) {
        //            ResourceType.append($("<option></option>").val(response[i].id).html(response[i].resourceType));
        //        }
        //        if ($('#hdnResourceType').val() != 0) {
        //            ResourceType.val($('#hdnResourceType').val());
        //        }
        //    },
        //    failure: function (response) {
        //        alert(response.responseText);
        //    },
        //    error: function (response) {
        //        alert(response.responseText);
        //        $("#loader").hide();
        //    }
        //});
    }

    function BindCountry() {

        var CountryList = "@Eltizam.Web.Helpers.APIURLHelper.GetCountryList";
        var Country = $("#Address_CountryId");
        var _val = $('#hdnCountry').val();
        var _rpname = "countryName";
        BindDropdowns(CountryList, Country, _rpname, _val);
        //$.ajax({
        //    type: "GET",
        //    url: $('#hdnBaseURL').val() + CountryList,
        //    "datatype": "json",
        //    success: function (response) {
        //         ;
        //        Country.empty().append('<option selected="selected" value="0">Please select</option>');
        //        for (var i = 0; i < response.length; i++) {
        //            Country.append($("<option></option>").val(response[i].id).html(response[i].countryName));
        //        }
        //        if ($('#hdnCountry').val() != 0) {
        //            Country.val($('#hdnCountry').val());
        //        }
        //    },
        //    failure: function (response) {
        //        alert(response.responseText);
        //    },
        //    error: function (response) {
        //        alert(response.responseText);
        //        $("#loader").hide();
        //    }
        //});
    }

    function BindState() {

        var StateList = "@Eltizam.Web.Helpers.APIURLHelper.GetStateList";
        var State = $("#Address_StateId");
        var _val = $('#hdnState').val();
        var _rpname = "stateName";
        BindDropdowns(StateList, State, _rpname, _val);
        //$.ajax({
        //    type: "GET",
        //    url: $('#hdnBaseURL').val() + StateList,
        //    "datatype": "json",
        //    success: function (response) {
        //         ;
        //        State.empty().append('<option selected="selected" value="0">Please select</option>');
        //        for (var i = 0; i < response.length; i++) {
        //            State.append($("<option></option>").val(response[i].id).html(response[i].stateName));
        //        }
        //        if ($('#hdnState').val() != 0) {
        //            State.val($('#hdnState').val());
        //        }
        //    },
        //    failure: function (response) {
        //        alert(response.responseText);
        //    },
        //    error: function (response) {
        //        alert(response.responseText);
        //        $("#loader").hide();
        //    }
        //});
    }

    function BindCity() {

        var CityList = "@Eltizam.Web.Helpers.APIURLHelper.GetCityList";
        var City = $("#Address_CityId");
        var _val = $('#hdnCity').val();
        var _rpname = "cityName";
        BindDropdowns(CityList, City, _rpname, _val);
        //$.ajax({
        //    type: "GET",
        //    url: $('#hdnBaseURL').val() + CityList,
        //    "datatype": "json",
        //    success: function (response) {
        //         ;
        //        City.empty().append('<option selected="selected" value="0">Please select</option>');
        //        for (var i = 0; i < response.length; i++) {
        //            City.append($("<option></option>").val(response[i].id).html(response[i].cityName));
        //        }
        //        if ($('#hdnCity').val() != 0) {
        //            City.val($('#hdnCity').val());
        //        }
        //    },
        //    failure: function (response) {
        //        alert(response.responseText);
        //    },
        //    error: function (response) {
        //        alert(response.responseText);
        //        $("#loader").hide();
        //    }
        //});
    }
    function BindGender() {
        var Gender = $("#Gender");
        Gender.empty().append('<option selected="selected" value="0">Please select</option>');
        Gender.append($("<option></option>").val('M').html('Male'));
        Gender.append($("<option></option>").val('F').html('Female'));
        if ($('#hdnGender').val() != 0) {
            Gender.val($('#hdnGender').val());
        }
    }

</script>
