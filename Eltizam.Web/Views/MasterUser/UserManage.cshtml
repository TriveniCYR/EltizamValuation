@model Eltizam.Business.Models.MasterUserModel;

@inject IConfiguration Configuration
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Master> MasterLocalizer
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Shared> SharedLocalizer
@{
    string jsVersion = @Configuration.GetSection("StaticJS")["version"];
    var _header = " Resource Master";
    var _md = Model.Id > 0 ? "Edit" : "Add";
    ViewData["Title"] = _md + _header;
}
<!-- system user master -->
@* <div class="flex">
    <div class="w-100 position-relative"> *@

<main>
    <div class="whiteBoxShadow">
        <div class="heading position-relative flex justify-between">
            <h3 class="dashboardTitle">@_md @_header</h3>
            <div class="hamburger">
                <a class="greyBtn lineBtn formAbtn" asp-action="Users">@_header</a>
                <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                <span>@_md</span>
            </div>
        </div>
        <div class="bodyContent">
            <div class="profileTabSection">
                <div class="tab">
                    <button class="tablinks" onclick="profileTab(event, 'profile1')" id="defaultOpen">Profile Details</button>
                    <button class="tablinks" onclick="profileTab(event, 'profile2')">Mailing Details</button>
                    <button class="tablinks" onclick="profileTab(event, 'profile3')">Qualification Details</button>
                    <button class="tablinks" onclick="profileTab(event, 'profile4')">Documents Details</button>
                </div>

                <form asp-action="UserManage" method="POST" enctype="multipart/form-data">
                    <input type="hidden" id="hdnDeparment" value="@(Model == null ? 0 : Model.DepartmentId)" />
                    <input type="hidden" id="hdnDesignation" value="@(Model == null ? 0 : Model.DesignationId)" />
                    <input type="hidden" id="hdnRole" value="@(Model == null ? 0 : Model.RoleId)" />
                    <input type="hidden" id="hdnResourceType" value="@(Model == null ? 0 : Model.ResourceId)" />
                    <input type="hidden" id="hdnGender" value="@(Model == null ? 0 : Model.Gender)" />
                    <input type="hidden" id="hdnId" asp-for="Id" value="@(Model == null ? 0 : Model.Id)" />

                    <div id="profile1" title="Profile Details" class="tabcontent">
                        @* <h3 class="ptrl-20">Profile Details</h3> *@
                        <div class="inputSearchs">
                            <div class="tabSection">
                                <div class="flex threeBox">
                                    <div class="flex justify-center mb-28">
                                        <div class="resourceProfile clientImg text-center">
                                            <img src="../assets/client1.png" alt="img-7" />
                                            <div class="position-relative">
                                                <div class="upload-profile-pic-btn">
                                                    <img src="../assets/upload-profile-pic.svg" alt="upload-profile-pic" />
                                                    Change photo
                                                </div>
                                                <input type="file" class="uploadPhoto" />
                                            </div>
                                        </div>
                                    </div>
                                    <label for="IsActive" class="w-50">
                                        Status
                                        <input class='input-switch' type="checkbox" asp-for="IsActive" />
                                        <label class="label-switch" for="IsActive"></label>
                                        <span class="info-text"></span>
                                    </label>
                                </div>
                                <div class="flex">
                                    <label for="FirstName">
                                        <p class="m-0">First Name<span class="text-danger">*</span></p>
                                        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control",  @placeholder = @SharedLocalizer["First Name"] })
                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="MiddleName">
                                        Middle Name
                                        @Html.TextBoxFor(model => model.MiddleName, new { @class = "form-control",  @placeholder = @SharedLocalizer["Middle Name"] })
                                    </label>
                                </div>
                                <div class="flex">
                                    <label for="LastName">
                                        <p class="m-0">Last Name<span class="text-danger">*</span></p>
                                        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control",  @placeholder = @SharedLocalizer["Last Name"] })
                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="DepartmentId">
                                        <p class="m-0">Department<span class="text-danger">*</span></p>
                                        @Html.DropDownListFor(model => model.DepartmentId, new List<SelectListItem>(),  new { @class = "form-control",  @placeholder = @SharedLocalizer["Department"] })
                                        @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                                    </label>
                                </div>
                                <div class="flex">
                                    <label for="DesignationId">
                                        <p class="m-0">Designation<span class="text-danger">*</span></p>
                                        @Html.DropDownListFor(model => model.DesignationId, new List<SelectListItem>(),  new { @class = "form-control",  @placeholder = @SharedLocalizer["Designation"] })
                                        @Html.ValidationMessageFor(model => model.DesignationId, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="DateOfBirth">
                                        <p class="m-0">Date of Birth<span class="text-danger">*</span></p>
                                        <input type="date" id="DateOfBirth" name="DateOfBirth" asp-for="DateOfBirth">
                                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                                    </label>
                                </div>
                                <div class="flex">
                                    <label for="Gender">
                                        <p class="m-0">Gender<span class="text-danger">*</span></p>
                                        @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>(),  new { @class = "form-control",  @placeholder = @SharedLocalizer["Select Gender"] })
                                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="ResourceId">
                                        <p class="m-0">Resource Type<span class="text-danger">*</span></p>
                                        @Html.DropDownListFor(model => model.ResourceId, new List<SelectListItem>(),  new { @class = "form-control",  @placeholder = @SharedLocalizer[" Select ResourceType"] })
                                        @Html.ValidationMessageFor(model => model.ResourceId, "", new { @class = "text-danger" })
                                    </label>
                                </div>
                                @if (Model.Id <= 0)
                                {
                                    <div class="flex">
                                        <label for="Password">
                                            Password
                                            @Html.PasswordFor(model => model.Password, new { @autocomplete = "off", @id = "password", @class = "form-control", @placeholder = @SharedLocalizer["Password"], @required = "" })
                                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                        </label>
                                        <label for="ConfirmPassowrd">
                                            Confirm Passowrd
                                            @Html.PasswordFor(model => model.ConfirmPassowrd, new { @autocomplete = "off", @class = "form-control", @placeholder = @SharedLocalizer["ConfirmPassword"] })
                                            @Html.ValidationMessageFor(model => model.ConfirmPassowrd, "", new { @class = "text-danger" })
                                        </label>
                                    </div>
                                }
                                <div class="flex">
                                    <label for="RoleId">
                                        Role
                                        @Html.DropDownListFor(model => model.RoleId, new List<SelectListItem>(),  new { @class = "form-control",  @placeholder = @SharedLocalizer[" Select Role"] })
                                    </label>
                                    <label for="CompanyName">
                                        <p class="m-0">Company/Vendor Name<span class="text-danger">*</span></p>
                                        @Html.TextBoxFor(model => model.CompanyName, new { @class = "form-control",  @placeholder = @SharedLocalizer["Last Name"] })
                                        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                                    </label>
                                </div>
                                <div class="flex">
                                    <label for="LicenseNo">
                                        AD Municipality / License No
                                        @Html.TextBoxFor(model => model.LicenseNo, new {  @class = "form-control",  @placeholder = @SharedLocalizer["License No"] })

                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="profile2" title="Mailing Address" class="tabcontent">
                        @* <h3 class="ptrl-20">Mailing Address</h3> *@
                        <div class="inputSearchs p-0">
                            <div class="tabSection">
                                <input type="hidden" id="hdnCountry" value="@(Model.Address == null ? 0 : Model.Address.CountryId)" />
                                <input type="hidden" id="hdnState" value="@(Model.Address == null ? 0 : Model.Address.StateId)" />
                                <input type="hidden" id="hdnCity" value="@(Model.Address == null ? 0 : Model.Address.CityId)" />
                                @Html.HiddenFor(model => model.Address.Id)
                                <div class="addMoreAddress roundBorderBox">
                                    <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                        <p>Mailing Address Section</p>
                                        <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                    </div>
                                    <div class="pannel" style="height:auto;overflow:hidden">
                                        <div class="flex">
                                            <label for="address1">
                                                <p class="m-0">Address Line 1<span class="text-danger">*</span></p>
                                                @Html.TextBoxFor(model => model.Address.Address1, new { @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Address Line 1"] })
                                                @Html.ValidationMessageFor(model => model.Address.Address1, "", new { @class = "text-danger" })
                                            </label>
                                            <label for="address2">
                                                Address Line 2
                                                @Html.TextBoxFor(model => model.Address.Address2, new { @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Address Line 2"] })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="CountryId">
                                                <p class="m-0">Country<span class="text-danger">*</span></p>
                                                @Html.DropDownListFor(model => model.Address.CountryId, new List<SelectListItem> { }, new {  @class = "form-control"})
                                                @Html.ValidationMessageFor(model => model.Address.CountryId, "", new { @class = "text-danger" })
                                            </label>
                                            <label for="StateId">
                                                <p class="m-0">State<span class="text-danger">*</span></p>
                                                @Html.DropDownListFor(model => model.Address.StateId, new List<SelectListItem> { }, new {  @class = "form-control"})
                                                @Html.ValidationMessageFor(model => model.Address.StateId, "", new { @class = "text-danger" })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="CityId">
                                                <p class="m-0">City<span class="text-danger">*</span></p>
                                                @Html.DropDownListFor(model => model.Address.CityId, new List<SelectListItem> { }, new {  @class = "form-control"})
                                                @Html.ValidationMessageFor(model => model.Address.CityId, "", new { @class = "text-danger" })
                                            </label>
                                            <label for="PinNo">
                                                ZIP Code
                                                @Html.TextBoxFor(model => model.Address.PinNo, new { @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Pin No"] })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="Email">
                                                <p class="m-0">Email<span class="text-danger">*</span></p>
                                                @Html.TextBoxFor(model => model.Address.Email, new { @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Email"] })
                                                @Html.ValidationMessageFor(model => model.Address.Email, "", new { @class = "text-danger" })
                                            </label>
                                            <label for="AlternateEmail">
                                                Alternate Email
                                                @Html.TextBoxFor(model => model.Address.AlternateEmail, new { @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Alternate Email"] })
                                                @Html.ValidationMessageFor(model => model.Address.AlternateEmail, "", new { @class = "text-danger" })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="Phone">
                                                <p class="m-0">Phone<span class="text-danger">*</span></p>
                                                @Html.TextBoxFor(model => model.Address.Phone, new { @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Phone"] })
                                                @Html.ValidationMessageFor(model => model.Address.Phone, "", new { @class = "text-danger" })
                                            </label>
                                            <label for="AlternatePhone">
                                                Alternate Phone
                                                @Html.TextBoxFor(model => model.Address.AlternatePhone, new { @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Alternate Phone"] })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="">
                                                Landline phone
                                                @Html.TextBoxFor(model => model.Address.Landlinephone, new { @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Landline phone"] })
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="text-right buttonArea bodyContent plr-0">
                                    <button type="button" class="lineBtn" onclick="addMoreAddress()">Add More</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="profile3" title="Qualification Details" class="tabcontent">
                        @* <h3 class="ptrl-20">Qualification Details</h3> *@
                        <div class="roundBorderBox addQualification">
                            <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                <p>Qualification Section</p>
                                <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                            </div>
                            <div class="pannel mt-28" style="height:auto;overflow:hidden">
                                <div class="text-right">
                                    @*<img src="../assets/minus-icon.svg" alt="minus-icon" class="minus-icon" onClick="removeParentDiv(this)" />*@
                                </div>
                                <div class="inputSearchs p-0">

                                    <div class="tabSection">
                                        @Html.HiddenFor(model => model.Qualification.Id)
                                        <div class="flex">
                                            <label for="Qualification">
                                                <p class="m-0">Programme of Study/ Qualification<span class="text-danger">*</span></p>
                                                @Html.TextBoxFor(model => model.Qualification.Qualification, new { @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Qualification"] })
                                                @Html.ValidationMessageFor(model => model.Qualification.Qualification, "", new { @class = "text-danger" })
                                            </label>
                                            <label for="Subject">
                                                <p class="m-0">Subject/Stream<span class="text-danger">*</span></p>
                                                @Html.TextBoxFor(model => model.Qualification.Subject, new { @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Subject"] })
                                                @Html.ValidationMessageFor(model => model.Qualification.Subject, "", new { @class = "text-danger" })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="Institute">
                                                <p class="m-0">Education Institute<span class="text-danger">*</span></p>
                                                @Html.TextBoxFor(model => model.Qualification.Institute, new { @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Institute"] })
                                                @Html.ValidationMessageFor(model => model.Qualification.Institute, "", new { @class = "text-danger" })
                                            </label>
                                            <label for="year">
                                                <p class="m-0">Year of Institute<span class="text-danger">*</span></p>
                                                @Html.TextBoxFor(model => model.Qualification.YearOfInstitute, new { @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Year"] })
                                                @Html.ValidationMessageFor(model => model.Qualification.YearOfInstitute, "", new { @class = "text-danger" })
                                            </label>
                                        </div>
                                        <div class="flex">
                                            <label for="grade" class="w-100">
                                                <p class="m-0">Grade/Percent/class<span class="text-danger">*</span></p>
                                                @Html.TextBoxFor(model => model.Qualification.Grade, new { @autocomplete = "off", @class = "form-control checkbox-checked",  @placeholder = @SharedLocalizer["Grade"] })
                                                @Html.ValidationMessageFor(model => model.Qualification.Grade, "", new { @class = "text-danger" })
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="text-right buttonArea bodyContent plr-0">
                            <button type="button" class="lineBtn" onClick="addRoundBorderBox(this)">Add New</button>
                        </div>
                    </div>

                    <div id="profile4" title="Supporting Documents" class="tabcontent">
                        @* <h3 class="ptrl-20">Upload Supporting Documents</h3> *@
                        <div class="inputSearchs uploadDocBox">

                            <div class="tabSection">
                                <div class="flex mb-28">
                                    <label for="document">
                                        Documents Name
                                        @Html.TextBoxFor(model => model.Document.DocumentName, new {@autocomplete = "off", @class = "form-control",  @placeholder = @SharedLocalizer["Document"] })
                                    </label>
                                    <label for="atach">
                                        Attach Supporting Documents
                                        <div class="attachDoc">
                                            <img src="../assets/cloud-upload.svg" alt="cloud-upload" />
                                            <input type="file" asp-for="Document.Files" multiple />
                                            <p>click to upload.</p>
                                        </div>
                                    </label>
                                </div>
                                <div class="W-100">
                                    <div class="prevUpload roundBorderBox m-0">
                                        <h3>Previously uploaded</h3>
                                        <div class="flex">
                                            @if (Model.Documents != null)
                                            {
                                                @foreach (var docs in Model.Documents)
                                                {
                                                    <div class="prevUploadTab">
                                                        <div class="flex align-item-center m-0">
                                                            <img src="../assets/file.svg" alt="file" />
                                                            <span>@docs.DocumentName</span>
                                                        </div>
                                                        <a href="../assets/download.svg" download target="_blank"><img src="../assets/download.svg" alt="download" /></a>

                                                    </div>
                                                }
                                            }
                                            else
                                            {
                                                <label>NA</label>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @*<div class="text-right buttonArea bodyContent plr-0">
                        <button type="submit" class="darkBlueBtn">Update</button>
                        </div>*@
                    </div>
                    <div class="text-right buttonArea bodyContent plr-0">
                        <a href='/MasterUser/Users'> <button type="button" class="lineBtn greyBtn mr-12">Cancel</button></a>
                        <button type="submit" id="btnSubmitUser" class="blueBtn" onclick="validations()">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</main>
@*  </div>
</div> *@


@section MyScripts {
    <script type="text/javascript" src="~/js/Custom/MasterUser/UserManage.js?v=@jsVersion"></script>

    <script>
        var CityList = "@Eltizam.Web.Helpers.APIURLHelper.GetCityList";
        var StateList = "@Eltizam.Web.Helpers.APIURLHelper.GetStateList";
        var CountryList = "@Eltizam.Web.Helpers.APIURLHelper.GetCountryList";
        var ResourceTypeList = "@Eltizam.Web.Helpers.APIURLHelper.GetResourceTypeList";
        var RoleList = "@Eltizam.Web.Helpers.APIURLHelper.GetRoleList";
        var DesignationList = "@Eltizam.Web.Helpers.APIURLHelper.GetDesignationList";
        var DepartmentList = "@Eltizam.Web.Helpers.APIURLHelper.GetDepartmentList";
        var stateListUrl = "@Eltizam.Web.Helpers.APIURLHelper.GetStateListByCountryId";
        var cityListUrl = "@Eltizam.Web.Helpers.APIURLHelper.GeCityListByStateId";


        $(document).ready(function(){
           
            const selectElement = document.getElementById("RoleId");
            selectElement.addEventListener("change", function () {
                debugger
                if (selectElement.value !== "0") {
                    selectElement.classList.remove("input-validation-error");
                } else {
                    selectElement.classList.remove("input-validation-error");
                }
            });

        })
        function validations(){
            const selectElement = document.getElementById("RoleId");
            selectElement.classList.remove("input-validation-error");
        }
    </script>
}