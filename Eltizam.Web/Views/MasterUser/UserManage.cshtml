@using Eltizam.Utility.Models
@model Eltizam.Business.Models.MasterUserModel;

@inject IConfiguration Configuration
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Master> MasterLocalizer
@inject Microsoft.Extensions.Localization.IStringLocalizer<Eltizam.Resource.Shared> SharedLocalizer
@{
    string jsVersion = @Configuration.GetSection("StaticJS")["version"];
    var _header = " Resource Master";
    var _md = Model.Id > 0 ? "Edit" : "Add";
    ViewData["Title"] = _md + _header;

    var objPermssion = (RolePermissionModel)ViewBag.Access;
    var isAdd = objPermssion.Add ? 1 : 0;
    var isEdit = objPermssion.Edit ? 1 : 0;
}
<!-- system user master -->
@* <div class="flex">
    <div class="w-100 position-relative"> *@

<main>
    <div class="whiteBoxShadow">
        <div class="heading position-relative flex justify-between">
            <h3 class="dashboardTitle">@_md @_header</h3>
            <div class="hamburger">
                <a class="greyBtn lineBtn formAbtn" asp-action="Users">@_header</a>
                <img src="../assets/right-arrow.svg" alt="hamburger-icon" />
                <span>@_md</span>
                <input type="hidden" id="md" value="@_md" />
            </div>
        </div>
        <div class="bodyContent">
            <div class="profileTabSection">
                <div class="tab">
                    <button class="tablinks" onclick="profileTab(event, 'profile1')" id="defaultOpen">Profile Details</button>
                    <button class="tablinks" onclick="profileTab(event, 'profile2')">Mailing Details</button>
                    <button class="tablinks" onclick="profileTab(event, 'profile3')">Qualification Details</button>
                    <button class="tablinks" onclick="profileTab(event, 'profile4')">Documents</button>
                </div>

                <form id="resource" asp-action="UserManage" method="POST" enctype="multipart/form-data">

                    <input type="hidden" id="isAddPerm" value="@isAdd" />
                    <input type="hidden" id="isEditPerm" value="@isEdit" />


                    <input type="hidden" id="hdnDeparment" value="@(Model == null ? 0 : Model.DepartmentId)" />
                    <input type="hidden" id="hdnDesignation" value="@(Model == null ? 0 : Model.DesignationId)" />
                    <input type="hidden" id="hdnRole" value="@(Model == null ? 0 : Model.RoleId)" />
                    <input type="hidden" id="hdnResourceType" value="@(Model == null ? 0 : Model.ResourceId)" />
                    <input type="hidden" id="hdnApproverLevelId" value="@(Model == null ? 0 : Model.ApproverLevelId)" />
                    <input type="hidden" id="hdnGender" value="@(Model == null ? 0 : Model.GenderId)" />
                    <input type="hidden" id="hdnId" asp-for="Id" value="@(Model == null ? 0 : Model.Id)" />

                    <div id="profile1" title="Profile Details" class="tabcontent">
                        @* <h3 class="ptrl-20">Profile Details</h3> *@
                        <div class="inputSearchs">
                            <div class="tabSection">
                                <div class="flex threeBox">
                                    <div class="flex justify-center mb-28">
                                        <div class="resourceProfile clientImg text-center">
                                            @if (Model.ProfileAttachmentId > 0)
                                            {
                                                <img id="previewImage" src="@Model.ProfilePath" alt="upload-profile-pic" />
                                            }
                                            else
                                            {
                                                <img id="previewImage" src="../assets/client1.png" alt="img-7" />
                                            }
                                            <div class="position-relative">
                                                <div class="upload-profile-pic-btn">
                                                    <img src="../assets/upload-profile-pic.svg" alt="upload-profile-pic" />
                                                    <span id="uploadBtnText">
                                                        @if (Model.ProfileAttachmentId > 0)
                                                        {
                                                            <text>Change photo</text>
                                                        }
                                                        else
                                                        {
                                                            <text>Upload photo</text>
                                                        }
                                                    </span>
                                                </div>
                                                <input type="file" accept="image/*" asp-for="File" class="uploadPhoto" id="fileInput" accept=".jpeg,.png,.jpg" />
                                                <span class="text-danger" id="sizeError" style="display: none; position: relative;top: 46px;font-size: 16px;line-height: 20px;">Image size should not exceed 2 MB.</span>
                                            </div>
                                        </div>
                                    </div>
                                    <label for="IsActive" class="w-50">
                                        Status
                                        <input class='input-switch' type="checkbox" asp-for="IsActive" />
                                        <label class="label-switch" for="IsActive"></label>
                                        <span class="info-text"></span>
                                    </label>
                                </div>
                                <div class="flex">
                                    <label for="FirstName">
                                        <p class="m-0">First Name<span class="text-danger">*</span></p>
                                        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @placeholder = @SharedLocalizer["First Name"] })
                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="MiddleName">
                                        Middle Name
                                        @Html.TextBoxFor(model => model.MiddleName, new { @class = "form-control", @placeholder = @SharedLocalizer["Middle Name"] })
                                        @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                    </label>
                                </div>
                                <div class="flex">
                                    <label for="LastName">
                                        <p class="m-0">Last Name<span class="text-danger">*</span></p>
                                        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @placeholder = @SharedLocalizer["Last Name"] })
                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="DepartmentId">
                                        <p class="m-0">Department</p>
                                        @Html.DropDownListFor(model => model.DepartmentId, new List<SelectListItem>(), new { @class = "form-control searchable-dropdown", @placeholder = @SharedLocalizer["Department"] })
                                        @* @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" }) *@
                                    </label>
                                </div>
                                <div class="flex">
                                    <label for="DesignationId">
                                        <p class="m-0">Designation</p>
                                        @Html.DropDownListFor(model => model.DesignationId, new List<SelectListItem>(), new { @class = "form-control searchable-dropdown", @placeholder = @SharedLocalizer["Designation"] })
                                        @* @Html.ValidationMessageFor(model => model.DesignationId, "", new { @class = "text-danger" }) *@
                                    </label>
                                    <label for="DateOfBirth">
                                        <p class="m-0">Date of Birth<span class="text-danger">*</span></p>
                                        <input type="text" id="DateOfBirth" class="formatted-date-input" name="DateOfBirth" asp-for="DateOfBirth" min="@DateTime.Now.ToString("yyyy-MM-dd")">
                                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                                    </label>
                                </div>
                                <div class="flex">
                                    <label for="Gender">
                                        <p class="m-0">Gender<span class="text-danger">*</span></p>
                                        @Html.DropDownListFor(model => model.GenderId, new List<SelectListItem>(), new { @class = "form-control searchable-dropdown", @placeholder = @SharedLocalizer["Select Gender"] })
                                        @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="ResourceId">
                                        <p class="m-0">Resource Type<span class="text-danger">*</span></p>
                                        @Html.DropDownListFor(model => model.ResourceId, new List<SelectListItem>(), new { @class = "form-control searchable-dropdown", @placeholder = @SharedLocalizer[" Select ResourceType"] })
                                        @Html.ValidationMessageFor(model => model.ResourceId, "", new { @class = "text-danger" })
                                    </label>
                                </div>
                                @if (Model.Id <= 0)
                                {
                                    <div class="flex">
                                        <label for="Password">
                                            <p class="m-0">Password<span class="text-danger">*</span></p>
                                            @Html.PasswordFor(model => model.Password, new { @autocomplete = "off", @id = "password", @class = "form-control", @placeholder = @SharedLocalizer["Password"], @required = "" })
                                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                        </label>
                                        <label for="ConfirmPassowrd">
                                            <p class="m-0"> Confirm Passowrd<span class="text-danger">*</span></p>
                                             @Html.PasswordFor(model => model.ConfirmPassowrd, new { @autocomplete = "off", @class = "form-control", @placeholder = @SharedLocalizer["ConfirmPassword"] })
                                            @Html.ValidationMessageFor(model => model.ConfirmPassowrd, "", new { @class = "text-danger" })
                                        </label>
                                    </div>
                                }
                                <div class="flex">
                                    <label for="RoleId">
                                        <p class="m-0">Role<span class="text-danger">*</span></p>
                                        @Html.DropDownListFor(model => model.RoleId, new List<SelectListItem>(), new { @class = "form-control", @placeholder = @SharedLocalizer["Select Role"] })
                                        @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="CompanyName">
                                        <p class="m-0">Company/Vendor Name<span class="text-danger">*</span></p>
                                        @Html.TextBoxFor(model => model.CompanyName, new { @class = "form-control", @placeholder = @SharedLocalizer["Company/Vendor Name"] })
                                        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                                    </label>
                                </div>
                                <div class="flex">
                                    <label for="LicenseNo">
                                        AD Municipality / License No
                                        @Html.TextBoxFor(model => model.LicenseNo, new { @class = "form-control", @placeholder = @SharedLocalizer["License No"] })
                                        @Html.ValidationMessageFor(model => model.LicenseNo, "", new { @class = "text-danger" })
                                    </label>
                                    <label for="Email">
                                        <p class="m-0">Login Email<span class="text-danger">*</span></p>
                                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = @SharedLocalizer["Login Email"] })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </label>
                                </div>
                                <div class="flex">
                                    <label for="ApproverLevelId">
                                        <p class="m-0">Approver Level</p>
                                        @Html.DropDownListFor(model => model.ApproverLevelId, new List<SelectListItem>(), new { @class = "form-control"})                                       
                                    </label>
                                </div>
                                <div class="flex">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="profile2" title="Mailing Address" class="tabcontent">
                        @* <h3 class="ptrl-20">Mailing Address</h3> *@
                        <div class="inputSearchs p-0">
                            <div class="tabSection" id="addresses-container">
                                @for (int i = 0; i < Model.Addresses.Count; i++)
                                {
                                    <div class="addMoreAddress roundBorderBox">
                                        @if (i != 0)
                                        {
                                            <div class="text-right">
                                                <img src="../assets/minus-icon.svg" alt="minus-icon" class="minus-icon cursor-pointer" onclick="removeParentDivAddress(this,@i)">
                                            </div>
                                        }
                                        <input type="hidden" id="@("hdnCountry_"+i)" value="@(Model.Addresses[i] == null ? 0 : Model.Addresses[i].CountryId)" />
                                        <input type="hidden" id="@("hdnState_"+i)" value="@(Model.Addresses[i] == null ? 0 : Model.Addresses[i].StateId)" />
                                        <input type="hidden" id="@("hdnCity_"+i)" value="@(Model.Addresses[i] == null ? 0 : Model.Addresses[i].CityId)" />
                                        <input type="hidden" id="@("hdnPhoneExt_"+i)" value="@(Model.Addresses[i] == null ? 0 : Model.Addresses[i].PhoneExt)" />
                                        <input type="hidden" id="@("hdnAlternatePhoneExt_"+i)" value="@(Model.Addresses[i] == null ? 0 : Model.Addresses[i].AlternatePhoneExt)" />
                                        @Html.HiddenFor(model => model.Addresses[i].Id)
                                        <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                            <p>Mailing Address Section</p>
                                            <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                        </div>
                                        <div class="pannel" style="height:auto;overflow:hidden">
                                            <div class="flex">
                                                <label for="address1">
                                                    <p class="m-0">Address Line 1<span class="text-danger">*</span></p>
                                                    @Html.TextBoxFor(model => model.Addresses[i].Address1, new { @autocomplete = "off", @class = "form-control checkbox-checked", @placeholder = @SharedLocalizer["Address Line 1"] })
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].Address1, "", new { @class = "text-danger" })
                                                </label>
                                                <label for="address2">
                                                    Address Line 2
                                                    @Html.TextBoxFor(model => model.Addresses[i].Address2, new { @autocomplete = "off", @class = "form-control checkbox-checked", @placeholder = @SharedLocalizer["Address Line 2"] })
                                                </label>
                                            </div>
                                            <div class="flex">
                                                <label for="CountryId">
                                                    <p class="m-0">Country<span class="text-danger">*</span></p>
                                                    @Html.DropDownListFor(model => model.Addresses[i].CountryId, new List<SelectListItem> { }, new { @class = "form-control", @onchange = "BindCurrentState(this.options[this.selectedIndex].value,event)"})
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].CountryId, "", new { @class = "text-danger" })
                                                </label>
                                                <label for="StateId">
                                                    <p class="m-0">State<span class="text-danger">*</span></p>
                                                    @Html.DropDownListFor(model => model.Addresses[i].StateId, new List<SelectListItem> { }, new { @class = "form-control", @onchange = "BindCurrentCity(this.options[this.selectedIndex].value,event)"})
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].StateId, "", new { @class = "text-danger" })
                                                </label>
                                            </div>
                                            <div class="flex">
                                                <label for="CityId">
                                                    <p class="m-0">City<span class="text-danger">*</span></p>
                                                    @Html.DropDownListFor(model => model.Addresses[i].CityId, new List<SelectListItem> { }, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].CityId, "", new { @class = "text-danger" })
                                                </label>
                                                <label for="PinNo">
                                                    Zip / PO Box
                                                    @Html.TextBoxFor(model => model.Addresses[i].PinNo, new { @autocomplete = "off", @class = "form-control checkbox-checked valiadteint", @placeholder = @SharedLocalizer["Zip / PO Box"] })
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].PinNo, "", new { @class = "text-danger" })
                                                </label>
                                            </div>
                                            <div class="flex">
                                                <label for="Email">
                                                    <p class="m-0">Email</p>
                                                    @Html.TextBoxFor(model => model.Addresses[i].Email, new { @autocomplete = "off", @class = "form-control checkbox-checked", @placeholder = @SharedLocalizer["Email"] })
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].Email, "", new { @class = "text-danger" })
                                                </label>
                                                <label for="AlternateEmail">
                                                    Alternate Email
                                                    @Html.TextBoxFor(model => model.Addresses[i].AlternateEmail, new { @autocomplete = "off", @class = "form-control checkbox-checked", @placeholder = @SharedLocalizer["Alternate Email"] })
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].AlternateEmail, "", new { @class = "text-danger" })
                                                </label>
                                            </div>
                                            <div class="flex">
                                                <label for="Phone">
                                                    <p class="m-0">Phone<span class="text-danger">*</span></p>
                                                    <div class="flex align-item-center flex-start m-0 phoneWithDrop">
                                                        @Html.DropDownListFor(model => model.Addresses[i].PhoneExt, new List<SelectListItem> { }, new { @class = "", @style="border-right: 0" })

                                                        @Html.TextBoxFor(model => model.Addresses[i].Phone, new {@autocomplete = "off", @class = "form-control checkbox-checked valiadteint", @placeholder = @SharedLocalizer["Phone"] })

                                                    </div>
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].Phone, "", new { @class = "text-danger" })
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].PhoneExt, "", new { @class = "text-danger" })
                                                </label>
                                                <label for="AlternatePhone">
                                                    Alternate Phone
                                                    <div class="flex align-item-center flex-start m-0 phoneWithDrop">
                                                        @Html.DropDownListFor(model => model.Addresses[i].AlternatePhoneExt, new List<SelectListItem> { }, new { @class = "", @style="border-right: 0" })

                                                        @Html.TextBoxFor(model => model.Addresses[i].AlternatePhone, new { @autocomplete = "off", @class = "form-control checkbox-checked valiadteint", @placeholder = @SharedLocalizer["Alternate Phone"] })

                                                    </div>
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].AlternatePhone, "", new { @class = "text-danger" })
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].AlternatePhoneExt, "", new { @class = "text-danger" })
                                                </label>
                                            </div>
                                            <div class="flex">
                                                <label for="">
                                                    Landline phone
                                                    @Html.TextBoxFor(model => model.Addresses[i].Landlinephone, new { @autocomplete = "off", @class = "form-control checkbox-checked valiadteint", @placeholder = @SharedLocalizer["Landline phone"] })
                                                    @Html.ValidationMessageFor(model => model.Addresses[i].Landlinephone, "", new { @class = "text-danger" })
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="text-right buttonArea bodyContent plr-0">
                                <button type="button" class="lineBtn" onclick="addMoreAddress()">Add More</button>
                            </div>
                        </div>
                    </div>

                    <div id="profile3" title="Qualification Details" class="tabcontent">
                        @* <h3 class="ptrl-20">Qualification Details</h3> *@
                        <div class="inputSearchs p-0">
                            <div class="tabSection" id="qualifications-container">
                                @for (int i = 0; i < Model.Qualifications.Count; i++)
                                {
                                    <div class="roundBorderBox addQualification">
                                        @if (i != 0)
                                        {
                                            <div class="text-right">
                                                <img src="../assets/minus-icon.svg" alt="minus-icon" class="minus-icon cursor-pointer" onclick="removeParentDiv(this,@i)">
                                            </div>
                                        }
                                        <div class="flex justify-between accordianDetails position-relative" onclick="accordianToggle(this)">
                                            <p>Qualification Section</p>
                                            <img src="../assets/right-arrow.svg" alt="right-arrow" class="right-arrow-menu">
                                        </div>
                                        <div class="pannel mt-28" style="height:auto;overflow:hidden">
                                            @Html.HiddenFor(model => model.Qualifications[i].Id)
                                            <div class="flex">
                                                <label for="Qualification">
                                                    <p class="m-0">Programme of Study/ Qualification<span class="text-danger">*</span></p>
                                                    @Html.TextBoxFor(model => model.Qualifications[i].Qualification, new { @autocomplete = "off", @class = "form-control checkbox-checked", @placeholder = @SharedLocalizer["Qualification"] })
                                                    @Html.ValidationMessageFor(model => model.Qualifications[i].Qualification, "", new { @class = "text-danger" })
                                                </label>
                                                <label for="Subject">
                                                    <p class="m-0">Subject/Stream<span class="text-danger">*</span></p>
                                                    @Html.TextBoxFor(model => model.Qualifications[i].Subject, new { @autocomplete = "off", @class = "form-control checkbox-checked", @placeholder = @SharedLocalizer["Subject"] })
                                                    @Html.ValidationMessageFor(model => model.Qualifications[i].Subject, "", new { @class = "text-danger" })
                                                </label>
                                            </div>
                                            <div class="flex">
                                                <label for="Institute">
                                                    <p class="m-0">Education Institute<span class="text-danger">*</span></p>
                                                    @Html.TextBoxFor(model => model.Qualifications[i].Institute, new { @autocomplete = "off", @class = "form-control checkbox-checked", @placeholder = @SharedLocalizer["Institute"] })
                                                    @Html.ValidationMessageFor(model => model.Qualifications[i].Institute, "", new { @class = "text-danger" })
                                                </label>
                                                <label for="year">
                                                    <p class="m-0">Year of Institute<span class="text-danger">*</span></p>
                                                    @Html.TextBoxFor(model => model.Qualifications[i].YearOfInstitute, new { @autocomplete = "off", @class = "form-control checkbox-checked valiadteint", @placeholder = @SharedLocalizer["Year"] })
                                                    @Html.ValidationMessageFor(model => model.Qualifications[i].YearOfInstitute, "", new { @class = "text-danger" })
                                                </label>
                                            </div>
                                            <div class="flex">
                                                <label for="grade" class="w-50">
                                                    <p class="m-0">Grade/Percent/class<span class="text-danger">*</span></p>
                                                    @Html.TextBoxFor(model => model.Qualifications[i].Grade, new { @autocomplete = "off", @class = "form-control checkbox-checked", @placeholder = @SharedLocalizer["Grade"] })
                                                    @Html.ValidationMessageFor(model => model.Qualifications[i].Grade, "", new { @class = "text-danger" })
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="text-right buttonArea bodyContent plr-0">
                                <button type="button" class="lineBtn" onClick="addRoundBorderBox(this)">Add New</button>
                            </div>
                        </div>
                    </div>

                    <div id="profile4" title="Supporting Documents" class="tabcontent">
                        <div class="inputSearchs uploadDocBox">
                            <div class="tabSection">
                                <div class="flex">
                                    <label for="" class="w-100">
                                        <span class="m-0" style="font-weight:normal;">File size upto 5MB *</span>
                                        <input type="file" class="fileInput" asp-for="Document.Files" multiple onchange="validateFileSize(this)">
                                        <input type="text" class="fileNames" readonly placeholder="file names">
                                    </label>
                                </div>
                                <div class="W-100">
                                    <div class="prevUpload roundBorderBox m-0">
                                        <h5>Previously uploaded</h5>
                                        <div class="scroll-x">
                                            <table id="UserTableDocument" class="table-striped">
                                                <thead>
                                                    <tr>
                                                        <th>File Name</th>
                                                        <th>DateUpdate </th>
                                                        <th>Uploaded By</th>
                                                        <th>Download</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.Documents != null)
                                                    {
                                                        @foreach (var docs in Model.Documents)
                                                        {
                                                            <tr id="@docs.Id">
                                                                <td>@docs.DocumentName</td>
                                                                <td class="formatted-td-date-input">@docs.CreatedDate.ToString() </td>
                                                                <td>@docs.CreatedName</td>
                                                                <td><a href="@docs.FilePath" download target="_blank"><img src="../assets/download.svg" alt="download" /></a></td>
                                                                <td><a title="Delete" data-toggle="modal" data-target="#DeleteDocumentModel" data-backdrop="static" data-keyboard="false" onclick="ConfirmationDocument(@docs.Id,'isAssesment'); return false;"><img src="../assets/trash.svg" alt="trash" /></a></td>
                                                            </tr>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <tr>
                                                            <td colspan="5">NA</td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @*<div class="text-right buttonArea bodyContent plr-0">
                        <button type="submit" class="darkBlueBtn">Update</button>
                        </div>*@
                    </div>
                    <div class="text-right buttonArea bodyContent plr-0">
                        <a href='/MasterUser/Users'> <button type="button" class="lineBtn greyBtn mr-12">Cancel</button></a>
                        <button type="submit" id="btnSaveEdit" class="blueBtn" onclick="validations()">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</main>

<div id="DeleteDocumentModel" class="modal themeModal " role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@SharedLocalizer["Delete"]</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Label(@SharedLocalizer["DeleteConfirm"])
                        </div>
                    </div>
                </div>
                @Html.Hidden("ID")
                <div class="buttonArea popup-btn">
                    <button class="gray" data-dismiss="modal">@SharedLocalizer["Cancel"]</button>
                    <button type="button" onclick="DeleteDocument()" data-dismiss="modal" class="redBtn">@SharedLocalizer["Delete"]</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section MyScripts {
    <script type="text/javascript" src="~/js/Custom/MasterUser/UserManage.js?v=@jsVersion"></script>

    <script>
        var CountryList = "@Eltizam.Web.Helpers.APIURLHelper.GetCountryList";
        var ResourceTypeList = "@Eltizam.Web.Helpers.APIURLHelper.GetResourceTypeList";
        var RoleList = "@Eltizam.Web.Helpers.APIURLHelper.GetRoleList";
        var DesignationList = "@Eltizam.Web.Helpers.APIURLHelper.GetDesignationList";
        var DepartmentList = "@Eltizam.Web.Helpers.APIURLHelper.GetDepartmentList";
        var StateList = "@Eltizam.Web.Helpers.APIURLHelper.GetStateListByCountryId";
        var CityList = "@Eltizam.Web.Helpers.APIURLHelper.GeCityListByStateId";
        var DeleteUserDocument = "@Eltizam.Web.Helpers.APIURLHelper.DeleteUserDocumentById";
        var CheckEmailExistonRemote = "@Eltizam.Web.Helpers.APIURLHelper.CheckEmailExist"
        var ApproverLevelList = "@Eltizam.Web.Helpers.APIURLHelper.GetApproverLevelList";
        var GetDictionaryWithSubDetails = "@Eltizam.Web.Helpers.APIURLHelper.GetDictionaryWithSubDetails";

        var RecordDelete = "@SharedLocalizer["RecordDelete"]";

        var addressContainer = $("#addresses-container");
        var addressLength = addressContainer.children(".addMoreAddress").length;
        var qualificationContainer = $("#qualifications-container");
        var qualificationLength = qualificationContainer.children(".addQualification").length;

        $(document).ready(function () {
            const selectElement = document.getElementById("RoleId");
            selectElement.addEventListener("change", function () {
                if (selectElement.value !== "0") {
                    selectElement.classList.remove("input-validation-error");
                } else {
                    selectElement.classList.remove("input-validation-error");
                }
            });

        })
        function validations() {
            const selectElement = document.getElementById("RoleId");
            selectElement.classList.remove("input-validation-error");
        }
    </script>
}