¯Z
GD:\EltizamLive\Eltizam.Data.DataAccess\Core\Repositories\IRepository.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Core" &
.& '
Repositories' 3
{		 
public

 

	interface

 
IRepository

  
<

  !
TEntity

! (
>

( )
where

* /
TEntity

0 7
:

8 9
class

: ?
{ 
TEntity 
originalEntity 
{  
get! $
;$ %
set& )
;) *
}+ ,
TEntity 
Get 
( 
int 
id 
) 
; 
Task 
< 
TEntity 
> 
GetAsync 
( 
int "
id# %
)% &
;& '
Task 
< 
TEntity 
> 
GetNoTrackingAsync (
(( )
int) ,
id- /
)/ 0
;0 1
TEntity 
GetNoTracking 
( 
int !
id" $
)$ %
;% &
TEntity 
Get2 
( 
int 
id 
) 
; 
Task 
< 
TEntity 
> 
	GetAsync2 
(  
int  #
id$ &
)& '
;' (
Task 
< 
List 
< 
TEntity 
> 
> 
GetAllAsync '
(' (
)( )
;) *
IEnumerable 
< 
TEntity 
> 
GetAll #
(# $
)$ %
;% &
Task 
< 
TEntity 
> 
GetLastAsync "
(" #
string# )
propertyName* 6
)6 7
;7 8
TEntity$$ 
	GetEntity$$ 
($$ 

Expression$$ $
<$$$ %
Func$$% )
<$$) *
TEntity$$* 1
,$$1 2
bool$$3 7
>$$7 8
>$$8 9
	predicate$$: C
)$$C D
;$$D E

IQueryable&& 
<&& 
TEntity&& 
>&& 
GetAllQuery&& '
(&&' (
)&&( )
;&&) *
IEnumerable(( 
<(( 
TEntity(( 
>(( 
FindAll(( $
((($ %

Expression((% /
<((/ 0
Func((0 4
<((4 5
TEntity((5 <
,((< =
bool((> B
>((B C
>((C D
	predicate((E N
)((N O
;((O P
Task** 
<** 
IEnumerable** 
<** 
TEntity**  
>**  !
>**! "
FindAllAsync**# /
(**/ 0

Expression**0 :
<**: ;
Func**; ?
<**? @
TEntity**@ G
,**G H
bool**I M
>**M N
>**N O
	predicate**P Y
)**Y Z
;**Z [
Task,, 
<,, 
IEnumerable,, 
<,, 
TEntity,,  
>,,  !
>,,! "
Find,,# '
(,,' (

Expression,,( 2
<,,2 3
Func,,3 7
<,,7 8
TEntity,,8 ?
,,,? @
bool,,A E
>,,E F
>,,F G
	predicate,,H Q
),,Q R
;,,R S
Task.. 
<.. 
TEntity.. 
>.. 
SingleOrDefault.. %
(..% &

Expression..& 0
<..0 1
Func..1 5
<..5 6
TEntity..6 =
,..= >
bool..? C
>..C D
>..D E
	predicate..F O
)..O P
;..P Q
void00 
AddAsync00 
(00 
TEntity00 
entity00 $
)00$ %
;00% &
void22 
AddRange22 
(22 
IEnumerable22 !
<22! "
TEntity22" )
>22) *
entities22+ 3
)223 4
;224 5
void44 
AddRangeAsync44 
(44 
IEnumerable44 &
<44& '
TEntity44' .
>44. /
entities440 8
)448 9
;449 :
void66 
Remove66 
(66 
TEntity66 
entity66 "
)66" #
;66# $
void88 
RemoveRange88 
(88 
IEnumerable88 $
<88$ %
TEntity88% ,
>88, -
entities88. 6
)886 7
;887 8
void:: 
UpdateAsync:: 
(:: 
TEntity::  
entity::! '
,::' (
bool::) -
IsCreatedDateUpdate::. A
=::B C
false::D I
)::I J
;::J K
Task<< 
<<< 
TResult<< 
><< "
GetFirstOrDefaultAsync<< ,
<<<, -
TResult<<- 4
><<4 5
(<<5 6

Expression<<6 @
<<<@ A
Func<<A E
<<<E F
TEntity<<F M
,<<M N
TResult<<O V
><<V W
><<W X
selector<<Y a
,<<a b

Expression==. 8
<==8 9
Func==9 =
<=== >
TEntity==> E
,==E F
bool==G K
>==K L
>==L M
	predicate==N W
===X Y
null==Z ^
,==^ _
Func>>. 2
<>>2 3

IQueryable>>3 =
<>>= >
TEntity>>> E
>>>E F
,>>F G
IOrderedQueryable>>H Y
<>>Y Z
TEntity>>Z a
>>>a b
>>>b c
orderBy>>d k
=>>l m
null>>n r
,>>r s
Func??. 2
<??2 3

IQueryable??3 =
<??= >
TEntity??> E
>??E F
,??F G 
IIncludableQueryable??H \
<??\ ]
TEntity??] d
,??d e
object??f l
>??l m
>??m n
include??o v
=??w x
null??y }
,??} ~
bool@@. 2
disableTracking@@3 B
=@@C D
true@@E I
)@@I J
;@@J K
TaskCC 
<CC 
IEnumerableCC 
<CC 
TEntityCC  
>CC  !
>CC! "
GetAllAsyncCC# .
(CC. /

ExpressionCC/ 9
<CC9 :
FuncCC: >
<CC> ?
TEntityCC? F
,CCF G
boolCCH L
>CCL M
>CCM N
	predicateCCO X
,CCX Y
paramsCCZ `

ExpressionCCa k
<CCk l
FuncCCl p
<CCp q
TEntityCCq x
,CCx y
object	CCz Ä
>
CCÄ Å
>
CCÅ Ç
[
CCÇ É
]
CCÉ Ñ
includes
CCÖ ç
)
CCç é
;
CCé è
TaskEE 
<EE 
TEntityEE 
>EE 
GetAsyncEE 
(EE 

ExpressionEE )
<EE) *
FuncEE* .
<EE. /
TEntityEE/ 6
,EE6 7
boolEE8 <
>EE< =
>EE= >
	predicateEE? H
,EEH I
paramsEEJ P

ExpressionEEQ [
<EE[ \
FuncEE\ `
<EE` a
TEntityEEa h
,EEh i
objectEEj p
>EEp q
>EEq r
[EEr s
]EEs t
includesEEu }
)EE} ~
;EE~ 
voidGG 
UpdateGraphGG 
(GG 
TEntityGG  
entityGG! '
,GG' (
EntityStateGG) 4
entityStateGG5 @
)GG@ A
;GGA B
TaskII 
<II 
IEnumerableII 
<II 
TEntityII  
>II  !
>II! "+
GetPagedSortedFilteredListAsyncII# B
(IIB C
intIIC F
startIIG L
,IIL M
intIIN Q
lengthIIR X
,IIX Y
stringIIZ `
orderColumnNameIIa p
,IIp q
ListSortDirection	IIr É
order
IIÑ â
,
IIâ ä
string
IIã ë
searchValue
IIí ù
)
IIù û
;
IIû ü
TaskKK 
<KK 
intKK 
>KK  
GetRecordsTotalAsyncKK &
(KK& '
)KK' (
;KK( )
TaskMM 
<MM 
intMM 
>MM #
GetRecordsFilteredAsyncMM )
(MM) *
stringMM* 0
searchValueMM1 <
)MM< =
;MM= >
stringOO !
GetSearchPropertyNameOO $
(OO$ %
)OO% &
;OO& '
boolQQ 
ExistsQQ 
(QQ 
FuncQQ 
<QQ 
TEntityQQ  
,QQ  !
boolQQ" &
>QQ& '

conditionsQQ( 2
)QQ2 3
;QQ3 4
	DataTableSS 
GetDataBySPSS 
(SS 
stringSS $
SPNameSS% +
,SS+ ,
ListSS- 1
<SS1 2
stringSS2 8
>SS8 9
	ParamNameSS: C
=SSD E
nullSSF J
,SSJ K
ListSSL P
<SSP Q
stringSSQ W
>SSW X

ParamValueSSY c
=SSd e
nullSSf j
)SSj k
;SSk l
TaskUU 
<UU 
	DataTableUU 
>UU 
GetDataBySPAsyncUU (
(UU( )
stringUU) /
SPNameUU0 6
,UU6 7
ListUU8 <
<UU< =
stringUU= C
>UUC D
	ParamNameUUE N
=UUO P
nullUUQ U
,UUU V
ListUUW [
<UU[ \
objectUU\ b
>UUb c

ParamValueUUd n
=UUo p
nullUUq u
)UUu v
;UUv w
TaskWW 
<WW 
DataSetWW 
>WW 
GetDataSetBySPWW $
(WW$ %
stringWW% +
SPNameWW, 2
,WW2 3

DictionaryWW4 >
<WW> ?
stringWW? E
,WWE F
ObjectWWG M
>WWM N

parametersWWO Y
=WWZ [
nullWW\ `
)WW` a
;WWa b
TaskYY 
<YY 
TEntityYY 
>YY 
GetAsyncYY 
(YY 
longYY #
idYY$ &
)YY& '
;YY' (
TEntity[[ 
Get[[ 
([[ 

Expression[[ 
<[[ 
Func[[ #
<[[# $
TEntity[[$ +
,[[+ ,
bool[[- 1
>[[1 2
>[[2 3
	predicate[[4 =
,[[= >
params[[? E

Expression[[F P
<[[P Q
Func[[Q U
<[[U V
TEntity[[V ]
,[[] ^
object[[_ e
>[[e f
>[[f g
[[[g h
][[h i
includes[[j r
)[[r s
;[[s t
void]] 
Add]] 
(]] 
TEntity]] 
entity]] 
)]]  
;]]  !
Task__ 
<__ 
TEntity__ 
>__ 
GetBySP__ 
(__ 
string__ $
SPName__% +
)__+ ,
;__, -
Taskaa 
<aa 
	DataTableaa 
>aa 
GetBySPaa 
(aa  
stringaa  &
CommandTextaa' 2
,aa2 3
CommandTypeaa4 ?
commandTypeaa@ K
,aaK L
SqlParameteraaM Y
[aaY Z
]aaZ [
sqlParametersaa\ i
)aai j
;aaj k
Taskcc 
<cc 
DataSetcc 
>cc 
GetDataSetBySPcc $
(cc$ %
stringcc% +
CommandTextcc, 7
,cc7 8
CommandTypecc9 D
commandTypeccE P
,ccP Q
SqlParameterccR ^
[cc^ _
]cc_ `
sqlParameterscca n
)ccn o
;cco p
}dd 
}ee È◊
FD:\EltizamLive\Eltizam.Data.DataAccess\Core\Repositories\Repository.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Core" &
.& '
Repositories' 3
{ 
public 

class 

Repository 
< 
TEntity #
># $
:% &
IRepository' 2
<2 3
TEntity3 :
>: ;
where< A
TEntityB I
:J K
classL Q
{ 
	protected 
readonly 
EltizamDBContext +
	dbContext, 5
;5 6
	protected 
readonly 
DbSet  
<  !
TEntity! (
>( )
dbSet* /
;/ 0
	protected 
bool 
IsCacheEnable $
;$ %
public 
TEntity 
originalEntity %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
	protected 
readonly 
string !
_EntityName" -
;- .
	protected 
readonly 
DateTime #!
_currentSQLServerDate$ 9
;9 :
public 
static 
string 
	CreatedBy &
=' (
$str) 4
;4 5
public 
static 
string 
CreatedDate (
=) *
$str+ 8
;8 9
public 
static 
string 

ModifiedBy '
=( )
$str* 6
;6 7
public 
static 
string 
ModifiedDate )
=* +
$str, :
;: ;
public 
static 
string 
	IsDeleted &
=' (
$str) 4
;4 5
public 
static 
string 
DeletedDate (
=) *
$str+ 8
;8 9
public 

Repository 
( 
EltizamDBContext *
Context+ 2
)2 3
{   	
	dbContext!! 
=!! 
Context!! 
??!!  "
throw!!# (
new!!) ,!
ArgumentNullException!!- B
(!!B C
nameof!!C I
(!!I J
Context!!J Q
)!!Q R
)!!R S
;!!S T
dbSet"" 
="" 
	dbContext"" 
."" 
Set"" !
<""! "
TEntity""" )
>"") *
(""* +
)""+ ,
;"", -
_EntityName## 
=## 
typeof##  
(##  !
TEntity##! (
)##( )
.##) *
Name##* .
;##. /!
_currentSQLServerDate$$ !
=$$" #
DateTime$$$ ,
.$$, -
Now$$- 0
;$$0 1
}%% 	
public)) 
async)) 
Task)) 
<)) 
List)) 
<)) 
TEntity)) &
>))& '
>))' (
GetAllAsync))) 4
())4 5
)))5 6
{** 	
TEntity++ 
getAllField++ 
;++  
string,, 
key,, 
=,, 
this,, 
.,, 
_EntityName,, )
;,,) *
var-- 
getAll-- 
=-- 
await-- 
	dbContext-- (
.--( )
Set--) ,
<--, -
TEntity--- 4
>--4 5
(--5 6
)--6 7
.--7 8
ToListAsync--8 C
(--C D
)--D E
;--E F
try// 
{00 
if11 
(11 
getAll11 
!=11 
null11 "
)11" #
{22 
if33 
(33 
getAll33 
.33 
Count33 $
>33% &
$num33' (
)33( )
{44 
getAllField55 #
=55$ %
(55& '
(55' (
List55( ,
<55, -
TEntity55- 4
>554 5
)555 6
getAll556 <
)55< =
[55= >
$num55> ?
]55? @
;55@ A
var66 
props66 !
=66" #
getAllField66$ /
.66/ 0
GetType660 7
(667 8
)668 9
.669 :
GetProperties66: G
(66G H
)66H I
;66I J
if77 
(77 
props77 !
.77! "
Any77" %
(77% &
p77& '
=>77( *
p77+ ,
.77, -
Name77- 1
is772 4
$str775 @
)77@ A
)77A B
{88 
return99 "
getAll99# )
.99) *
Where99* /
(99/ 0
o990 1
=>992 4
(995 6
o996 7
.997 8
GetType998 ?
(99? @
)99@ A
.99A B
GetProperty99B M
(99M N
$str99N Y
)99Y Z
.99Z [
GetValue99[ c
(99c d
o99d e
)99e f
==99g i
null99j n
||99o q
(99r s
bool99s w
)99w x
o99x y
.99y z
GetType	99z Å
(
99Å Ç
)
99Ç É
.
99É Ñ
GetProperty
99Ñ è
(
99è ê
$str
99ê õ
)
99õ ú
.
99ú ù
GetValue
99ù •
(
99• ¶
o
99¶ ß
)
99ß ®
is
99© ´
false
99¨ ±
)
99± ≤
)
99≤ ≥
.
99≥ ¥
ToList
99¥ ∫
(
99∫ ª
)
99ª º
;
99º Ω
}:: 
};; 
}<< 
}== 
catch>> 
(>> 
	Exception>> 
exx>>  
)>>  !
{?? 
}@@ 
returnAA 
getAllAA 
;AA 
}BB 	
publicDD 
IEnumerableDD 
<DD 
TEntityDD "
>DD" #
GetAllDD$ *
(DD* +
)DD+ ,
{EE 	
TEntityFF 
getAllFieldFF 
;FF  
stringGG 
keyGG 
=GG 
thisGG 
.GG 
_EntityNameGG )
;GG) *
varHH 
getAllHH 
=HH 
	dbContextHH "
.HH" #
SetHH# &
<HH& '
TEntityHH' .
>HH. /
(HH/ 0
)HH0 1
.HH1 2
AsEnumerableHH2 >
(HH> ?
)HH? @
;HH@ A
tryJJ 
{KK 
ifLL 
(LL 
getAllLL 
!=LL 
nullLL "
)LL" #
{MM 
getAllFieldNN 
=NN  !
(NN" #
(NN# $
ListNN$ (
<NN( )
TEntityNN) 0
>NN0 1
)NN1 2
getAllNN2 8
)NN8 9
[NN9 :
$numNN: ;
]NN; <
;NN< =
varOO 
propsOO 
=OO 
getAllFieldOO  +
.OO+ ,
GetTypeOO, 3
(OO3 4
)OO4 5
.OO5 6
GetPropertiesOO6 C
(OOC D
)OOD E
;OOE F
ifPP 
(PP 
propsPP 
.PP 
AnyPP !
(PP! "
pPP" #
=>PP$ &
pPP' (
.PP( )
NamePP) -
isPP. 0
$strPP1 <
)PP< =
)PP= >
{QQ 
returnRR 
getAllRR %
.RR% &
WhereRR& +
(RR+ ,
oRR, -
=>RR. 0
(RR1 2
boolRR2 6
)RR6 7
oRR7 8
.RR8 9
GetTypeRR9 @
(RR@ A
)RRA B
.RRB C
GetPropertyRRC N
(RRN O
$strRRO Z
)RRZ [
.RR[ \
GetValueRR\ d
(RRd e
oRRe f
)RRf g
isRRh j
falseRRk p
)RRp q
.RRq r
AsEnumerableRRr ~
(RR~ 
)	RR Ä
;
RRÄ Å
}SS 
}TT 
}UU 
catchVV 
(VV 
	ExceptionVV 
exVV 
)VV  
{WW 
}WW 
returnXX 
getAllXX 
;XX 
}YY 	
public[[ 

IQueryable[[ 
<[[ 
TEntity[[ !
>[[! "
GetAllQuery[[# .
([[. /
)[[/ 0
{\\ 	
string]] 
key]] 
=]] 
this]] 
.]] 
_EntityName]] )
;]]) *
return^^ 
	dbContext^^ 
.^^ 
Set^^  
<^^  !
TEntity^^! (
>^^( )
(^^) *
)^^* +
.^^+ ,
AsQueryable^^, 7
(^^7 8
)^^8 9
;^^9 :
}__ 	
publicaa 
TEntityaa 
Getaa 
(aa 
intaa 
idaa !
)aa! "
{bb 	
stringcc 
keycc 
=cc 
thiscc 
.cc 
_EntityNamecc )
+cc* +
idcc, .
.cc. /
ToStringcc/ 7
(cc7 8
)cc8 9
;cc9 :
TEntitydd 
odd 
=dd 
	dbContextdd !
.dd! "
Setdd" %
<dd% &
TEntitydd& -
>dd- .
(dd. /
)dd/ 0
.dd0 1
Finddd1 5
(dd5 6
iddd6 8
)dd8 9
;dd9 :
ifee 
(ee 
oee 
==ee 
nullee 
)ee 
{ff 
throwgg 
newgg 
	Exceptiongg #
(gg# $
AppConstantsgg$ 0
.gg0 1
NoRecordFoundgg1 >
,gg> ?
newgg@ C 
KeyNotFoundExceptionggD X
(ggX Y
AppConstantsggY e
.gge f
NoRecordFoundggf s
)ggs t
)ggt u
;ggu v
}hh 
tryii 
{jj 
varkk 
propskk 
=kk 
okk 
.kk 
GetTypekk %
(kk% &
)kk& '
.kk' (
GetPropertieskk( 5
(kk5 6
)kk6 7
;kk7 8
ifll 
(ll 
propsll 
.ll 
Anyll 
(ll 
pll 
=>ll  "
pll# $
.ll$ %
Namell% )
isll* ,
$strll- 8
)ll8 9
)ll9 :
{mm 
varnn 
	isDeletednn !
=nn" #
onn$ %
.nn% &
GetTypenn& -
(nn- .
)nn. /
.nn/ 0
GetPropertynn0 ;
(nn; <
$strnn< G
)nnG H
.nnH I
GetValuennI Q
(nnQ R
onnR S
)nnS T
;nnT U
ifoo 
(oo 
	isDeletedoo !
!=oo" $
nulloo% )
&&oo* ,
(oo- .
booloo. 2
)oo2 3
	isDeletedoo3 <
)oo< =
{pp 
oqq 
=qq 
nullqq  
;qq  !
throwrr 
newrr !
	Exceptionrr" +
(rr+ ,
AppConstantsrr, 8
.rr8 9
NoRecordFoundrr9 F
,rrF G
newrrH K 
KeyNotFoundExceptionrrL `
(rr` a
AppConstantsrra m
.rrm n
NoRecordFoundrrn {
)rr{ |
)rr| }
;rr} ~
}ss 
}tt 
}uu 
catchvv 
(vv 
	Exceptionvv 
exxvv  
)vv  !
{ww 
}xx 
returnyy 
oyy 
;yy 
}zz 	
public|| 
async|| 
Task|| 
<|| 
TEntity|| !
>||! "
GetAsync||# +
(||+ ,
int||, /
id||0 2
)||2 3
{}} 	
string~~ 
key~~ 
=~~ 
this~~ 
.~~ 
_EntityName~~ )
+~~* +
id~~, .
.~~. /
ToString~~/ 7
(~~7 8
)~~8 9
;~~9 :
TEntity 
o 
= 
await 
	dbContext '
.' (
Set( +
<+ ,
TEntity, 3
>3 4
(4 5
)5 6
.6 7
	FindAsync7 @
(@ A
idA C
)C D
;D E
if
ÅÅ 
(
ÅÅ 
o
ÅÅ 
==
ÅÅ 
null
ÅÅ 
)
ÅÅ 
{
ÇÇ 
throw
ÉÉ 
new
ÉÉ 
	Exception
ÉÉ #
(
ÉÉ# $
AppConstants
ÉÉ$ 0
.
ÉÉ0 1
NoRecordFound
ÉÉ1 >
,
ÉÉ> ?
new
ÉÉ@ C"
KeyNotFoundException
ÉÉD X
(
ÉÉX Y
AppConstants
ÉÉY e
.
ÉÉe f
NoRecordFound
ÉÉf s
)
ÉÉs t
)
ÉÉt u
;
ÉÉu v
}
ÑÑ 
try
ÖÖ 
{
ÜÜ 
var
áá 
props
áá 
=
áá 
o
áá 
.
áá 
GetType
áá %
(
áá% &
)
áá& '
.
áá' (
GetProperties
áá( 5
(
áá5 6
)
áá6 7
;
áá7 8
if
àà 
(
àà 
props
àà 
.
àà 
Any
àà 
(
àà 
p
àà 
=>
àà  "
p
àà# $
.
àà$ %
Name
àà% )
is
àà* ,
$str
àà- 8
)
àà8 9
)
àà9 :
{
ââ 
var
ãã 
	isDeleted
ãã !
=
ãã" #
o
ãã$ %
.
ãã% &
GetType
ãã& -
(
ãã- .
)
ãã. /
.
ãã/ 0
GetProperty
ãã0 ;
(
ãã; <
$str
ãã< G
)
ããG H
.
ããH I
GetValue
ããI Q
(
ããQ R
o
ããR S
)
ããS T
;
ããT U
if
åå 
(
åå 
	isDeleted
åå !
!=
åå" $
null
åå% )
&&
åå* ,
(
åå- .
bool
åå. 2
)
åå2 3
	isDeleted
åå3 <
)
åå< =
{
çç 
o
éé 
=
éé 
null
éé  
;
éé  !
throw
èè 
new
èè !
	Exception
èè" +
(
èè+ ,
AppConstants
èè, 8
.
èè8 9
NoRecordFound
èè9 F
,
èèF G
new
èèH K"
KeyNotFoundException
èèL `
(
èè` a
AppConstants
èèa m
.
èèm n
NoRecordFound
èèn {
)
èè{ |
)
èè| }
;
èè} ~
}
êê 
}
ëë 
}
íí 
catch
ìì 
(
ìì 
	Exception
ìì 
exx
ìì  
)
ìì  !
{
îî 
}
ïï 
return
ññ 
o
ññ 
;
ññ 
}
óó 	
public
òò 
TEntity
òò 
Get2
òò 
(
òò 
int
òò 
id
òò  "
)
òò" #
{
ôô 	
string
öö 
key
öö 
=
öö 
this
öö 
.
öö 
_EntityName
öö )
+
öö* +
id
öö, .
.
öö. /
ToString
öö/ 7
(
öö7 8
)
öö8 9
;
öö9 :
TEntity
õõ 
o
õõ 
=
õõ 
	dbContext
õõ !
.
õõ! "
Set
õõ" %
<
õõ% &
TEntity
õõ& -
>
õõ- .
(
õõ. /
)
õõ/ 0
.
õõ0 1
Find
õõ1 5
(
õõ5 6
id
õõ6 8
)
õõ8 9
;
õõ9 :
if
úú 
(
úú 
o
úú 
==
úú 
null
úú 
)
úú 
{
ùù 
throw
ûû 
new
ûû 
	Exception
ûû #
(
ûû# $
AppConstants
ûû$ 0
.
ûû0 1
NoRecordFound
ûû1 >
,
ûû> ?
new
ûû@ C"
KeyNotFoundException
ûûD X
(
ûûX Y
AppConstants
ûûY e
.
ûûe f
NoRecordFound
ûûf s
)
ûûs t
)
ûût u
;
ûûu v
}
üü 
return
†† 
o
†† 
;
†† 
}
°° 	
public
££ 
async
££ 
Task
££ 
<
££ 
TEntity
££ !
>
££! "
	GetAsync2
££# ,
(
££, -
int
££- 0
id
££1 3
)
££3 4
{
§§ 	
string
•• 
key
•• 
=
•• 
this
•• 
.
•• 
_EntityName
•• )
+
••* +
id
••, .
.
••. /
ToString
••/ 7
(
••7 8
)
••8 9
;
••9 :
TEntity
¶¶ 
o
¶¶ 
=
¶¶ 
await
¶¶ 
	dbContext
¶¶ '
.
¶¶' (
Set
¶¶( +
<
¶¶+ ,
TEntity
¶¶, 3
>
¶¶3 4
(
¶¶4 5
)
¶¶5 6
.
¶¶6 7
	FindAsync
¶¶7 @
(
¶¶@ A
id
¶¶A C
)
¶¶C D
;
¶¶D E
if
®® 
(
®® 
o
®® 
==
®® 
null
®® 
)
®® 
{
©© 
throw
™™ 
new
™™ 
	Exception
™™ #
(
™™# $
AppConstants
™™$ 0
.
™™0 1
NoRecordFound
™™1 >
,
™™> ?
new
™™@ C"
KeyNotFoundException
™™D X
(
™™X Y
AppConstants
™™Y e
.
™™e f
NoRecordFound
™™f s
)
™™s t
)
™™t u
;
™™u v
}
´´ 
else
¨¨ 
return
≠≠ 
o
≠≠ 
;
≠≠ 
}
ÆÆ 	
public
∞∞ 
async
∞∞ 
Task
∞∞ 
<
∞∞ 
TEntity
∞∞ !
>
∞∞! " 
GetNoTrackingAsync
∞∞# 5
(
∞∞5 6
int
∞∞6 9
id
∞∞: <
)
∞∞< =
{
±± 	
string
≤≤ 
key
≤≤ 
=
≤≤ 
this
≤≤ 
.
≤≤ 
_EntityName
≤≤ )
+
≤≤* +
id
≤≤, .
.
≤≤. /
ToString
≤≤/ 7
(
≤≤7 8
)
≤≤8 9
;
≤≤9 :
TEntity
≥≥ 
o
≥≥ 
=
≥≥ 
await
≥≥ 
	dbContext
≥≥ '
.
≥≥' (
Set
≥≥( +
<
≥≥+ ,
TEntity
≥≥, 3
>
≥≥3 4
(
≥≥4 5
)
≥≥5 6
.
≥≥6 7
	FindAsync
≥≥7 @
(
≥≥@ A
id
≥≥A C
)
≥≥C D
;
≥≥D E
if
µµ 
(
µµ 
o
µµ 
==
µµ 
null
µµ 
)
µµ 
{
∂∂ 
throw
∑∑ 
new
∑∑ 
	Exception
∑∑ #
(
∑∑# $
AppConstants
∑∑$ 0
.
∑∑0 1
NoRecordFound
∑∑1 >
,
∑∑> ?
new
∑∑@ C"
KeyNotFoundException
∑∑D X
(
∑∑X Y
AppConstants
∑∑Y e
.
∑∑e f
NoRecordFound
∑∑f s
)
∑∑s t
)
∑∑t u
;
∑∑u v
}
∏∏ 
try
ππ 
{
∫∫ 
var
ªª 
props
ªª 
=
ªª 
o
ªª 
.
ªª 
GetType
ªª %
(
ªª% &
)
ªª& '
.
ªª' (
GetProperties
ªª( 5
(
ªª5 6
)
ªª6 7
;
ªª7 8
if
ºº 
(
ºº 
props
ºº 
.
ºº 
Any
ºº 
(
ºº 
p
ºº 
=>
ºº  "
p
ºº# $
.
ºº$ %
Name
ºº% )
is
ºº* ,
$str
ºº- 8
)
ºº8 9
)
ºº9 :
{
ΩΩ 
var
ææ 
	isDeleted
ææ !
=
ææ" #
o
ææ$ %
.
ææ% &
GetType
ææ& -
(
ææ- .
)
ææ. /
.
ææ/ 0
GetProperty
ææ0 ;
(
ææ; <
$str
ææ< G
)
ææG H
.
ææH I
GetValue
ææI Q
(
ææQ R
o
ææR S
)
ææS T
;
ææT U
if
øø 
(
øø 
	isDeleted
øø !
!=
øø" $
null
øø% )
&&
øø* ,
(
øø- .
bool
øø. 2
)
øø2 3
	isDeleted
øø3 <
)
øø< =
{
¿¿ 
o
¡¡ 
=
¡¡ 
null
¡¡  
;
¡¡  !
throw
¬¬ 
new
¬¬ !
	Exception
¬¬" +
(
¬¬+ ,
AppConstants
¬¬, 8
.
¬¬8 9
NoRecordFound
¬¬9 F
,
¬¬F G
new
¬¬H K"
KeyNotFoundException
¬¬L `
(
¬¬` a
AppConstants
¬¬a m
.
¬¬m n
NoRecordFound
¬¬n {
)
¬¬{ |
)
¬¬| }
;
¬¬} ~
}
√√ 
}
ƒƒ 
}
≈≈ 
catch
∆∆ 
(
∆∆ 
	Exception
∆∆ 
exx
∆∆  
)
∆∆  !
{
«« 
}
»» 
	dbContext
   
.
   
Entry
   
(
   
o
   
)
   
.
   
State
   $
=
  % &
EntityState
  ' 2
.
  2 3
Detached
  3 ;
;
  ; <
return
ÀÀ 
o
ÀÀ 
;
ÀÀ 
}
ÃÃ 	
public
ŒŒ 
TEntity
ŒŒ 
GetNoTracking
ŒŒ $
(
ŒŒ$ %
int
ŒŒ% (
id
ŒŒ) +
)
ŒŒ+ ,
{
œœ 	
string
–– 
key
–– 
=
–– 
this
–– 
.
–– 
_EntityName
–– )
+
––* +
id
––, .
.
––. /
ToString
––/ 7
(
––7 8
)
––8 9
;
––9 :
TEntity
—— 
o
—— 
=
—— 
	dbContext
—— !
.
——! "
Set
——" %
<
——% &
TEntity
——& -
>
——- .
(
——. /
)
——/ 0
.
——0 1
Find
——1 5
(
——5 6
id
——6 8
)
——8 9
;
——9 :
if
”” 
(
”” 
o
”” 
==
”” 
null
”” 
)
”” 
{
‘‘ 
throw
’’ 
new
’’ 
	Exception
’’ #
(
’’# $
AppConstants
’’$ 0
.
’’0 1
NoRecordFound
’’1 >
,
’’> ?
new
’’@ C"
KeyNotFoundException
’’D X
(
’’X Y
AppConstants
’’Y e
.
’’e f
NoRecordFound
’’f s
)
’’s t
)
’’t u
;
’’u v
}
÷÷ 
try
◊◊ 
{
ÿÿ 
var
ŸŸ 
props
ŸŸ 
=
ŸŸ 
o
ŸŸ 
.
ŸŸ 
GetType
ŸŸ %
(
ŸŸ% &
)
ŸŸ& '
.
ŸŸ' (
GetProperties
ŸŸ( 5
(
ŸŸ5 6
)
ŸŸ6 7
;
ŸŸ7 8
if
⁄⁄ 
(
⁄⁄ 
props
⁄⁄ 
.
⁄⁄ 
Any
⁄⁄ 
(
⁄⁄ 
p
⁄⁄ 
=>
⁄⁄  "
p
⁄⁄# $
.
⁄⁄$ %
Name
⁄⁄% )
is
⁄⁄* ,
$str
⁄⁄- 8
)
⁄⁄8 9
)
⁄⁄9 :
{
€€ 
var
‹‹ 
	isDeleted
‹‹ !
=
‹‹" #
o
‹‹$ %
.
‹‹% &
GetType
‹‹& -
(
‹‹- .
)
‹‹. /
.
‹‹/ 0
GetProperty
‹‹0 ;
(
‹‹; <
$str
‹‹< G
)
‹‹G H
.
‹‹H I
GetValue
‹‹I Q
(
‹‹Q R
o
‹‹R S
)
‹‹S T
;
‹‹T U
if
›› 
(
›› 
	isDeleted
›› !
!=
››" $
null
››% )
&&
››* ,
(
››- .
bool
››. 2
)
››2 3
	isDeleted
››3 <
)
››< =
{
ﬁﬁ 
o
ﬂﬂ 
=
ﬂﬂ 
null
ﬂﬂ  
;
ﬂﬂ  !
throw
‡‡ 
new
‡‡ !
	Exception
‡‡" +
(
‡‡+ ,
AppConstants
‡‡, 8
.
‡‡8 9
NoRecordFound
‡‡9 F
,
‡‡F G
new
‡‡H K"
KeyNotFoundException
‡‡L `
(
‡‡` a
AppConstants
‡‡a m
.
‡‡m n
NoRecordFound
‡‡n {
)
‡‡{ |
)
‡‡| }
;
‡‡} ~
}
·· 
}
‚‚ 
}
„„ 
catch
‰‰ 
(
‰‰ 
	Exception
‰‰ 
exx
‰‰  
)
‰‰  !
{
ÂÂ 
}
ÊÊ 
	dbContext
ËË 
.
ËË 
Entry
ËË 
(
ËË 
o
ËË 
)
ËË 
.
ËË 
State
ËË $
=
ËË% &
EntityState
ËË' 2
.
ËË2 3
Detached
ËË3 ;
;
ËË; <
return
ÈÈ 
o
ÈÈ 
;
ÈÈ 
}
ÍÍ 	
public
ÏÏ 
TEntity
ÏÏ 
GetNoTracking
ÏÏ $
(
ÏÏ$ %
long
ÏÏ% )
id
ÏÏ* ,
)
ÏÏ, -
{
ÌÌ 	
string
ÓÓ 
key
ÓÓ 
=
ÓÓ 
this
ÓÓ 
.
ÓÓ 
_EntityName
ÓÓ )
+
ÓÓ* +
id
ÓÓ, .
.
ÓÓ. /
ToString
ÓÓ/ 7
(
ÓÓ7 8
)
ÓÓ8 9
;
ÓÓ9 :
TEntity
ÔÔ 
o
ÔÔ 
=
ÔÔ 
	dbContext
ÔÔ !
.
ÔÔ! "
Set
ÔÔ" %
<
ÔÔ% &
TEntity
ÔÔ& -
>
ÔÔ- .
(
ÔÔ. /
)
ÔÔ/ 0
.
ÔÔ0 1
Find
ÔÔ1 5
(
ÔÔ5 6
id
ÔÔ6 8
)
ÔÔ8 9
;
ÔÔ9 :
if
 
(
 
o
 
==
 
null
 
)
 
{
ÒÒ 
throw
ÚÚ 
new
ÚÚ 
	Exception
ÚÚ #
(
ÚÚ# $
AppConstants
ÚÚ$ 0
.
ÚÚ0 1
NoRecordFound
ÚÚ1 >
,
ÚÚ> ?
new
ÚÚ@ C"
KeyNotFoundException
ÚÚD X
(
ÚÚX Y
AppConstants
ÚÚY e
.
ÚÚe f
NoRecordFound
ÚÚf s
)
ÚÚs t
)
ÚÚt u
;
ÚÚu v
}
ÛÛ 
try
ÙÙ 
{
ıı 
var
ˆˆ 
props
ˆˆ 
=
ˆˆ 
o
ˆˆ 
.
ˆˆ 
GetType
ˆˆ %
(
ˆˆ% &
)
ˆˆ& '
.
ˆˆ' (
GetProperties
ˆˆ( 5
(
ˆˆ5 6
)
ˆˆ6 7
;
ˆˆ7 8
if
˜˜ 
(
˜˜ 
props
˜˜ 
.
˜˜ 
Any
˜˜ 
(
˜˜ 
p
˜˜ 
=>
˜˜  "
p
˜˜# $
.
˜˜$ %
Name
˜˜% )
is
˜˜* ,
$str
˜˜- 8
)
˜˜8 9
)
˜˜9 :
{
¯¯ 
var
˘˘ 
	isDeleted
˘˘ !
=
˘˘" #
o
˘˘$ %
.
˘˘% &
GetType
˘˘& -
(
˘˘- .
)
˘˘. /
.
˘˘/ 0
GetProperty
˘˘0 ;
(
˘˘; <
$str
˘˘< G
)
˘˘G H
.
˘˘H I
GetValue
˘˘I Q
(
˘˘Q R
o
˘˘R S
)
˘˘S T
;
˘˘T U
if
˙˙ 
(
˙˙ 
	isDeleted
˙˙ !
!=
˙˙" $
null
˙˙% )
&&
˙˙* ,
(
˙˙- .
bool
˙˙. 2
)
˙˙2 3
	isDeleted
˙˙3 <
)
˙˙< =
{
˚˚ 
o
¸¸ 
=
¸¸ 
null
¸¸  
;
¸¸  !
throw
˝˝ 
new
˝˝ !
	Exception
˝˝" +
(
˝˝+ ,
AppConstants
˝˝, 8
.
˝˝8 9
NoRecordFound
˝˝9 F
,
˝˝F G
new
˝˝H K"
KeyNotFoundException
˝˝L `
(
˝˝` a
AppConstants
˝˝a m
.
˝˝m n
NoRecordFound
˝˝n {
)
˝˝{ |
)
˝˝| }
;
˝˝} ~
}
˛˛ 
}
ˇˇ 
}
ÄÄ 
catch
ÅÅ 
(
ÅÅ 
	Exception
ÅÅ 
exx
ÅÅ  
)
ÅÅ  !
{
ÇÇ 
}
ÉÉ 
	dbContext
ÑÑ 
.
ÑÑ 
Entry
ÑÑ 
(
ÑÑ 
o
ÑÑ 
)
ÑÑ 
.
ÑÑ 
State
ÑÑ $
=
ÑÑ% &
EntityState
ÑÑ' 2
.
ÑÑ2 3
Detached
ÑÑ3 ;
;
ÑÑ; <
return
ÖÖ 
o
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
public
îî 
async
îî 
Task
îî 
<
îî 
IEnumerable
îî %
<
îî% &
TEntity
îî& -
>
îî- .
>
îî. /
GetAllAsync
îî0 ;
(
îî; <

Expression
îî< F
<
îîF G
Func
îîG K
<
îîK L
TEntity
îîL S
,
îîS T
bool
îîU Y
>
îîY Z
>
îîZ [
	predicate
îî\ e
,
îîe f
params
îîg m

Expression
îîn x
<
îîx y
Func
îîy }
<
îî} ~
TEntityîî~ Ö
,îîÖ Ü
objectîîá ç
>îîç é
>îîé è
[îîè ê
]îîê ë
includesîîí ö
)îîö õ
{
ïï 	
string
ññ 
key
ññ 
=
ññ 
this
ññ 
.
ññ 
_EntityName
ññ )
+
ññ* +
GetPropertyName
ññ, ;
<
ññ; <
TEntity
ññ< C
>
ññC D
(
ññD E
includes
ññE M
)
ññM N
;
ññN O

IQueryable
òò 
<
òò 
TEntity
òò 
>
òò 
set
òò  #
=
òò$ %
	dbContext
òò& /
.
òò/ 0
Set
òò0 3
<
òò3 4
TEntity
òò4 ;
>
òò; <
(
òò< =
)
òò= >
.
òò> ?
Where
òò? D
(
òòD E
	predicate
òòE N
)
òòN O
;
òòO P
return
öö 
await
öö 
includes
öö !
.
öö! "
	Aggregate
öö" +
(
öö+ ,
set
öö, /
,
öö/ 0
(
öö1 2
current
öö2 9
,
öö9 :
include
öö; B
)
ööB C
=>
ööD F
current
ööG N
.
ööN O
Include
ööO V
(
ööV W
include
ööW ^
)
öö^ _
)
öö_ `
.
öö` a
ToListAsync
ööa l
(
ööl m
)
ööm n
;
öön o
}
ùù 	
public
üü 
async
üü 
Task
üü 
<
üü 
TEntity
üü !
>
üü! "
GetAsync
üü# +
(
üü+ ,

Expression
üü, 6
<
üü6 7
Func
üü7 ;
<
üü; <
TEntity
üü< C
,
üüC D
bool
üüE I
>
üüI J
>
üüJ K
	predicate
üüL U
,
üüU V
params
üüW ]

Expression
üü^ h
<
üüh i
Func
üüi m
<
üüm n
TEntity
üün u
,
üüu v
object
üüw }
>
üü} ~
>
üü~ 
[üü Ä
]üüÄ Å
includesüüÇ ä
)üüä ã
{
†† 	
string
°° 
key
°° 
=
°° 
this
°° 
.
°° 
_EntityName
°° )
+
°°* +
GetPropertyName
°°, ;
<
°°; <
TEntity
°°< C
>
°°C D
(
°°D E
includes
°°E M
)
°°M N
;
°°N O

IQueryable
££ 
<
££ 
TEntity
££ 
>
££ 
set
££  #
=
££$ %
	dbContext
££& /
.
££/ 0
Set
££0 3
<
££3 4
TEntity
££4 ;
>
££; <
(
££< =
)
££= >
.
££> ?
Where
££? D
(
££D E
	predicate
££E N
)
££N O
;
££O P
return
•• 
(
•• 
await
•• 
includes
•• "
.
••" #
	Aggregate
••# ,
(
••, -
set
••- 0
,
••0 1
(
••2 3
current
••3 :
,
••: ;
include
••< C
)
••C D
=>
••E G
current
••H O
.
••O P
Include
••P W
(
••W X
include
••X _
)
••_ `
)
••` a
.
••a b!
FirstOrDefaultAsync
••b u
(
••u v
)
••v w
??
••x z
default••{ Ç
(••Ç É
TEntity••É ä
)••ä ã
)••ã å
;••å ç
}
¶¶ 	
public
®® 
TEntity
®® 
Get
®® 
(
®® 

Expression
®® %
<
®®% &
Func
®®& *
<
®®* +
TEntity
®®+ 2
,
®®2 3
bool
®®4 8
>
®®8 9
>
®®9 :
	predicate
®®; D
,
®®D E
params
®®F L

Expression
®®M W
<
®®W X
Func
®®X \
<
®®\ ]
TEntity
®®] d
,
®®d e
object
®®f l
>
®®l m
>
®®m n
[
®®n o
]
®®o p
includes
®®q y
)
®®y z
{
©© 	
string
™™ 
key
™™ 
=
™™ 
this
™™ 
.
™™ 
_EntityName
™™ )
+
™™* +
GetPropertyName
™™, ;
<
™™; <
TEntity
™™< C
>
™™C D
(
™™D E
includes
™™E M
)
™™M N
;
™™N O

IQueryable
¨¨ 
<
¨¨ 
TEntity
¨¨ 
>
¨¨ 
set
¨¨  #
=
¨¨$ %
	dbContext
¨¨& /
.
¨¨/ 0
Set
¨¨0 3
<
¨¨3 4
TEntity
¨¨4 ;
>
¨¨; <
(
¨¨< =
)
¨¨= >
.
¨¨> ?
Where
¨¨? D
(
¨¨D E
	predicate
¨¨E N
)
¨¨N O
;
¨¨O P
return
ÆÆ 
(
ÆÆ 
includes
ÆÆ 
.
ÆÆ 
	Aggregate
ÆÆ &
(
ÆÆ& '
set
ÆÆ' *
,
ÆÆ* +
(
ÆÆ, -
current
ÆÆ- 4
,
ÆÆ4 5
include
ÆÆ6 =
)
ÆÆ= >
=>
ÆÆ? A
current
ÆÆB I
.
ÆÆI J
Include
ÆÆJ Q
(
ÆÆQ R
include
ÆÆR Y
)
ÆÆY Z
)
ÆÆZ [
.
ÆÆ[ \
FirstOrDefault
ÆÆ\ j
(
ÆÆj k
)
ÆÆk l
??
ÆÆm o
default
ÆÆp w
(
ÆÆw x
TEntity
ÆÆx 
)ÆÆ Ä
)ÆÆÄ Å
;ÆÆÅ Ç
}
ØØ 	
public
µµ 
Task
µµ 
<
µµ 
IEnumerable
µµ 
<
µµ  
TEntity
µµ  '
>
µµ' (
>
µµ( )
Find
µµ* .
(
µµ. /

Expression
µµ/ 9
<
µµ9 :
Func
µµ: >
<
µµ> ?
TEntity
µµ? F
,
µµF G
bool
µµH L
>
µµL M
>
µµM N
	predicate
µµO X
)
µµX Y
{
∂∂ 	
throw
∑∑ 
new
∑∑ %
NotImplementedException
∑∑ -
(
∑∑- .
)
∑∑. /
;
∑∑/ 0
}
∏∏ 	
public
∫∫ 
IEnumerable
∫∫ 
<
∫∫ 
TEntity
∫∫ "
>
∫∫" #
FindAll
∫∫$ +
(
∫∫+ ,

Expression
∫∫, 6
<
∫∫6 7
Func
∫∫7 ;
<
∫∫; <
TEntity
∫∫< C
,
∫∫C D
bool
∫∫E I
>
∫∫I J
>
∫∫J K
	predicate
∫∫L U
)
∫∫U V
{
ªª 	
var
ºº 
findAll
ºº 
=
ºº 
	dbContext
ºº #
.
ºº# $
Set
ºº$ '
<
ºº' (
TEntity
ºº( /
>
ºº/ 0
(
ºº0 1
)
ºº1 2
.
ºº2 3
Where
ºº3 8
(
ºº8 9
	predicate
ºº9 B
)
ººB C
.
ººC D
ToList
ººD J
(
ººJ K
)
ººK L
;
ººL M
try
ææ 
{
øø 
var
¿¿ 
props
¿¿ 
=
¿¿ 
findAll
¿¿ #
.
¿¿# $
GetType
¿¿$ +
(
¿¿+ ,
)
¿¿, -
.
¿¿- .
GetProperties
¿¿. ;
(
¿¿; <
)
¿¿< =
;
¿¿= >
if
¡¡ 
(
¡¡ 
props
¡¡ 
.
¡¡ 
Any
¡¡ 
(
¡¡ 
p
¡¡ 
=>
¡¡  "
p
¡¡# $
.
¡¡$ %
Name
¡¡% )
is
¡¡* ,
$str
¡¡- 8
)
¡¡8 9
)
¡¡9 :
{
¬¬ 
return
√√ 
findAll
√√ "
.
√√" #
Where
√√# (
(
√√( )
o
√√) *
=>
√√+ -
(
√√. /
bool
√√/ 3
)
√√3 4
o
√√4 5
.
√√5 6
GetType
√√6 =
(
√√= >
)
√√> ?
.
√√? @
GetProperty
√√@ K
(
√√K L
$str
√√L W
)
√√W X
.
√√X Y
GetValue
√√Y a
(
√√a b
o
√√b c
)
√√c d
==
√√e g
false
√√h m
)
√√m n
.
√√n o
ToList
√√o u
(
√√u v
)
√√v w
;
√√w x
}
ƒƒ 
return
≈≈ 
findAll
≈≈ 
;
≈≈ 
}
∆∆ 
catch
«« 
(
«« 
	Exception
«« 
exx
««  
)
««  !
{
»» 
}
»» 
return
…… 
findAll
…… 
;
…… 
}
   	
public
ÃÃ 
async
ÃÃ 
Task
ÃÃ 
<
ÃÃ 
IEnumerable
ÃÃ %
<
ÃÃ% &
TEntity
ÃÃ& -
>
ÃÃ- .
>
ÃÃ. /
FindAllAsync
ÃÃ0 <
(
ÃÃ< =

Expression
ÃÃ= G
<
ÃÃG H
Func
ÃÃH L
<
ÃÃL M
TEntity
ÃÃM T
,
ÃÃT U
bool
ÃÃV Z
>
ÃÃZ [
>
ÃÃ[ \
	predicate
ÃÃ] f
)
ÃÃf g
{
ÕÕ 	
var
ŒŒ 
findAll
ŒŒ 
=
ŒŒ 
await
ŒŒ 
	dbContext
ŒŒ  )
.
ŒŒ) *
Set
ŒŒ* -
<
ŒŒ- .
TEntity
ŒŒ. 5
>
ŒŒ5 6
(
ŒŒ6 7
)
ŒŒ7 8
.
ŒŒ8 9
Where
ŒŒ9 >
(
ŒŒ> ?
	predicate
ŒŒ? H
)
ŒŒH I
.
ŒŒI J
ToListAsync
ŒŒJ U
(
ŒŒU V
)
ŒŒV W
;
ŒŒW X
try
œœ 
{
–– 
var
—— 
props
—— 
=
—— 
findAll
—— #
.
——# $
GetType
——$ +
(
——+ ,
)
——, -
.
——- .
GetProperties
——. ;
(
——; <
)
——< =
;
——= >
if
““ 
(
““ 
props
““ 
.
““ 
Any
““ 
(
““ 
p
““ 
=>
““  "
p
““# $
.
““$ %
Name
““% )
is
““* ,
$str
““- 8
)
““8 9
)
““9 :
{
”” 
return
‘‘ 
findAll
‘‘ "
.
‘‘" #
Where
‘‘# (
(
‘‘( )
o
‘‘) *
=>
‘‘+ -
(
‘‘. /
bool
‘‘/ 3
)
‘‘3 4
o
‘‘4 5
.
‘‘5 6
GetType
‘‘6 =
(
‘‘= >
)
‘‘> ?
.
‘‘? @
GetProperty
‘‘@ K
(
‘‘K L
$str
‘‘L W
)
‘‘W X
.
‘‘X Y
GetValue
‘‘Y a
(
‘‘a b
o
‘‘b c
)
‘‘c d
==
‘‘e g
false
‘‘h m
)
‘‘m n
.
‘‘n o
ToList
‘‘o u
(
‘‘u v
)
‘‘v w
;
‘‘w x
}
’’ 
return
÷÷ 
findAll
÷÷ 
;
÷÷ 
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
exx
ÿÿ  
)
ÿÿ  !
{
ŸŸ 
}
ŸŸ 
return
⁄⁄ 
findAll
⁄⁄ 
;
⁄⁄ 
}
€€ 	
public
›› 
Task
›› 
<
›› 
TEntity
›› 
>
›› 
SingleOrDefault
›› ,
(
››, -

Expression
››- 7
<
››7 8
Func
››8 <
<
››< =
TEntity
››= D
,
››D E
bool
››F J
>
››J K
>
››K L
	predicate
››M V
)
››V W
{
ﬁﬁ 	
throw
ﬂﬂ 
new
ﬂﬂ %
NotImplementedException
ﬂﬂ -
(
ﬂﬂ- .
)
ﬂﬂ. /
;
ﬂﬂ/ 0
}
‡‡ 	
public
‚‚ 
async
‚‚ 
Task
‚‚ 
<
‚‚ 
TResult
‚‚ !
>
‚‚! "$
GetFirstOrDefaultAsync
‚‚# 9
<
‚‚9 :
TResult
‚‚: A
>
‚‚A B
(
‚‚B C

Expression
‚‚C M
<
‚‚M N
Func
‚‚N R
<
‚‚R S
TEntity
‚‚S Z
,
‚‚Z [
TResult
‚‚\ c
>
‚‚c d
>
‚‚d e
selector
‚‚f n
,
‚‚n o

Expression
„„. 8
<
„„8 9
Func
„„9 =
<
„„= >
TEntity
„„> E
,
„„E F
bool
„„G K
>
„„K L
>
„„L M
	predicate
„„N W
=
„„X Y
null
„„Z ^
,
„„^ _
Func
‰‰. 2
<
‰‰2 3

IQueryable
‰‰3 =
<
‰‰= >
TEntity
‰‰> E
>
‰‰E F
,
‰‰F G
IOrderedQueryable
‰‰H Y
<
‰‰Y Z
TEntity
‰‰Z a
>
‰‰a b
>
‰‰b c
orderBy
‰‰d k
=
‰‰l m
null
‰‰n r
,
‰‰r s
Func
ÂÂ. 2
<
ÂÂ2 3

IQueryable
ÂÂ3 =
<
ÂÂ= >
TEntity
ÂÂ> E
>
ÂÂE F
,
ÂÂF G"
IIncludableQueryable
ÂÂH \
<
ÂÂ\ ]
TEntity
ÂÂ] d
,
ÂÂd e
object
ÂÂf l
>
ÂÂl m
>
ÂÂm n
include
ÂÂo v
=
ÂÂw x
null
ÂÂy }
,
ÂÂ} ~
bool
ÊÊ. 2
disableTracking
ÊÊ3 B
=
ÊÊC D
true
ÊÊE I
)
ÊÊI J
{
ÁÁ 	

IQueryable
ËË 
<
ËË 
TEntity
ËË 
>
ËË 
query
ËË  %
=
ËË& '
dbSet
ËË( -
;
ËË- .
if
ÈÈ 
(
ÈÈ 
disableTracking
ÈÈ 
)
ÈÈ  
{
ÍÍ 
query
ÎÎ 
=
ÎÎ 
query
ÎÎ 
.
ÎÎ 
AsNoTracking
ÎÎ *
(
ÎÎ* +
)
ÎÎ+ ,
;
ÎÎ, -
}
ÏÏ 
if
ÓÓ 
(
ÓÓ 
include
ÓÓ 
!=
ÓÓ 
null
ÓÓ 
)
ÓÓ  
{
ÔÔ 
query
 
=
 
include
 
(
  
query
  %
)
% &
;
& '
}
ÒÒ 
if
ÛÛ 
(
ÛÛ 
	predicate
ÛÛ 
!=
ÛÛ 
null
ÛÛ !
)
ÛÛ! "
{
ÙÙ 
query
ıı 
=
ıı 
query
ıı 
.
ıı 
Where
ıı #
(
ıı# $
	predicate
ıı$ -
)
ıı- .
;
ıı. /
}
ˆˆ 
if
¯¯ 
(
¯¯ 
orderBy
¯¯ 
!=
¯¯ 
null
¯¯ 
)
¯¯  
{
˘˘ 
return
˙˙ 
await
˙˙ 
orderBy
˙˙ $
(
˙˙$ %
query
˙˙% *
)
˙˙* +
.
˙˙+ ,
Select
˙˙, 2
(
˙˙2 3
selector
˙˙3 ;
)
˙˙; <
.
˙˙< =!
FirstOrDefaultAsync
˙˙= P
(
˙˙P Q
)
˙˙Q R
;
˙˙R S
}
˚˚ 
else
¸¸ 
{
˝˝ 
return
˛˛ 
await
˛˛ 
query
˛˛ "
.
˛˛" #
Select
˛˛# )
(
˛˛) *
selector
˛˛* 2
)
˛˛2 3
.
˛˛3 4!
FirstOrDefaultAsync
˛˛4 G
(
˛˛G H
)
˛˛H I
;
˛˛I J
}
ˇˇ 
}
ÄÄ 	
public
àà 
void
àà 
AddAsync
àà 
(
àà 
TEntity
àà $
entity
àà% +
)
àà+ ,
{
ââ 	
try
ää 
{
ãã *
SetCommmonPropertiesWhileAdd
åå ,
(
åå, -
entity
åå- 3
)
åå3 4
;
åå4 5
}
çç 
catch
éé 
(
éé 
	Exception
éé 
ex
éé 
)
éé  
{
èè 
}
êê 
	dbContext
≠≠ 
.
≠≠ 
Set
≠≠ 
<
≠≠ 
TEntity
≠≠ !
>
≠≠! "
(
≠≠" #
)
≠≠# $
.
≠≠$ %
AddAsync
≠≠% -
(
≠≠- .
entity
≠≠. 4
)
≠≠4 5
;
≠≠5 6
}
ÆÆ 	
public
∞∞ 
void
∞∞ 
Add
∞∞ 
(
∞∞ 
TEntity
∞∞ 
entity
∞∞  &
)
∞∞& '
{
±± 	
try
≤≤ 
{
≥≥ 
	dbContext
¥¥ 
.
¥¥ 
Entry
¥¥ 
(
¥¥  
entity
¥¥  &
)
¥¥& '
.
¥¥' (
Property
¥¥( 0
(
¥¥0 1
$str
¥¥1 >
)
¥¥> ?
.
¥¥? @
CurrentValue
¥¥@ L
=
¥¥M N#
_currentSQLServerDate
¥¥O d
;
¥¥d e
}
µµ 
catch
∂∂ 
(
∂∂ 
	Exception
∂∂ 
ex
∂∂ 
)
∂∂  
{
∑∑ 
}
∏∏ 
	dbContext
–– 
.
–– 
Entry
–– 
(
–– 
entity
–– "
)
––" #
.
––# $
Property
––$ ,
(
––, -
$str
––- 9
)
––9 :
.
––: ;
CurrentValue
––; G
=
––H I#
_currentSQLServerDate
––J _
;
––_ `
	dbContext
—— 
.
—— 
Entry
—— 
(
—— 
entity
—— "
)
——" #
.
——# $
Property
——$ ,
(
——, -
$str
——- ?
)
——? @
.
——@ A
CurrentValue
——A M
=
——N O
	dbContext
——P Y
.
——Y Z
Entry
——Z _
(
——_ `
entity
——` f
)
——f g
.
——g h
Property
——h p
(
——p q
$str
——q }
)
——} ~
.
——~ 
CurrentValue—— ã
;——ã å
	dbContext
““ 
.
““ 
Entry
““ 
(
““ 
entity
““ "
)
““" #
.
““# $
Property
““$ ,
(
““, -
$str
““- =
)
““= >
.
““> ?
CurrentValue
““? K
=
““L M
	dbContext
““N W
.
““W X
Entry
““X ]
(
““] ^
entity
““^ d
)
““d e
.
““e f
Property
““f n
(
““n o
$str
““o z
)
““z {
.
““{ |
CurrentValue““| à
;““à â*
SetCommmonPropertiesWhileAdd
”” (
(
””( )
entity
””) /
)
””/ 0
;
””0 1
	dbContext
’’ 
.
’’ 
Set
’’ 
<
’’ 
TEntity
’’ !
>
’’! "
(
’’" #
)
’’# $
.
’’$ %
Add
’’% (
(
’’( )
entity
’’) /
)
’’/ 0
;
’’0 1
}
÷÷ 	
public
ÿÿ 
void
ÿÿ 
AddRange
ÿÿ 
(
ÿÿ 
IEnumerable
ÿÿ (
<
ÿÿ( )
TEntity
ÿÿ) 0
>
ÿÿ0 1
entities
ÿÿ2 :
)
ÿÿ: ;
{
ŸŸ 	
try
⁄⁄ 
{
€€ 
	dbContext
‹‹ 
.
‹‹ 
Set
‹‹ 
<
‹‹ 
TEntity
‹‹ %
>
‹‹% &
(
‹‹& '
)
‹‹' (
.
‹‹( )
AddRange
‹‹) 1
(
‹‹1 2
entities
‹‹2 :
)
‹‹: ;
;
‹‹; <
}
›› 
catch
ﬁﬁ 
{
ﬂﬂ 
}
‡‡ 
}
·· 	
public
„„ 
void
„„ 
AddRangeAsync
„„ !
(
„„! "
IEnumerable
„„" -
<
„„- .
TEntity
„„. 5
>
„„5 6
entities
„„7 ?
)
„„? @
{
‰‰ 	
try
ÂÂ 
{
ÊÊ 
	dbContext
ÁÁ 
.
ÁÁ 
Set
ÁÁ 
<
ÁÁ 
TEntity
ÁÁ %
>
ÁÁ% &
(
ÁÁ& '
)
ÁÁ' (
.
ÁÁ( )
AddRangeAsync
ÁÁ) 6
(
ÁÁ6 7
entities
ÁÁ7 ?
)
ÁÁ? @
;
ÁÁ@ A
}
ËË 
catch
ÈÈ 
(
ÈÈ 
	Exception
ÈÈ 
e
ÈÈ 
)
ÈÈ 
{
ÍÍ 
}
ÎÎ 
}
ÏÏ 	
public
ÓÓ 
void
ÓÓ 
UpdateAsync
ÓÓ 
(
ÓÓ  
TEntity
ÓÓ  '
entity
ÓÓ( .
,
ÓÓ. /
bool
ÓÓ0 4!
IsCreatedDateUpdate
ÓÓ5 H
=
ÓÓI J
false
ÓÓK P
)
ÓÓP Q
{
ÔÔ 	
TEntity
ÒÒ 
originalEntity
ÒÒ "
=
ÒÒ# $
GetOrignalEntity
ÒÒ% 5
(
ÒÒ5 6
entity
ÒÒ6 <
)
ÒÒ< =
;
ÒÒ= >,
SetCommonPropertiesWhileUpdate
ÛÛ *
(
ÛÛ* +
entity
ÛÛ+ 1
,
ÛÛ1 2
originalEntity
ÛÛ3 A
,
ÛÛA B!
IsCreatedDateUpdate
ÛÛC V
)
ÛÛV W
;
ÛÛW X
UpdateGraph
ıı 
(
ıı 
entity
ıı 
,
ıı 
EntityState
ıı  +
.
ıı+ ,
Modified
ıı, 4
)
ıı4 5
;
ıı5 6
}
˜˜ 	
public
˘˘ 
TEntity
˘˘ 
	GetEntity
˘˘  
(
˘˘  !

Expression
˘˘! +
<
˘˘+ ,
Func
˘˘, 0
<
˘˘0 1
TEntity
˘˘1 8
,
˘˘8 9
bool
˘˘: >
>
˘˘> ?
>
˘˘? @
	predicate
˘˘A J
)
˘˘J K
{
˙˙ 	
var
˚˚ 
oEntity
˚˚ 
=
˚˚ 
	dbContext
˚˚ #
.
˚˚# $
Set
˚˚$ '
<
˚˚' (
TEntity
˚˚( /
>
˚˚/ 0
(
˚˚0 1
)
˚˚1 2
.
˚˚2 3
Where
˚˚3 8
(
˚˚8 9
	predicate
˚˚9 B
)
˚˚B C
.
˚˚C D
SingleOrDefault
˚˚D S
(
˚˚S T
)
˚˚T U
;
˚˚U V
try
¸¸ 
{
˝˝ 
var
˛˛ 
	isDeleted
˛˛ 
=
˛˛ 
oEntity
˛˛  '
.
˛˛' (
GetType
˛˛( /
(
˛˛/ 0
)
˛˛0 1
.
˛˛1 2
GetProperty
˛˛2 =
(
˛˛= >
	IsDeleted
˛˛> G
)
˛˛G H
?
˛˛H I
.
˛˛I J
GetValue
˛˛J R
(
˛˛R S
oEntity
˛˛S Z
)
˛˛Z [
;
˛˛[ \
if
ˇˇ 
(
ˇˇ 
	isDeleted
ˇˇ 
!=
ˇˇ  
null
ˇˇ! %
&&
ˇˇ& (
(
ˇˇ) *
bool
ˇˇ* .
)
ˇˇ. /
	isDeleted
ˇˇ/ 8
)
ˇˇ8 9
{
ÄÄ 
oEntity
ÅÅ 
=
ÅÅ 
null
ÅÅ "
;
ÅÅ" #
}
ÇÇ 
}
ÉÉ 
catch
ÑÑ 
(
ÑÑ 
	Exception
ÑÑ 
e
ÑÑ 
)
ÑÑ 
{
ÖÖ 
}
ÜÜ 
return
íí 
oEntity
íí 
;
íí 
}
ìì 	
public
óó 
async
óó 
Task
óó 
<
óó 
int
óó 
>
óó "
GetRecordsTotalAsync
óó 3
(
óó3 4
)
óó4 5
{
òò 	
return
ôô 
await
ôô 
	dbContext
ôô "
.
ôô" #
Set
ôô# &
<
ôô& '
TEntity
ôô' .
>
ôô. /
(
ôô/ 0
)
ôô0 1
.
ôô1 2

CountAsync
ôô2 <
(
ôô< =
)
ôô= >
;
ôô> ?
}
öö 	
public
úú 
virtual
úú 
string
úú #
GetSearchPropertyName
úú 3
(
úú3 4
)
úú4 5
{
ùù 	
return
ûû 
null
ûû 
;
ûû 
}
üü 	
public
°° 
async
°° 
Task
°° 
<
°° 
IEnumerable
°° %
<
°°% &
TEntity
°°& -
>
°°- .
>
°°. /-
GetPagedSortedFilteredListAsync
°°0 O
(
°°O P
int
°°P S
start
°°T Y
,
°°Y Z
int
°°[ ^
length
°°_ e
,
°°e f
string
°°g m
orderColumnName
°°n }
,
°°} ~ 
ListSortDirection°° ê
order°°ë ñ
,°°ñ ó
string°°ò û
searchValue°°ü ™
)°°™ ´
{
¢¢ 	
var
££ 
getAllResult
££ 
=
££ 
await
££ $,
CreateQueryWithWhereAndOrderBy
££% C
(
££C D
searchValue
££D O
,
££O P
orderColumnName
££Q `
,
££` a
order
££b g
)
££g h
.
§§ 
Skip
§§ 
(
§§ 
start
§§ 
)
§§ 
.
•• 
Take
•• 
(
•• 
length
•• 
)
•• 
.
¶¶ 
ToListAsync
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶  
try
ßß 
{
®® 
var
©© 
getAllFilter
©©  
=
©©! "
getAllResult
©©# /
.
©©/ 0
ToList
©©0 6
(
©©6 7
)
©©7 8
.
©©8 9
Where
©©9 >
(
©©> ?
m
©©? @
=>
©©A C
(
©©D E
(
©©E F
dynamic
©©F M
)
©©M N
m
©©N O
)
©©O P
.
©©P Q
	IsDeleted
©©Q Z
==
©©[ ]
false
©©^ c
)
©©c d
.
©©d e
ToList
©©e k
(
©©k l
)
©©l m
;
©©m n
return
™™ 
getAllFilter
™™ #
;
™™# $
}
´´ 
catch
¨¨ 
(
¨¨ 
	Exception
¨¨ 
exx
¨¨  
)
¨¨  !
{
≠≠ 
}
≠≠ 
return
ÆÆ 
getAllResult
ÆÆ 
;
ÆÆ  
}
ØØ 	
	protected
±± 
virtual
±± 

IQueryable
±± $
<
±±$ %
TEntity
±±% ,
>
±±, -,
CreateQueryWithWhereAndOrderBy
±±. L
(
±±L M
string
±±M S
searchValue
±±T _
,
±±_ `
string
±±a g
orderColumnName
±±h w
,
±±w x 
ListSortDirection±±y ä
order±±ã ê
)±±ê ë
{
≤≤ 	

IQueryable
≥≥ 
<
≥≥ 
TEntity
≥≥ 
>
≥≥ 
query
≥≥  %
=
≥≥& '
	dbContext
≥≥( 1
.
≥≥1 2
Set
≥≥2 5
<
≥≥5 6
TEntity
≥≥6 =
>
≥≥= >
(
≥≥> ?
)
≥≥? @
;
≥≥@ A
query
µµ 
=
µµ )
GetWhereQueryForSearchValue
µµ /
(
µµ/ 0
query
µµ0 5
,
µµ5 6
searchValue
µµ7 B
)
µµB C
;
µµC D
query
∑∑ 
=
∑∑ 
AddOrderByToQuery
∑∑ %
(
∑∑% &
query
∑∑& +
,
∑∑+ ,
orderColumnName
∑∑- <
,
∑∑< =
order
∑∑> C
)
∑∑C D
;
∑∑D E
return
ππ 
query
ππ 
;
ππ 
}
∫∫ 	
public
ºº 
async
ºº 
Task
ºº 
<
ºº 
int
ºº 
>
ºº %
GetRecordsFilteredAsync
ºº 6
(
ºº6 7
string
ºº7 =
searchValue
ºº> I
)
ººI J
{
ΩΩ 	
return
ææ 
await
ææ )
GetWhereQueryForSearchValue
ææ 4
(
ææ4 5
	dbContext
ææ5 >
.
ææ> ?
Set
ææ? B
<
ææB C
TEntity
ææC J
>
ææJ K
(
ææK L
)
ææL M
,
ææM N
searchValue
ææO Z
)
ææZ [
.
ææ[ \

CountAsync
ææ\ f
(
ææf g
)
ææg h
;
ææh i
}
øø 	
	protected
   
virtual
   

IQueryable
   $
<
  $ %
TEntity
  % ,
>
  , -)
GetWhereQueryForSearchValue
  . I
(
  I J

IQueryable
  J T
<
  T U
TEntity
  U \
>
  \ ]
	queryable
  ^ g
,
  g h
string
  i o
searchValue
  p {
)
  { |
{
ÀÀ 	
string
ÃÃ  
searchPropertyName
ÃÃ %
=
ÃÃ& '#
GetSearchPropertyName
ÃÃ( =
(
ÃÃ= >
)
ÃÃ> ?
;
ÃÃ? @
PropertyInfo
ÕÕ 
[
ÕÕ 
]
ÕÕ  
arrayPropertyInfos
ÕÕ -
=
ÕÕ. /
typeof
ÕÕ0 6
(
ÕÕ6 7
TEntity
ÕÕ7 >
)
ÕÕ> ?
.
ÕÕ? @
GetProperties
ÕÕ@ M
(
ÕÕM N
)
ÕÕN O
;
ÕÕO P
if
ŒŒ 
(
ŒŒ 
searchValue
ŒŒ 
==
ŒŒ 
$str
ŒŒ '
)
ŒŒ' (
searchValue
œœ 
=
œœ 
$str
œœ  
;
œœ  !
foreach
—— 
(
—— 
PropertyInfo
—— !
property
——" *
in
——+ - 
arrayPropertyInfos
——. @
)
——@ A
{
““  
searchPropertyName
”” "
=
””# $
property
””% -
.
””- .
Name
””. 2
;
””2 3
string
‘‘ 
PropType
‘‘ 
=
‘‘  !
property
‘‘" *
.
‘‘* +
PropertyType
‘‘+ 7
.
‘‘7 8
ToString
‘‘8 @
(
‘‘@ A
)
‘‘A B
;
‘‘B C
if
÷÷ 
(
÷÷ 
!
÷÷ 
string
÷÷ 
.
÷÷  
IsNullOrWhiteSpace
÷÷ .
(
÷÷. /
searchValue
÷÷/ :
)
÷÷: ;
&&
÷÷< >
!
÷÷? @
string
÷÷@ F
.
÷÷F G 
IsNullOrWhiteSpace
÷÷G Y
(
÷÷Y Z 
searchPropertyName
÷÷Z l
)
÷÷l m
&&
÷÷n p
!
÷÷q r
PropType
÷÷r z
.
÷÷z {
Contains÷÷{ É
(÷÷É Ñ
$str÷÷Ñ í
)÷÷í ì
)÷÷ì î
{
◊◊ 
var
ÿÿ 
searchValues
ÿÿ $
=
ÿÿ% &
Regex
ÿÿ' ,
.
ÿÿ, -
Split
ÿÿ- 2
(
ÿÿ2 3
searchValue
ÿÿ3 >
,
ÿÿ> ?
$str
ÿÿ@ F
)
ÿÿF G
;
ÿÿG H
foreach
⁄⁄ 
(
⁄⁄ 
string
⁄⁄ #
value
⁄⁄$ )
in
⁄⁄* ,
searchValues
⁄⁄- 9
)
⁄⁄9 :
{
€€ 
if
‹‹ 
(
‹‹ 
!
‹‹ 
string
‹‹ #
.
‹‹# $ 
IsNullOrWhiteSpace
‹‹$ 6
(
‹‹6 7
value
‹‹7 <
)
‹‹< =
)
‹‹= >
{
›› 
	queryable
ﬁﬁ %
=
ﬁﬁ& '
	queryable
ﬁﬁ( 1
.
ﬁﬁ1 2
Where
ﬁﬁ2 7
(
ﬁﬁ7 8.
 GetExpressionForPropertyContains
ﬁﬁ8 X
(
ﬁﬁX Y 
searchPropertyName
ﬁﬁY k
,
ﬁﬁk l
value
ﬁﬁm r
)
ﬁﬁr s
)
ﬁﬁs t
;
ﬁﬁt u
}
ﬂﬂ 
}
‡‡ 
if
‚‚ 
(
‚‚ 
	queryable
‚‚ !
.
‚‚! "
Count
‚‚" '
(
‚‚' (
)
‚‚( )
>
‚‚* +
$num
‚‚, -
)
‚‚- .
break
„„ 
;
„„ 
return
ÂÂ 
	queryable
ÂÂ $
;
ÂÂ$ %
}
ÊÊ 
}
ÁÁ 
return
ËË 
	queryable
ËË 
;
ËË 
}
ÈÈ 	
	protected
ÙÙ 
virtual
ÙÙ 

IQueryable
ÙÙ $
<
ÙÙ$ %
TEntity
ÙÙ% ,
>
ÙÙ, -
AddOrderByToQuery
ÙÙ. ?
(
ÙÙ? @

IQueryable
ÙÙ@ J
<
ÙÙJ K
TEntity
ÙÙK R
>
ÙÙR S
query
ÙÙT Y
,
ÙÙY Z
string
ÙÙ[ a
orderColumnName
ÙÙb q
,
ÙÙq r 
ListSortDirectionÙÙs Ñ
orderÙÙÖ ä
)ÙÙä ã
{
ıı 	
var
ˆˆ "
orderDirectionMethod
ˆˆ $
=
ˆˆ% &
order
ˆˆ' ,
==
ˆˆ- /
ListSortDirection
ˆˆ0 A
.
ˆˆA B
	Ascending
ˆˆB K
?
˜˜ 
$str
˜˜ 
:
¯¯ 
$str
¯¯ )
;
¯¯) *
var
˙˙ 
type
˙˙ 
=
˙˙ 
typeof
˙˙ 
(
˙˙ 
TEntity
˙˙ %
)
˙˙% &
;
˙˙& '
var
˚˚ 
property
˚˚ 
=
˚˚ 
type
˚˚ 
.
˚˚  
GetProperty
˚˚  +
(
˚˚+ ,
orderColumnName
˚˚, ;
)
˚˚; <
;
˚˚< =
var
¸¸ 
	parameter
¸¸ 
=
¸¸ 

Expression
¸¸ &
.
¸¸& '
	Parameter
¸¸' 0
(
¸¸0 1
type
¸¸1 5
,
¸¸5 6
$str
¸¸7 :
)
¸¸: ;
;
¸¸; <
var
˝˝ 
propertyAccess
˝˝ 
=
˝˝  

Expression
˝˝! +
.
˝˝+ ,
MakeMemberAccess
˝˝, <
(
˝˝< =
	parameter
˝˝= F
,
˝˝F G
property
˝˝H P
)
˝˝P Q
;
˝˝Q R
var
˛˛ 

orderByExp
˛˛ 
=
˛˛ 

Expression
˛˛ '
.
˛˛' (
Lambda
˛˛( .
(
˛˛. /
propertyAccess
˛˛/ =
,
˛˛= >
	parameter
˛˛? H
)
˛˛H I
;
˛˛I J
var
ˇˇ %
filteredAndOrderedQuery
ˇˇ '
=
ˇˇ( )

Expression
ˇˇ* 4
.
ˇˇ4 5
Call
ˇˇ5 9
(
ˇˇ9 :
typeof
ˇˇ: @
(
ˇˇ@ A
	Queryable
ˇˇA J
)
ˇˇJ K
,
ˇˇK L"
orderDirectionMethod
ˇˇM a
,
ˇˇa b
new
ˇˇc f
Type
ˇˇg k
[
ˇˇk l
]
ˇˇl m
{
ˇˇn o
type
ˇˇp t
,
ˇˇt u
property
ˇˇv ~
.
ˇˇ~ 
PropertyTypeˇˇ ã
}ˇˇå ç
,ˇˇç é
queryˇˇè î
.ˇˇî ï

Expressionˇˇï ü
,ˇˇü †

Expressionˇˇ° ´
.ˇˇ´ ¨
Quoteˇˇ¨ ±
(ˇˇ± ≤

orderByExpˇˇ≤ º
)ˇˇº Ω
)ˇˇΩ æ
;ˇˇæ ø
return
ÅÅ 
query
ÅÅ 
.
ÅÅ 
Provider
ÅÅ !
.
ÅÅ! "
CreateQuery
ÅÅ" -
<
ÅÅ- .
TEntity
ÅÅ. 5
>
ÅÅ5 6
(
ÅÅ6 7%
filteredAndOrderedQuery
ÅÅ7 N
)
ÅÅN O
;
ÅÅO P
}
ÇÇ 	
	protected
ÑÑ 

Expression
ÑÑ 
<
ÑÑ 
Func
ÑÑ !
<
ÑÑ! "
TEntity
ÑÑ" )
,
ÑÑ) *
bool
ÑÑ+ /
>
ÑÑ/ 0
>
ÑÑ0 1.
 GetExpressionForPropertyContains
ÑÑ2 R
(
ÑÑR S
string
ÑÑS Y
propertyName
ÑÑZ f
,
ÑÑf g
string
ÑÑh n
value
ÑÑo t
)
ÑÑt u
{
ÖÖ 	
var
ÜÜ 
parent
ÜÜ 
=
ÜÜ 

Expression
ÜÜ #
.
ÜÜ# $
	Parameter
ÜÜ$ -
(
ÜÜ- .
typeof
ÜÜ. 4
(
ÜÜ4 5
TEntity
ÜÜ5 <
)
ÜÜ< =
)
ÜÜ= >
;
ÜÜ> ?

MethodInfo
áá 
method
áá 
=
áá 
typeof
áá  &
(
áá& '
string
áá' -
)
áá- .
.
áá. /
	GetMethod
áá/ 8
(
áá8 9
$str
áá9 C
,
ááC D
new
ááE H
Type
ááI M
[
ááM N
]
ááN O
{
ááP Q
typeof
ááR X
(
ááX Y
string
ááY _
)
áá_ `
}
ááa b
)
ááb c
;
áác d
var
àà 
expressionBody
àà 
=
àà  

Expression
àà! +
.
àà+ ,
Call
àà, 0
(
àà0 1

Expression
àà1 ;
.
àà; <
Property
àà< D
(
ààD E
parent
ààE K
,
ààK L
propertyName
ààM Y
)
ààY Z
,
ààZ [
method
àà\ b
,
ààb c

Expression
ààd n
.
ààn o
Constant
àào w
(
ààw x
value
ààx }
)
àà} ~
)
àà~ 
;àà Ä
return
ââ 

Expression
ââ 
.
ââ 
Lambda
ââ $
<
ââ$ %
Func
ââ% )
<
ââ) *
TEntity
ââ* 1
,
ââ1 2
bool
ââ3 7
>
ââ7 8
>
ââ8 9
(
ââ9 :
expressionBody
ââ: H
,
ââH I
parent
ââJ P
)
ââP Q
;
ââQ R
}
ää 	
public
îî 
void
îî 
UpdateGraph
îî 
(
îî  
TEntity
îî  '
entity
îî( .
,
îî. /
EntityState
îî0 ;
entityState
îî< G
)
îîG H
{
ïï 	
	dbContext
ññ 
.
ññ 
ChangeTracker
ññ #
.
ññ# $

TrackGraph
ññ$ .
(
ññ. /
entity
ññ/ 5
,
ññ5 6
node
ññ7 ;
=>
ññ< >
{
óó 
var
òò 
entry
òò 
=
òò 
node
òò  
.
òò  !
Entry
òò! &
;
òò& '
var
ôô 
childEntity
ôô 
=
ôô  !
entry
ôô" '
.
ôô' (
Entity
ôô( .
;
ôô. /
switch
ùù 
(
ùù 
entityState
ùù #
)
ùù# $
{
ûû 
case
üü 
EntityState
üü $
.
üü$ %
Added
üü% *
:
üü* +
New
†† 
(
†† 
childEntity
†† '
)
††' (
;
††( )
break
°° 
;
°° 
case
££ 
EntityState
££ $
.
££$ %
Modified
££% -
:
££- .
Modify
§§ 
(
§§ 
childEntity
§§ *
)
§§* +
;
§§+ ,
break
•• 
;
•• 
case
ßß 
EntityState
ßß $
.
ßß$ %
Deleted
ßß% ,
:
ßß, -
Delete
®® 
(
®® 
childEntity
®® *
)
®®* +
;
®®+ ,
break
©© 
;
©© 
default
´´ 
:
´´ 
	dbContext
¨¨ !
.
¨¨! "
Entry
¨¨" '
(
¨¨' (
childEntity
¨¨( 3
)
¨¨3 4
.
¨¨4 5
State
¨¨5 :
=
¨¨; <
entityState
¨¨= H
;
¨¨H I
break
≠≠ 
;
≠≠ 
}
ÆÆ 
}
ØØ 
)
ØØ 
;
ØØ 
}
∞∞ 	
private
≤≤ 
void
≤≤ *
SetCommmonPropertiesWhileAdd
≤≤ 1
(
≤≤1 2
object
≤≤2 8
entity
≤≤9 ?
)
≤≤? @
{
≥≥ 	
	dbContext
¥¥ 
.
¥¥ 
Entry
¥¥ 
(
¥¥ 
entity
¥¥ "
)
¥¥" #
.
¥¥# $
Property
¥¥$ ,
(
¥¥, -
CreatedDate
¥¥- 8
)
¥¥8 9
.
¥¥9 :
CurrentValue
¥¥: F
=
¥¥G H#
_currentSQLServerDate
¥¥I ^
;
¥¥^ _
	dbContext
µµ 
.
µµ 
Entry
µµ 
(
µµ 
entity
µµ "
)
µµ" #
.
µµ# $
Property
µµ$ ,
(
µµ, -

ModifiedBy
µµ- 7
)
µµ7 8
.
µµ8 9
CurrentValue
µµ9 E
=
µµF G
	dbContext
µµH Q
.
µµQ R
Entry
µµR W
(
µµW X
entity
µµX ^
)
µµ^ _
.
µµ_ `
Property
µµ` h
(
µµh i
	CreatedBy
µµi r
)
µµr s
.
µµs t
CurrentValueµµt Ä
;µµÄ Å
	dbContext
∂∂ 
.
∂∂ 
Entry
∂∂ 
(
∂∂ 
entity
∂∂ "
)
∂∂" #
.
∂∂# $
Property
∂∂$ ,
(
∂∂, -
ModifiedDate
∂∂- 9
)
∂∂9 :
.
∂∂: ;
CurrentValue
∂∂; G
=
∂∂H I#
_currentSQLServerDate
∂∂J _
;
∂∂_ `
}
∑∑ 	
private
ππ 
void
ππ ,
SetCommonPropertiesWhileUpdate
ππ 3
(
ππ3 4
object
ππ4 :
entity
ππ; A
,
ππA B
object
ππC I
oEntity
ππJ Q
,
ππQ R
bool
ππS W!
IsCreatedDateUpdate
ππX k
=
ππl m
false
ππn s
)
ππs t
{
∫∫ 	
try
ªª 
{
ºº 
if
ΩΩ 
(
ΩΩ 
!
ΩΩ !
IsCreatedDateUpdate
ΩΩ (
)
ΩΩ( )
{
ææ 
	dbContext
øø 
.
øø 
Entry
øø #
(
øø# $
entity
øø$ *
)
øø* +
.
øø+ ,
Property
øø, 4
(
øø4 5
	CreatedBy
øø5 >
)
øø> ?
.
øø? @
CurrentValue
øø@ L
=
øøM N
oEntity
øøO V
.
øøV W
GetType
øøW ^
(
øø^ _
)
øø_ `
.
øø` a
GetProperty
øøa l
(
øøl m
	CreatedBy
øøm v
)
øøv w
?
øøw x
.
øøx y
GetValueøøy Å
(øøÅ Ç
oEntityøøÇ â
)øøâ ä
;øøä ã
	dbContext
¿¿ 
.
¿¿ 
Entry
¿¿ #
(
¿¿# $
entity
¿¿$ *
)
¿¿* +
.
¿¿+ ,
Property
¿¿, 4
(
¿¿4 5
CreatedDate
¿¿5 @
)
¿¿@ A
.
¿¿A B
CurrentValue
¿¿B N
=
¿¿O P
oEntity
¿¿Q X
.
¿¿X Y
GetType
¿¿Y `
(
¿¿` a
)
¿¿a b
.
¿¿b c
GetProperty
¿¿c n
(
¿¿n o
CreatedDate
¿¿o z
)
¿¿z {
?
¿¿{ |
.
¿¿| }
GetValue¿¿} Ö
(¿¿Ö Ü
oEntity¿¿Ü ç
)¿¿ç é
;¿¿é è
	dbContext
√√ 
.
√√ 
Entry
√√ #
(
√√# $
entity
√√$ *
)
√√* +
.
√√+ ,
Property
√√, 4
(
√√4 5
	CreatedBy
√√5 >
)
√√> ?
.
√√? @

IsModified
√√@ J
=
√√K L
false
√√M R
;
√√R S
	dbContext
ƒƒ 
.
ƒƒ 
Entry
ƒƒ #
(
ƒƒ# $
entity
ƒƒ$ *
)
ƒƒ* +
.
ƒƒ+ ,
Property
ƒƒ, 4
(
ƒƒ4 5
CreatedDate
ƒƒ5 @
)
ƒƒ@ A
.
ƒƒA B

IsModified
ƒƒB L
=
ƒƒM N
false
ƒƒO T
;
ƒƒT U
}
≈≈ 
	dbContext
«« 
.
«« 
Entry
«« 
(
««  
entity
««  &
)
««& '
.
««' (
Property
««( 0
(
««0 1
ModifiedDate
««1 =
)
««= >
.
««> ?
CurrentValue
««? K
=
««L M#
_currentSQLServerDate
««N c
;
««c d
}
»» 
catch
…… 
(
…… 
	Exception
…… 
e
…… 
)
…… 
{
   
}
ÀÀ 
try
ÕÕ 
{
ŒŒ 
var
œœ 
delete
œœ 
=
œœ 
	dbContext
œœ &
.
œœ& '
Entry
œœ' ,
(
œœ, -
entity
œœ- 3
)
œœ3 4
.
œœ4 5
Property
œœ5 =
(
œœ= >
	IsDeleted
œœ> G
)
œœG H
;
œœH I
if
—— 
(
—— 
delete
—— 
!=
—— 
null
—— "
&&
——# %
delete
——& ,
.
——, -
CurrentValue
——- 9
!=
——: <
null
——= A
&&
——B D
(
——E F
bool
——F J
)
——J K
delete
——K Q
.
——Q R
CurrentValue
——R ^
==
——_ a
true
——b f
)
——f g
{
““ 
	dbContext
”” 
.
”” 
Entry
”” #
(
””# $
entity
””$ *
)
””* +
.
””+ ,
Property
””, 4
(
””4 5
ModifiedDate
””5 A
)
””A B
.
””B C
CurrentValue
””C O
=
””P Q#
_currentSQLServerDate
””R g
;
””g h
}
‘‘ 
}
’’ 
catch
÷÷ 
(
÷÷ 
	Exception
÷÷ 
e
÷÷ 
)
÷÷ 
{
◊◊ 
}
ÿÿ 
}
ÓÓ 	
private
 
void
 
New
 
(
 
object
 
childEntity
  +
)
+ ,
{
ÒÒ 	*
SetCommmonPropertiesWhileAdd
ÚÚ (
(
ÚÚ( )
childEntity
ÚÚ) 4
)
ÚÚ4 5
;
ÚÚ5 6
	dbContext
ÛÛ 
.
ÛÛ 
Entry
ÛÛ 
(
ÛÛ 
childEntity
ÛÛ '
)
ÛÛ' (
.
ÛÛ( )
State
ÛÛ) .
=
ÛÛ/ 0
EntityState
ÛÛ1 <
.
ÛÛ< =
Added
ÛÛ= B
;
ÛÛB C
}
ÙÙ 	
private
ˆˆ 
void
ˆˆ 
Modify
ˆˆ 
(
ˆˆ 
object
ˆˆ "
childEntity
ˆˆ# .
)
ˆˆ. /
{
˜˜ 	
Type
¯¯ 
type
¯¯ 
=
¯¯ 
childEntity
¯¯ #
.
¯¯# $
GetType
¯¯$ +
(
¯¯+ ,
)
¯¯, -
;
¯¯- .
var
˘˘ 
keyName
˘˘ 
=
˘˘ 
	dbContext
˘˘ #
.
˘˘# $
Model
˘˘$ )
.
˘˘) *
FindEntityType
˘˘* 8
(
˘˘8 9
type
˘˘9 =
)
˘˘= >
.
˘˘> ?
FindPrimaryKey
˘˘? M
(
˘˘M N
)
˘˘N O
.
˘˘O P

Properties
˘˘P Z
.
˘˘Z [
Select
˘˘[ a
(
˘˘a b
x
˘˘b c
=>
˘˘d f
x
˘˘g h
.
˘˘h i
Name
˘˘i m
)
˘˘m n
.
˘˘n o
Single
˘˘o u
(
˘˘u v
)
˘˘v w
;
˘˘w x
var
˙˙ 
pkey
˙˙ 
=
˙˙ 
(
˙˙ 
int
˙˙ 
)
˙˙ 
childEntity
˙˙ '
.
˙˙' (
GetType
˙˙( /
(
˙˙/ 0
)
˙˙0 1
.
˙˙1 2
GetProperty
˙˙2 =
(
˙˙= >
keyName
˙˙> E
)
˙˙E F
.
˙˙F G
GetValue
˙˙G O
(
˙˙O P
childEntity
˙˙P [
,
˙˙[ \
null
˙˙] a
)
˙˙a b
;
˙˙b c
	dbContext
¸¸ 
.
¸¸ 
ChangeTracker
¸¸ #
.
¸¸# $#
QueryTrackingBehavior
¸¸$ 9
=
¸¸: ;#
QueryTrackingBehavior
¸¸< Q
.
¸¸Q R

NoTracking
¸¸R \
;
¸¸\ ]
var
˝˝ 
originalEntity
˝˝ 
=
˝˝  
	dbContext
˝˝! *
.
˝˝* +
Find
˝˝+ /
(
˝˝/ 0
childEntity
˝˝0 ;
.
˝˝; <
GetType
˝˝< C
(
˝˝C D
)
˝˝D E
,
˝˝E F
pkey
˝˝G K
)
˝˝K L
;
˝˝L M
	dbContext
˛˛ 
.
˛˛ 
ChangeTracker
˛˛ #
.
˛˛# $#
QueryTrackingBehavior
˛˛$ 9
=
˛˛: ;#
QueryTrackingBehavior
˛˛< Q
.
˛˛Q R
TrackAll
˛˛R Z
;
˛˛Z [
if
ÄÄ 
(
ÄÄ 
originalEntity
ÄÄ 
!=
ÄÄ !
null
ÄÄ" &
)
ÄÄ& '
{
ÅÅ 
	dbContext
ÇÇ 
.
ÇÇ 
Entry
ÇÇ 
(
ÇÇ  
originalEntity
ÇÇ  .
)
ÇÇ. /
.
ÇÇ/ 0
State
ÇÇ0 5
=
ÇÇ6 7
EntityState
ÇÇ8 C
.
ÇÇC D
Detached
ÇÇD L
;
ÇÇL M,
SetCommonPropertiesWhileUpdate
ää .
(
ää. /
childEntity
ää/ :
,
ää: ;
originalEntity
ää< J
)
ääJ K
;
ääK L
	dbContext
ëë 
.
ëë 
Entry
ëë 
(
ëë  
childEntity
ëë  +
)
ëë+ ,
.
ëë, -
State
ëë- 2
=
ëë3 4
EntityState
ëë5 @
.
ëë@ A
Modified
ëëA I
;
ëëI J
}
íí 
}
ìì 	
private
ïï 
void
ïï 
Delete
ïï 
(
ïï 
object
ïï "
childEntity
ïï# .
)
ïï. /
{
ññ 	
Type
óó 
type
óó 
=
óó 
childEntity
óó #
.
óó# $
GetType
óó$ +
(
óó+ ,
)
óó, -
;
óó- .
var
òò 
keyName
òò 
=
òò 
	dbContext
òò #
.
òò# $
Model
òò$ )
.
òò) *
FindEntityType
òò* 8
(
òò8 9
type
òò9 =
)
òò= >
.
òò> ?
FindPrimaryKey
òò? M
(
òòM N
)
òòN O
.
òòO P

Properties
òòP Z
.
òòZ [
Select
òò[ a
(
òòa b
x
òòb c
=>
òòd f
x
òòg h
.
òòh i
Name
òòi m
)
òòm n
.
òòn o
Single
òòo u
(
òòu v
)
òòv w
;
òòw x
var
ôô 
pkey
ôô 
=
ôô 
(
ôô 
int
ôô 
)
ôô 
childEntity
ôô '
.
ôô' (
GetType
ôô( /
(
ôô/ 0
)
ôô0 1
.
ôô1 2
GetProperty
ôô2 =
(
ôô= >
keyName
ôô> E
)
ôôE F
.
ôôF G
GetValue
ôôG O
(
ôôO P
childEntity
ôôP [
,
ôô[ \
null
ôô] a
)
ôôa b
;
ôôb c
	dbContext
õõ 
.
õõ 
ChangeTracker
õõ #
.
õõ# $#
QueryTrackingBehavior
õõ$ 9
=
õõ: ;#
QueryTrackingBehavior
õõ< Q
.
õõQ R

NoTracking
õõR \
;
õõ\ ]
var
úú 
originalEntity
úú 
=
úú  
	dbContext
úú! *
.
úú* +
Find
úú+ /
(
úú/ 0
childEntity
úú0 ;
.
úú; <
GetType
úú< C
(
úúC D
)
úúD E
,
úúE F
pkey
úúG K
)
úúK L
;
úúL M
	dbContext
ùù 
.
ùù 
ChangeTracker
ùù #
.
ùù# $#
QueryTrackingBehavior
ùù$ 9
=
ùù: ;#
QueryTrackingBehavior
ùù< Q
.
ùùQ R
TrackAll
ùùR Z
;
ùùZ [
if
üü 
(
üü 
originalEntity
üü 
!=
üü !
null
üü" &
)
üü& '
{
†† 
	dbContext
°° 
.
°° 
Entry
°° 
(
°°  
originalEntity
°°  .
)
°°. /
.
°°/ 0
State
°°0 5
=
°°6 7
EntityState
°°8 C
.
°°C D
Detached
°°D L
;
°°L M
	dbContext
§§ 
.
§§ 
Entry
§§ 
(
§§  
childEntity
§§  +
)
§§+ ,
.
§§, -
State
§§- 2
=
§§3 4
EntityState
§§5 @
.
§§@ A
Deleted
§§A H
;
§§H I
}
•• 
}
¶¶ 	
public
™™ 
void
™™ 
Remove
™™ 
(
™™ 
TEntity
™™ "
entity
™™# )
)
™™) *
{
´´ 	
TEntity
≠≠ 
originalEntity
≠≠ "
=
≠≠# $
GetOrignalEntity
≠≠% 5
(
≠≠5 6
entity
≠≠6 <
)
≠≠< =
;
≠≠= >
var
ØØ 
props
ØØ 
=
ØØ 
originalEntity
ØØ &
.
ØØ& '
GetType
ØØ' .
(
ØØ. /
)
ØØ/ 0
.
ØØ0 1
GetProperties
ØØ1 >
(
ØØ> ?
)
ØØ? @
;
ØØ@ A
if
∞∞ 
(
∞∞ 
props
∞∞ 
.
∞∞ 
Any
∞∞ 
(
∞∞ 
p
∞∞ 
=>
∞∞ 
p
∞∞  
.
∞∞  !
Name
∞∞! %
is
∞∞& (
$str
∞∞) 4
)
∞∞4 5
||
∞∞6 8
props
∞∞9 >
.
∞∞> ?
Any
∞∞? B
(
∞∞B C
p
∞∞C D
=>
∞∞E G
p
∞∞H I
.
∞∞I J
Name
∞∞J N
is
∞∞O Q
$str
∞∞R \
)
∞∞\ ]
)
∞∞] ^
{
±± 
if
≤≤ 
(
≤≤ 
props
≤≤ 
.
≤≤ 
Any
≤≤ 
(
≤≤ 
p
≤≤ 
=>
≤≤  "
p
≤≤# $
.
≤≤$ %
Name
≤≤% )
is
≤≤* ,
$str
≤≤- 8
)
≤≤8 9
)
≤≤9 :
	dbContext
≥≥ 
.
≥≥ 
Entry
≥≥ #
(
≥≥# $
originalEntity
≥≥$ 2
)
≥≥2 3
.
≥≥3 4
Property
≥≥4 <
(
≥≥< =
$str
≥≥= H
)
≥≥H I
.
≥≥I J
CurrentValue
≥≥J V
=
≥≥W X
true
≥≥Y ]
;
≥≥] ^
if
µµ 
(
µµ 
props
µµ 
.
µµ 
Any
µµ 
(
µµ 
p
µµ 
=>
µµ  "
p
µµ# $
.
µµ$ %
Name
µµ% )
is
µµ* ,
$str
µµ- 7
)
µµ7 8
)
µµ8 9
	dbContext
∂∂ 
.
∂∂ 
Entry
∂∂ #
(
∂∂# $
originalEntity
∂∂$ 2
)
∂∂2 3
.
∂∂3 4
Property
∂∂4 <
(
∂∂< =
$str
∂∂= G
)
∂∂G H
.
∂∂H I
CurrentValue
∂∂I U
=
∂∂V W
false
∂∂X ]
;
∂∂] ^
UpdateAsync
ππ 
(
ππ 
originalEntity
ππ *
)
ππ* +
;
ππ+ ,
}
∫∫ 
else
ªª 
{
ºº 
	dbContext
ΩΩ 
.
ΩΩ 
Entry
ΩΩ 
(
ΩΩ  
originalEntity
ΩΩ  .
)
ΩΩ. /
.
ΩΩ/ 0
State
ΩΩ0 5
=
ΩΩ6 7
EntityState
ΩΩ8 C
.
ΩΩC D
Deleted
ΩΩD K
;
ΩΩK L
}
ææ 
}
øø 	
public
¡¡ 
void
¡¡ 
RemoveRange
¡¡ 
(
¡¡  
IEnumerable
¡¡  +
<
¡¡+ ,
TEntity
¡¡, 3
>
¡¡3 4
entities
¡¡5 =
)
¡¡= >
{
¬¬ 	
	dbContext
√√ 
.
√√ 
Entry
√√ 
<
√√ 
IEnumerable
√√ '
<
√√' (
TEntity
√√( /
>
√√/ 0
>
√√0 1
(
√√1 2
entities
√√2 :
)
√√: ;
.
√√; <
State
√√< A
=
√√B C
EntityState
√√D O
.
√√O P
Deleted
√√P W
;
√√W X
}
≈≈ 	
public
ÀÀ 
IList
ÀÀ 
<
ÀÀ 
T
ÀÀ 
>
ÀÀ 
Replace
ÀÀ 
<
ÀÀ  
T
ÀÀ  !
>
ÀÀ! "
(
ÀÀ" #
IList
ÀÀ# (
<
ÀÀ( )
T
ÀÀ) *
>
ÀÀ* +
source
ÀÀ, 2
,
ÀÀ2 3
T
ÀÀ4 5
newValue
ÀÀ6 >
)
ÀÀ> ?
{
ÃÃ 	
if
ÕÕ 
(
ÕÕ 
source
ÕÕ 
==
ÕÕ 
null
ÕÕ 
)
ÕÕ 
throw
ŒŒ 
new
ŒŒ #
ArgumentNullException
ŒŒ /
(
ŒŒ/ 0
$str
ŒŒ0 8
)
ŒŒ8 9
;
ŒŒ9 :
var
–– 
keyName
–– 
=
–– 
	dbContext
–– #
.
––# $
Model
––$ )
.
––) *
FindEntityType
––* 8
(
––8 9
typeof
––9 ?
(
––? @
T
––@ A
)
––A B
)
––B C
.
––C D
FindPrimaryKey
––D R
(
––R S
)
––S T
.
––T U

Properties
––U _
.
—— 
Select
—— 
(
—— 
x
—— 
=>
—— 
x
—— 
.
—— 
Name
—— "
)
——" #
.
——# $
Single
——$ *
(
——* +
)
——+ ,
;
——, -
object
““ 
pkey
““ 
=
““ 
GetKey
““  
<
““  !
T
““! "
>
““" #
(
““# $
newValue
““$ ,
)
““, -
;
““- .
var
‘‘ 
oValue
‘‘ 
=
‘‘ 
source
‘‘ 
.
‘‘  
Select
‘‘  &
(
‘‘& '
s
‘‘' (
=>
‘‘) +
s
‘‘, -
.
‘‘- .
GetType
‘‘. 5
(
‘‘5 6
)
‘‘6 7
.
‘‘7 8
GetProperty
‘‘8 C
(
‘‘C D
keyName
‘‘D K
)
‘‘K L
.
‘‘L M
GetValue
‘‘M U
(
‘‘U V
s
‘‘V W
)
‘‘W X
)
‘‘X Y
.
‘‘Y Z
ToList
‘‘Z `
(
‘‘` a
)
‘‘a b
;
‘‘b c
var
’’ 
index
’’ 
=
’’ 
oValue
’’ 
.
’’ 
IndexOf
’’ &
(
’’& '
pkey
’’' +
)
’’+ ,
;
’’, -
if
◊◊ 
(
◊◊ 
index
◊◊ 
!=
◊◊ 
-
◊◊ 
$num
◊◊ 
)
◊◊ 
source
ÿÿ 
[
ÿÿ 
index
ÿÿ 
]
ÿÿ 
=
ÿÿ 
newValue
ÿÿ  (
;
ÿÿ( )
else
ŸŸ 
source
⁄⁄ 
[
⁄⁄ 
source
⁄⁄ 
.
⁄⁄ 
Count
⁄⁄ #
(
⁄⁄# $
)
⁄⁄$ %
+
⁄⁄& '
$num
⁄⁄( )
]
⁄⁄) *
=
⁄⁄+ ,
newValue
⁄⁄- 5
;
⁄⁄5 6
return
‹‹ 
source
‹‹ 
;
‹‹ 
}
›› 	
private
ﬂﬂ 
string
ﬂﬂ 
GetPropertyName
ﬂﬂ &
<
ﬂﬂ& '
T
ﬂﬂ' (
>
ﬂﬂ( )
(
ﬂﬂ) *

Expression
ﬂﬂ* 4
<
ﬂﬂ4 5
Func
ﬂﬂ5 9
<
ﬂﬂ9 :
T
ﬂﬂ: ;
,
ﬂﬂ; <
object
ﬂﬂ= C
>
ﬂﬂC D
>
ﬂﬂD E
[
ﬂﬂE F
]
ﬂﬂF G
includes
ﬂﬂH P
)
ﬂﬂP Q
{
‡‡ 	
string
·· 
key
·· 
=
·· 
string
·· 
.
··  
Empty
··  %
;
··% &
foreach
‚‚ 
(
‚‚ 
var
‚‚ 
include
‚‚  
in
‚‚! #
includes
‚‚$ ,
)
‚‚, -
{
„„ 
MemberExpression
‰‰  

memberExpr
‰‰! +
=
‰‰, -
include
‰‰. 5
.
‰‰5 6
Body
‰‰6 :
as
‰‰; =
MemberExpression
‰‰> N
;
‰‰N O
if
ÂÂ 
(
ÂÂ 

memberExpr
ÂÂ 
==
ÂÂ !
null
ÂÂ" &
)
ÂÂ& '
throw
ÊÊ 
new
ÊÊ 
ArgumentException
ÊÊ /
(
ÊÊ/ 0
$str
ÊÊ0 ]
)
ÊÊ] ^
;
ÊÊ^ _
key
ËË 
+=
ËË 
$str
ËË 
+
ËË 

memberExpr
ËË '
.
ËË' (
Member
ËË( .
.
ËË. /
Name
ËË/ 3
;
ËË3 4
}
ÈÈ 
return
ÍÍ 
key
ÍÍ 
;
ÍÍ 
}
ÎÎ 	
public
ÌÌ 
virtual
ÌÌ 
dynamic
ÌÌ 
GetKey
ÌÌ %
<
ÌÌ% &
T
ÌÌ& '
>
ÌÌ' (
(
ÌÌ( )
T
ÌÌ) *
entity
ÌÌ+ 1
)
ÌÌ1 2
{
ÓÓ 	
var
ÔÔ 
keyName
ÔÔ 
=
ÔÔ 
	dbContext
ÔÔ #
.
ÔÔ# $
Model
ÔÔ$ )
.
ÔÔ) *
FindEntityType
ÔÔ* 8
(
ÔÔ8 9
typeof
ÔÔ9 ?
(
ÔÔ? @
T
ÔÔ@ A
)
ÔÔA B
)
ÔÔB C
.
ÔÔC D
FindPrimaryKey
ÔÔD R
(
ÔÔR S
)
ÔÔS T
.
ÔÔT U

Properties
ÔÔU _
.
 
Select
 
(
 
x
 
=>
 
x
 
.
 
Name
 #
)
# $
.
$ %
Single
% +
(
+ ,
)
, -
;
- .
return
ÚÚ 
(
ÚÚ 
dynamic
ÚÚ 
)
ÚÚ 
entity
ÚÚ "
.
ÚÚ" #
GetType
ÚÚ# *
(
ÚÚ* +
)
ÚÚ+ ,
.
ÚÚ, -
GetProperty
ÚÚ- 8
(
ÚÚ8 9
keyName
ÚÚ9 @
)
ÚÚ@ A
.
ÚÚA B
GetValue
ÚÚB J
(
ÚÚJ K
entity
ÚÚK Q
,
ÚÚQ R
null
ÚÚS W
)
ÚÚW X
;
ÚÚX Y
}
ÛÛ 	
public
ıı 
TEntity
ıı 
GetOrignalEntity
ıı '
(
ıı' (
TEntity
ıı( /
entity
ıı0 6
)
ıı6 7
{
ˆˆ 	
var
¯¯ 
pkey
¯¯ 
=
¯¯ 
GetKey
¯¯ 
<
¯¯ 
TEntity
¯¯ %
>
¯¯% &
(
¯¯& '
entity
¯¯' -
)
¯¯- .
;
¯¯. /
TEntity
˚˚ 
originalEntity
˚˚ "
=
˚˚# $
GetNoTracking
˚˚% 2
(
˚˚2 3
pkey
˚˚3 7
)
˚˚7 8
;
˚˚8 9
this
¸¸ 
.
¸¸ 
originalEntity
¸¸ 
=
¸¸  !
originalEntity
¸¸" 0
;
¸¸0 1
return
˛˛ 
originalEntity
˛˛ !
;
˛˛! "
}
ˇˇ 	
public
ÅÅ 
bool
ÅÅ 
Exists
ÅÅ 
(
ÅÅ 
Func
ÅÅ 
<
ÅÅ  
TEntity
ÅÅ  '
,
ÅÅ' (
bool
ÅÅ) -
>
ÅÅ- .

conditions
ÅÅ/ 9
)
ÅÅ9 :
{
ÇÇ 	
return
ÉÉ 
dbSet
ÉÉ 
.
ÉÉ 
Any
ÉÉ 
(
ÉÉ 

conditions
ÉÉ '
)
ÉÉ' (
;
ÉÉ( )
}
ÑÑ 	
public
ÜÜ 
	DataTable
ÜÜ 
GetDataBySP
ÜÜ $
(
ÜÜ$ %
string
ÜÜ% +
SPName
ÜÜ, 2
,
ÜÜ2 3
List
ÜÜ4 8
<
ÜÜ8 9
string
ÜÜ9 ?
>
ÜÜ? @
	ParamName
ÜÜA J
=
ÜÜK L
null
ÜÜM Q
,
ÜÜQ R
List
ÜÜS W
<
ÜÜW X
string
ÜÜX ^
>
ÜÜ^ _

ParamValue
ÜÜ` j
=
ÜÜk l
null
ÜÜm q
)
ÜÜq r
{
áá 	
	DataTable
àà 
oDTList
àà 
=
àà 
new
àà  #
	DataTable
àà$ -
(
àà- .
)
àà. /
;
àà/ 0
using
ââ 
(
ââ 
var
ââ 
command
ââ 
=
ââ  
	dbContext
ââ! *
.
ââ* +
Database
ââ+ 3
.
ââ3 4
GetDbConnection
ââ4 C
(
ââC D
)
ââD E
.
ââE F
CreateCommand
ââF S
(
ââS T
)
ââT U
)
ââU V
{
ää 
command
ãã 
.
ãã 
CommandText
ãã #
=
ãã$ %
SPName
ãã& ,
;
ãã, -
command
åå 
.
åå 
CommandType
åå #
=
åå$ %
CommandType
åå& 1
.
åå1 2
StoredProcedure
åå2 A
;
ååA B
if
çç 
(
çç 
	ParamName
çç 
!=
çç  
null
çç! %
&&
çç& (
	ParamName
çç) 2
.
çç2 3
Count
çç3 8
>
çç9 :
$num
çç; <
)
çç< =
{
éé 
for
èè 
(
èè 
int
èè 
i
èè 
=
èè  
$num
èè! "
;
èè" #
i
èè$ %
<
èè& '
	ParamName
èè( 1
.
èè1 2
Count
èè2 7
;
èè7 8
i
èè9 :
++
èè: <
)
èè< =
{
êê 
command
ëë 
.
ëë  

Parameters
ëë  *
.
ëë* +
Add
ëë+ .
(
ëë. /
new
ëë/ 2
SqlParameter
ëë3 ?
(
ëë? @
	ParamName
ëë@ I
[
ëëI J
i
ëëJ K
]
ëëK L
.
ëëL M
ToString
ëëM U
(
ëëU V
)
ëëV W
,
ëëW X

ParamValue
ëëY c
[
ëëc d
i
ëëd e
]
ëëe f
)
ëëf g
)
ëëg h
;
ëëh i
}
íí 
}
ìì 
	dbContext
îî 
.
îî 
Database
îî "
.
îî" #
OpenConnection
îî# 1
(
îî1 2
)
îî2 3
;
îî3 4
using
ïï 
(
ïï 
var
ïï 
reader
ïï !
=
ïï" #
command
ïï$ +
.
ïï+ ,
ExecuteReader
ïï, 9
(
ïï9 :
)
ïï: ;
)
ïï; <
{
ññ 
for
óó 
(
óó 
var
óó 
i
óó 
=
óó  
$num
óó! "
;
óó" #
i
óó$ %
<
óó& '
reader
óó( .
.
óó. /

FieldCount
óó/ 9
;
óó9 :
i
óó; <
++
óó< >
)
óó> ?
{
òò 
var
ôô 
name
ôô  
=
ôô! "
reader
ôô# )
.
ôô) *
GetName
ôô* 1
(
ôô1 2
i
ôô2 3
)
ôô3 4
;
ôô4 5
oDTList
öö 
.
öö  
Columns
öö  '
.
öö' (
Add
öö( +
(
öö+ ,
name
öö, 0
)
öö0 1
;
öö1 2
}
õõ 
while
úú 
(
úú 
reader
úú !
.
úú! "
Read
úú" &
(
úú& '
)
úú' (
)
úú( )
{
ùù 
DataRow
ûû 
dr
ûû  "
=
ûû# $
oDTList
ûû% ,
.
ûû, -
NewRow
ûû- 3
(
ûû3 4
)
ûû4 5
;
ûû5 6
for
üü 
(
üü 
var
üü  
i
üü! "
=
üü# $
$num
üü% &
;
üü& '
i
üü( )
<
üü* +
reader
üü, 2
.
üü2 3

FieldCount
üü3 =
;
üü= >
i
üü? @
++
üü@ B
)
üüB C
{
†† 
if
°° 
(
°°  
oDTList
°°  '
.
°°' (
Columns
°°( /
[
°°/ 0
i
°°0 1
]
°°1 2
.
°°2 3
ToString
°°3 ;
(
°°; <
)
°°< =
==
°°> @
reader
°°A G
.
°°G H
GetName
°°H O
(
°°O P
i
°°P Q
)
°°Q R
.
°°R S
ToString
°°S [
(
°°[ \
)
°°\ ]
)
°°] ^
{
¢¢ 
dr
££  "
[
££" #
reader
££# )
.
££) *
GetName
££* 1
(
££1 2
i
££2 3
)
££3 4
]
££4 5
=
££6 7
reader
££8 >
.
££> ?
IsDBNull
££? G
(
££G H
i
££H I
)
££I J
?
££K L
null
££M Q
:
££R S
reader
££T Z
[
££Z [
i
££[ \
]
££\ ]
;
££] ^
}
§§ 
}
•• 
oDTList
¶¶ 
.
¶¶  
Rows
¶¶  $
.
¶¶$ %
Add
¶¶% (
(
¶¶( )
dr
¶¶) +
)
¶¶+ ,
;
¶¶, -
}
ßß 
}
®® 
	dbContext
©© 
.
©© 
Database
©© "
.
©©" #
CloseConnection
©©# 2
(
©©2 3
)
©©3 4
;
©©4 5
}
™™ 
return
´´ 
oDTList
´´ 
;
´´ 
}
¨¨ 	
public
ÆÆ 
async
ÆÆ 
Task
ÆÆ 
<
ÆÆ 
DataSet
ÆÆ !
>
ÆÆ! "
GetDataSetBySP
ÆÆ# 1
(
ÆÆ1 2
string
ÆÆ2 8
SPName
ÆÆ9 ?
,
ÆÆ? @

Dictionary
ÆÆA K
<
ÆÆK L
string
ÆÆL R
,
ÆÆR S
Object
ÆÆT Z
>
ÆÆZ [

parameters
ÆÆ\ f
=
ÆÆg h
null
ÆÆi m
)
ÆÆm n
{
ØØ 	
var
±± 
result
±± 
=
±± 
new
±± 
DataSet
±± $
(
±±$ %
)
±±% &
;
±±& '
using
¥¥ 
(
¥¥ 
var
¥¥ 
cmd
¥¥ 
=
¥¥ 
	dbContext
¥¥ &
.
¥¥& '
Database
¥¥' /
.
¥¥/ 0
GetDbConnection
¥¥0 ?
(
¥¥? @
)
¥¥@ A
.
¥¥A B
CreateCommand
¥¥B O
(
¥¥O P
)
¥¥P Q
)
¥¥Q R
{
µµ 
cmd
∑∑ 
.
∑∑ 
CommandType
∑∑ 
=
∑∑  !
CommandType
∑∑" -
.
∑∑- .
StoredProcedure
∑∑. =
;
∑∑= >
cmd
∏∏ 
.
∏∏ 
CommandText
∏∏ 
=
∏∏  !
SPName
∏∏" (
;
∏∏( )
if
ªª 
(
ªª 

parameters
ªª 
!=
ªª !
null
ªª" &
&&
ªª' )

parameters
ªª* 4
.
ªª4 5
Count
ªª5 :
>
ªª; <
$num
ªª= >
)
ªª> ?
{
ºº 
foreach
ΩΩ 
(
ΩΩ 
var
ΩΩ  
pr
ΩΩ! #
in
ΩΩ$ &

parameters
ΩΩ' 1
)
ΩΩ1 2
{
ææ 
var
øø 
p
øø 
=
øø 
cmd
øø  #
.
øø# $
CreateParameter
øø$ 3
(
øø3 4
)
øø4 5
;
øø5 6
p
¿¿ 
.
¿¿ 
ParameterName
¿¿ '
=
¿¿( )
pr
¿¿* ,
.
¿¿, -
Key
¿¿- 0
;
¿¿0 1
p
¡¡ 
.
¡¡ 
Value
¡¡ 
=
¡¡  !
pr
¡¡" $
.
¡¡$ %
Value
¡¡% *
;
¡¡* +
cmd
¬¬ 
.
¬¬ 

Parameters
¬¬ &
.
¬¬& '
Add
¬¬' *
(
¬¬* +
p
¬¬+ ,
)
¬¬, -
;
¬¬- .
}
√√ 
}
ƒƒ 
try
≈≈ 
{
∆∆ 
	dbContext
»» 
.
»» 
Database
»» &
.
»»& '
OpenConnection
»»' 5
(
»»5 6
)
»»6 7
;
»»7 8
using
…… 
(
…… 
var
…… 
reader
…… %
=
……& '
await
……( -
cmd
……. 1
.
……1 2 
ExecuteReaderAsync
……2 D
(
……D E
)
……E F
)
……F G
{
   
do
ÃÃ 
{
ÕÕ 
var
œœ 
tb
œœ  "
=
œœ# $
new
œœ% (
	DataTable
œœ) 2
(
œœ2 3
)
œœ3 4
;
œœ4 5
tb
–– 
.
–– 
Load
–– #
(
––# $
reader
––$ *
)
––* +
;
––+ ,
result
—— "
.
——" #
Tables
——# )
.
——) *
Add
——* -
(
——- .
tb
——. 0
)
——0 1
;
——1 2
}
““ 
while
““ 
(
““  !
!
““! "
reader
““" (
.
““( )
IsClosed
““) 1
)
““1 2
;
““2 3
}
”” 
}
‘‘ 
catch
’’ 
(
’’ 
	Exception
’’  
ex
’’! #
)
’’# $
{
’’% &
}
’’' (
finally
÷÷ 
{
◊◊ 
	dbContext
ŸŸ 
.
ŸŸ 
Database
ŸŸ &
.
ŸŸ& '
CloseConnection
ŸŸ' 6
(
ŸŸ6 7
)
ŸŸ7 8
;
ŸŸ8 9
}
⁄⁄ 
}
€€ 
return
ﬁﬁ 
result
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 	
public
·· 
async
·· 
Task
·· 
<
·· 
	DataTable
·· #
>
··# $
GetDataBySPAsync
··% 5
(
··5 6
string
··6 <
SPName
··= C
,
··C D
List
··E I
<
··I J
string
··J P
>
··P Q
	ParamName
··R [
=
··\ ]
null
··^ b
,
··b c
List
··d h
<
··h i
object
··i o
>
··o p

ParamValue
··q {
=
··| }
null··~ Ç
)··Ç É
{
‚‚ 	
	DataTable
„„ 
oDTList
„„ 
=
„„ 
new
„„  #
	DataTable
„„$ -
(
„„- .
)
„„. /
;
„„/ 0
using
‰‰ 
(
‰‰ 
var
‰‰ 
command
‰‰ 
=
‰‰  
	dbContext
‰‰! *
.
‰‰* +
Database
‰‰+ 3
.
‰‰3 4
GetDbConnection
‰‰4 C
(
‰‰C D
)
‰‰D E
.
‰‰E F
CreateCommand
‰‰F S
(
‰‰S T
)
‰‰T U
)
‰‰U V
{
ÂÂ 
command
ÊÊ 
.
ÊÊ 
CommandText
ÊÊ #
=
ÊÊ$ %
SPName
ÊÊ& ,
;
ÊÊ, -
command
ÁÁ 
.
ÁÁ 
CommandType
ÁÁ #
=
ÁÁ$ %
CommandType
ÁÁ& 1
.
ÁÁ1 2
StoredProcedure
ÁÁ2 A
;
ÁÁA B
if
ËË 
(
ËË 
	ParamName
ËË 
!=
ËË  
null
ËË! %
&&
ËË& (
	ParamName
ËË) 2
.
ËË2 3
Count
ËË3 8
>
ËË9 :
$num
ËË; <
)
ËË< =
{
ÈÈ 
for
ÍÍ 
(
ÍÍ 
int
ÍÍ 
i
ÍÍ 
=
ÍÍ  
$num
ÍÍ! "
;
ÍÍ" #
i
ÍÍ$ %
<
ÍÍ& '
	ParamName
ÍÍ( 1
.
ÍÍ1 2
Count
ÍÍ2 7
;
ÍÍ7 8
i
ÍÍ9 :
++
ÍÍ: <
)
ÍÍ< =
{
ÎÎ 
command
ÏÏ 
.
ÏÏ  

Parameters
ÏÏ  *
.
ÏÏ* +
Add
ÏÏ+ .
(
ÏÏ. /
new
ÏÏ/ 2
SqlParameter
ÏÏ3 ?
(
ÏÏ? @
	ParamName
ÏÏ@ I
[
ÏÏI J
i
ÏÏJ K
]
ÏÏK L
.
ÏÏL M
ToString
ÏÏM U
(
ÏÏU V
)
ÏÏV W
,
ÏÏW X

ParamValue
ÏÏY c
[
ÏÏc d
i
ÏÏd e
]
ÏÏe f
)
ÏÏf g
)
ÏÏg h
;
ÏÏh i
}
ÌÌ 
}
ÓÓ 
	dbContext
ÔÔ 
.
ÔÔ 
Database
ÔÔ "
.
ÔÔ" #
OpenConnection
ÔÔ# 1
(
ÔÔ1 2
)
ÔÔ2 3
;
ÔÔ3 4
using
 
(
 
var
 
reader
 !
=
" #
await
$ )
command
* 1
.
1 2 
ExecuteReaderAsync
2 D
(
D E
)
E F
)
F G
{
ÒÒ 
for
ÚÚ 
(
ÚÚ 
var
ÚÚ 
i
ÚÚ 
=
ÚÚ  
$num
ÚÚ! "
;
ÚÚ" #
i
ÚÚ$ %
<
ÚÚ& '
reader
ÚÚ( .
.
ÚÚ. /

FieldCount
ÚÚ/ 9
;
ÚÚ9 :
i
ÚÚ; <
++
ÚÚ< >
)
ÚÚ> ?
{
ÛÛ 
var
ÙÙ 
name
ÙÙ  
=
ÙÙ! "
reader
ÙÙ# )
.
ÙÙ) *
GetName
ÙÙ* 1
(
ÙÙ1 2
i
ÙÙ2 3
)
ÙÙ3 4
;
ÙÙ4 5
oDTList
ıı 
.
ıı  
Columns
ıı  '
.
ıı' (
Add
ıı( +
(
ıı+ ,
name
ıı, 0
)
ıı0 1
;
ıı1 2
}
ˆˆ 
while
˜˜ 
(
˜˜ 
reader
˜˜ !
.
˜˜! "
Read
˜˜" &
(
˜˜& '
)
˜˜' (
)
˜˜( )
{
¯¯ 
DataRow
˘˘ 
dr
˘˘  "
=
˘˘# $
oDTList
˘˘% ,
.
˘˘, -
NewRow
˘˘- 3
(
˘˘3 4
)
˘˘4 5
;
˘˘5 6
for
˙˙ 
(
˙˙ 
var
˙˙  
i
˙˙! "
=
˙˙# $
$num
˙˙% &
;
˙˙& '
i
˙˙( )
<
˙˙* +
reader
˙˙, 2
.
˙˙2 3

FieldCount
˙˙3 =
;
˙˙= >
i
˙˙? @
++
˙˙@ B
)
˙˙B C
{
˚˚ 
if
¸¸ 
(
¸¸  
oDTList
¸¸  '
.
¸¸' (
Columns
¸¸( /
[
¸¸/ 0
i
¸¸0 1
]
¸¸1 2
.
¸¸2 3
ToString
¸¸3 ;
(
¸¸; <
)
¸¸< =
==
¸¸> @
reader
¸¸A G
.
¸¸G H
GetName
¸¸H O
(
¸¸O P
i
¸¸P Q
)
¸¸Q R
.
¸¸R S
ToString
¸¸S [
(
¸¸[ \
)
¸¸\ ]
)
¸¸] ^
{
˝˝ 
dr
˛˛  "
[
˛˛" #
reader
˛˛# )
.
˛˛) *
GetName
˛˛* 1
(
˛˛1 2
i
˛˛2 3
)
˛˛3 4
]
˛˛4 5
=
˛˛6 7
reader
˛˛8 >
.
˛˛> ?
IsDBNull
˛˛? G
(
˛˛G H
i
˛˛H I
)
˛˛I J
?
˛˛K L
null
˛˛M Q
:
˛˛R S
reader
˛˛T Z
[
˛˛Z [
i
˛˛[ \
]
˛˛\ ]
;
˛˛] ^
}
ˇˇ 
}
ÄÄ 
oDTList
ÅÅ 
.
ÅÅ  
Rows
ÅÅ  $
.
ÅÅ$ %
Add
ÅÅ% (
(
ÅÅ( )
dr
ÅÅ) +
)
ÅÅ+ ,
;
ÅÅ, -
}
ÇÇ 
}
ÉÉ 
	dbContext
ÑÑ 
.
ÑÑ 
Database
ÑÑ "
.
ÑÑ" #
CloseConnection
ÑÑ# 2
(
ÑÑ2 3
)
ÑÑ3 4
;
ÑÑ4 5
}
ÖÖ 
return
ÜÜ 
oDTList
ÜÜ 
;
ÜÜ 
}
áá 	
public
ââ 
async
ââ 
Task
ââ 
<
ââ 
TEntity
ââ !
>
ââ! "
GetAsync
ââ# +
(
ââ+ ,
long
ââ, 0
id
ââ1 3
)
ââ3 4
{
ää 	
string
ãã 
key
ãã 
=
ãã 
this
ãã 
.
ãã 
_EntityName
ãã )
+
ãã* +
id
ãã, .
.
ãã. /
ToString
ãã/ 7
(
ãã7 8
)
ãã8 9
;
ãã9 :
TEntity
åå 
o
åå 
=
åå 
await
åå 
	dbContext
åå '
.
åå' (
Set
åå( +
<
åå+ ,
TEntity
åå, 3
>
åå3 4
(
åå4 5
)
åå5 6
.
åå6 7
	FindAsync
åå7 @
(
åå@ A
id
ååA C
)
ååC D
;
ååD E
if
éé 
(
éé 
o
éé 
==
éé 
null
éé 
)
éé 
{
èè 
throw
êê 
new
êê 
	Exception
êê #
(
êê# $
AppConstants
êê$ 0
.
êê0 1
NoRecordFound
êê1 >
,
êê> ?
new
êê@ C"
KeyNotFoundException
êêD X
(
êêX Y
AppConstants
êêY e
.
êêe f
NoRecordFound
êêf s
)
êês t
)
êêt u
;
êêu v
}
ëë 
try
íí 
{
ìì 
if
îî 
(
îî 
o
îî 
.
îî 
GetType
îî 
(
îî 
)
îî 
.
îî  
GetProperty
îî  +
(
îî+ ,
$str
îî, 7
)
îî7 8
!=
îî9 ;
null
îî< @
)
îî@ A
{
ïï 
var
ññ 
	isDeleted
ññ !
=
ññ" #
o
ññ$ %
.
ññ% &
GetType
ññ& -
(
ññ- .
)
ññ. /
.
ññ/ 0
GetProperty
ññ0 ;
(
ññ; <
$str
ññ< G
)
ññG H
.
ññH I
GetValue
ññI Q
(
ññQ R
o
ññR S
)
ññS T
;
ññT U
if
óó 
(
óó 
	isDeleted
óó !
!=
óó" $
null
óó% )
&&
óó* ,
(
óó- .
bool
óó. 2
)
óó2 3
	isDeleted
óó3 <
)
óó< =
{
òò 
o
ôô 
=
ôô 
null
ôô  
;
ôô  !
throw
öö 
new
öö !
	Exception
öö" +
(
öö+ ,
AppConstants
öö, 8
.
öö8 9
NoRecordFound
öö9 F
,
ööF G
new
ööH K"
KeyNotFoundException
ööL `
(
öö` a
AppConstants
ööa m
.
ööm n
NoRecordFound
öön {
)
öö{ |
)
öö| }
;
öö} ~
}
õõ 
}
úú 
}
ùù 
catch
ûû 
(
ûû 
	Exception
ûû 
exx
ûû  
)
ûû  !
{
üü 
}
üü 
return
†† 
o
†† 
;
†† 
}
°° 	
public
££ 
async
££ 
Task
££ 
<
££ 
TEntity
££ !
>
££! "
GetLastAsync
££# /
(
££/ 0
string
££0 6
propertyName
££7 C
)
££C D
{
§§ 	
try
•• 
{
¶¶ 
var
ßß 
obj
ßß 
=
ßß 
await
ßß 
	dbContext
ßß  )
.
ßß) *
Set
ßß* -
<
ßß- .
TEntity
ßß. 5
>
ßß5 6
(
ßß6 7
)
ßß7 8
.
ßß8 9
ToListAsync
ßß9 D
(
ßßD E
)
ßßE F
;
ßßF G
var
®® 
record
®® 
=
®® 
obj
®®  
.
®®  !
OrderByDescending
®®! 2
(
®®2 3
p
®®3 4
=>
®®5 7
p
®®8 9
.
®®9 :
GetType
®®: A
(
®®A B
)
®®B C
.
®®C D
GetProperty
®®D O
(
®®O P
propertyName
®®P \
)
®®\ ]
)
®®] ^
.
®®^ _
Reverse
®®_ f
(
®®f g
)
®®g h
.
®®h i
FirstOrDefault
®®i w
(
®®w x
)
®®x y
;
®®y z
return
©© 
record
©© 
;
©© 
}
™™ 
catch
´´ 
(
´´ 
	Exception
´´ 
ex
´´ 
)
´´  
{
¨¨ 
throw
≠≠ 
ex
≠≠ 
;
≠≠ 
}
ÆÆ 
}
ØØ 	
public
±± 
async
±± 
Task
±± 
<
±± 
TEntity
±± !
>
±±! "
GetBySP
±±# *
(
±±* +
string
±±+ 1
SPName
±±2 8
)
±±8 9
{
≤≤ 	
try
≥≥ 
{
¥¥ 
var
∂∂ 
obj
∂∂ 
=
∂∂ 
	dbContext
∂∂ #
.
∂∂# $
Set
∂∂$ '
<
∂∂' (
TEntity
∂∂( /
>
∂∂/ 0
(
∂∂0 1
)
∂∂1 2
.
∂∂2 3

FromSqlRaw
∂∂3 =
(
∂∂= >
SPName
∂∂> D
)
∂∂D E
.
∂∂E F
FirstOrDefault
∂∂F T
(
∂∂T U
)
∂∂U V
;
∂∂V W
return
∏∏ 
obj
∏∏ 
;
∏∏ 
}
ππ 
catch
∫∫ 
(
∫∫ 
	Exception
∫∫ 
ex
∫∫ 
)
∫∫  
{
ªª 
throw
ºº 
ex
ºº 
;
ºº 
}
ΩΩ 
}
ææ 	
public
¡¡ 
async
¡¡ 
Task
¡¡ 
<
¡¡ 
	DataTable
¡¡ #
>
¡¡# $
GetBySP
¡¡% ,
(
¡¡, -
string
¡¡- 3
CommandText
¡¡4 ?
,
¡¡? @
CommandType
¡¡A L
commandType
¡¡M X
,
¡¡X Y
SqlParameter
¡¡Z f
[
¡¡f g
]
¡¡g h
sqlParameters
¡¡i v
)
¡¡v w
{
¬¬ 	
try
√√ 
{
ƒƒ 
return
≈≈ 
	SqlHelper
≈≈  
.
≈≈  !
ExecuteDataTable
≈≈! 1
(
≈≈1 2 
DatabaseConnection
≈≈2 D
.
≈≈D E

ConnString
≈≈E O
,
≈≈O P
CommandText
≈≈Q \
,
≈≈\ ]
commandType
≈≈^ i
,
≈≈i j
sqlParameters
≈≈k x
)
≈≈x y
;
≈≈y z
}
∆∆ 
catch
«« 
(
«« 
	Exception
«« 
ex
«« 
)
««  
{
»» 
throw
…… 
ex
…… 
;
…… 
}
   
}
ÀÀ 	
public
ÕÕ 
async
ÕÕ 
Task
ÕÕ 
<
ÕÕ 
DataSet
ÕÕ !
>
ÕÕ! "
GetDataSetBySP
ÕÕ# 1
(
ÕÕ1 2
string
ÕÕ2 8
CommandText
ÕÕ9 D
,
ÕÕD E
CommandType
ÕÕF Q
commandType
ÕÕR ]
,
ÕÕ] ^
SqlParameter
ÕÕ_ k
[
ÕÕk l
]
ÕÕl m
sqlParameters
ÕÕn {
)
ÕÕ{ |
{
ŒŒ 	
try
œœ 
{
–– 
return
—— 
	SqlHelper
——  
.
——  !
ExecuteDataset
——! /
(
——/ 0 
DatabaseConnection
——0 B
.
——B C

ConnString
——C M
,
——M N
CommandText
——O Z
,
——Z [
commandType
——\ g
,
——g h
sqlParameters
——i v
)
——v w
;
——w x
}
““ 
catch
”” 
(
”” 
	Exception
”” 
ex
”” 
)
””  
{
‘‘ 
throw
’’ 
ex
’’ 
;
’’ 
}
÷÷ 
}
◊◊ 	
}
‹‹ 
}›› ±
ED:\EltizamLive\Eltizam.Data.DataAccess\Core\UnitOfWork\IUnitOfWork.cs
	namespace		 	
Eltizam		
 
.		 
Data		 
.		 

DataAccess		 !
.		! "
Core		" &
.		& '

UnitOfWork		' 1
{

 
public 

	interface 
IUnitOfWork  
:! "
IDisposable# .
{ 
IRepository 
< 
TEntity 
> 
GetRepository *
<* +
TEntity+ 2
>2 3
(3 4
)4 5
where6 ;
TEntity< C
:D E
classF K
;K L
int 
SaveChanges 
( 
bool 
ensureAutoHistory .
=/ 0
false1 6
)6 7
;7 8
Task   
<   
int   
>   
SaveChangesAsync   "
(  " #
bool  # '
ensureAutoHistory  ( 9
=  : ;
false  < A
)  A B
;  B C
int(( 
ExecuteSqlCommand(( 
((( 
string(( $
sql((% (
,((( )
params((* 0
object((1 7
[((7 8
]((8 9

parameters((: D
)((D E
;((E F

IQueryable11 
<11 
TEntity11 
>11 
FromSql11 #
<11# $
TEntity11$ +
>11+ ,
(11, -
string11- 3
sql114 7
,117 8
params119 ?
object11@ F
[11F G
]11G H

parameters11I S
)11S T
where11U Z
TEntity11[ b
:11c d
class11e j
;11j k
Task:: 
<:: 
int:: 
>:: $
SaveChangesWithTranAsync:: *
(::* +
bool::+ /
ensureAutoHistory::0 A
=::B C
false::D I
)::I J
;::J K
};; 
}<< ÆE
DD:\EltizamLive\Eltizam.Data.DataAccess\Core\UnitOfWork\UnitOfWork.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Core" &
.& '

UnitOfWork' 1
{ 
public 

class 

UnitOfWork 
: 
IDisposable )
,) *
IUnitOfWork+ 6
{ 
private 
EltizamDBContext  
_context! )
;) *
private 
bool 
disposed 
= 
false  %
;% &
private 

Dictionary 
< 
Type 
,  
object! '
>' (
repositories) 5
;5 6
public 

UnitOfWork 
( 
EltizamDBContext *
Context+ 2
)2 3
{ 	
_context 
= 
Context 
; 
} 	
public 
IRepository 
< 
TEntity "
>" #
GetRepository$ 1
<1 2
TEntity2 9
>9 :
(: ;
); <
where= B
TEntityC J
:K L
classM R
{ 	
if 
( 
repositories 
== 
null  $
)$ %
{   
repositories!! 
=!! 
new!! "

Dictionary!!# -
<!!- .
Type!!. 2
,!!2 3
object!!4 :
>!!: ;
(!!; <
)!!< =
;!!= >
}"" 
var$$ 
type$$ 
=$$ 
typeof$$ 
($$ 
TEntity$$ %
)$$% &
;$$& '
if%% 
(%% 
!%% 
repositories%% 
.%% 
ContainsKey%% )
(%%) *
type%%* .
)%%. /
)%%/ 0
{&& 
repositories'' 
['' 
type'' !
]''! "
=''# $
new''% (

Repository'') 3
<''3 4
TEntity''4 ;
>''; <
(''< =
_context''= E
)''E F
;''F G
}(( 
return** 
(** 
IRepository** 
<**  
TEntity**  '
>**' (
)**( )
repositories**) 5
[**5 6
type**6 :
]**: ;
;**; <
}++ 	
public33 
int33 
ExecuteSqlCommand33 $
(33$ %
string33% +
sql33, /
,33/ 0
params331 7
object338 >
[33> ?
]33? @

parameters33A K
)33K L
=>33M O
_context33P X
.33X Y
Database33Y a
.33a b
ExecuteSqlRaw33b o
(33o p
sql33p s
,33s t

parameters33u 
)	33 Ä
;
33Ä Å
public<< 

IQueryable<< 
<<< 
TEntity<< !
><<! "
FromSql<<# *
<<<* +
TEntity<<+ 2
><<2 3
(<<3 4
string<<4 :
sql<<; >
,<<> ?
params<<@ F
object<<G M
[<<M N
]<<N O

parameters<<P Z
)<<Z [
where<<\ a
TEntity<<b i
:<<j k
class<<l q
=><<r t
_context<<u }
.<<} ~
Set	<<~ Å
<
<<Å Ç
TEntity
<<Ç â
>
<<â ä
(
<<ä ã
)
<<ã å
.
<<å ç

FromSqlRaw
<<ç ó
(
<<ó ò
sql
<<ò õ
,
<<õ ú

parameters
<<ù ß
)
<<ß ®
;
<<® ©
publicBB 
intBB 
SaveChangesBB 
(BB 
boolBB #
ensureAutoHistoryBB$ 5
=BB6 7
falseBB8 =
)BB= >
{CC 	
returnDD 
_contextDD 
.DD 
SaveChangesDD '
(DD' (
)DD( )
;DD) *
}EE 	
publicLL 
asyncLL 
TaskLL 
<LL 
intLL 
>LL 
SaveChangesAsyncLL /
(LL/ 0
boolLL0 4
ensureAutoHistoryLL5 F
=LLG H
falseLLI N
)LLN O
{MM 	
tryNN 
{OO 
returnPP 
awaitPP 
_contextPP %
.PP% &
SaveChangesAsyncPP& 6
(PP6 7
)PP7 8
;PP8 9
}QQ 
catchRR 
(RR 
	ExceptionRR 
eRR 
)RR 
{SS 
throwTT 
eTT 
;TT 
}UU 
}VV 	
publicXX 
asyncXX 
TaskXX 
<XX 
intXX 
>XX $
SaveChangesWithTranAsyncXX 7
(XX7 8
boolXX8 <
ensureAutoHistoryXX= N
=XXO P
falseXXQ V
)XXV W
{YY 	
intZZ 
retValZZ 
=ZZ 
$numZZ 
;ZZ 
using[[ 
([[ 
var[[  
dbContextTransaction[[ +
=[[, -
_context[[. 6
.[[6 7
Database[[7 ?
.[[? @
BeginTransaction[[@ P
([[P Q
)[[Q R
)[[R S
{\\ 
try]] 
{^^ 
retVal__ 
=__ 
await__ "
_context__# +
.__+ ,
SaveChangesAsync__, <
(__< =
)__= >
;__> ? 
dbContextTransaction`` (
.``( )
Commit``) /
(``/ 0
)``0 1
;``1 2
}aa 
catchbb 
(bb 
	Exceptionbb  
)bb  !
{cc  
dbContextTransactiondd (
.dd( )
Rollbackdd) 1
(dd1 2
)dd2 3
;dd3 4
returnee 
$numee 
;ee 
}ff 
}gg 
returnhh 
retValhh 
;hh 
}ii 	
publicqq 
asyncqq 
Taskqq 
<qq 
intqq 
>qq 
SaveChangesAsyncqq /
(qq/ 0
boolqq0 4
ensureAutoHistoryqq5 F
=qqG H
falseqqI N
,qqN O
paramsqqP V
IUnitOfWorkqqW b
[qqb c
]qqc d
unitOfWorksqqe p
)qqp q
{rr 	
usingtt 
(tt 
vartt 
transactiontt "
=tt# $
_contexttt% -
.tt- .
Databasett. 6
.tt6 7
BeginTransactiontt7 G
(ttG H
)ttH I
)ttI J
{uu 
tryvv 
{ww 
varxx 
countxx 
=xx 
$numxx  !
;xx! "
foreachyy 
(yy 
varyy  

unitOfWorkyy! +
inyy, .
unitOfWorksyy/ :
)yy: ;
{zz 
}~~ 
count
ÄÄ 
+=
ÄÄ 
await
ÄÄ "
SaveChangesAsync
ÄÄ# 3
(
ÄÄ3 4
ensureAutoHistory
ÄÄ4 E
)
ÄÄE F
;
ÄÄF G
transaction
ÇÇ 
.
ÇÇ  
Commit
ÇÇ  &
(
ÇÇ& '
)
ÇÇ' (
;
ÇÇ( )
return
ÑÑ 
count
ÑÑ  
;
ÑÑ  !
}
ÖÖ 
catch
ÜÜ 
(
ÜÜ 
	Exception
ÜÜ  
ex
ÜÜ! #
)
ÜÜ# $
{
áá 
transaction
àà 
.
àà  
Rollback
àà  (
(
àà( )
)
àà) *
;
àà* +
throw
ää 
ex
ää 
;
ää 
}
ãã 
}
åå 
}
çç 	
public
íí 
void
íí 
Dispose
íí 
(
íí 
)
íí 
{
ìì 	
Dispose
îî 
(
îî 
true
îî 
)
îî 
;
îî 
GC
ññ 
.
ññ 
SuppressFinalize
ññ 
(
ññ  
this
ññ  $
)
ññ$ %
;
ññ% &
}
óó 	
	protected
ùù 
virtual
ùù 
void
ùù 
Dispose
ùù &
(
ùù& '
bool
ùù' +
	disposing
ùù, 5
)
ùù5 6
{
ûû 	
if
üü 
(
üü 
!
üü 
disposed
üü 
)
üü 
{
†† 
if
°° 
(
°° 
	disposing
°° 
)
°° 
{
¢¢ 
if
§§ 
(
§§ 
repositories
§§ $
!=
§§% '
null
§§( ,
)
§§, -
{
•• 
repositories
¶¶ $
.
¶¶$ %
Clear
¶¶% *
(
¶¶* +
)
¶¶+ ,
;
¶¶, -
}
ßß 
_context
™™ 
.
™™ 
Dispose
™™ $
(
™™$ %
)
™™% &
;
™™& '
}
´´ 
}
¨¨ 
disposed
ÆÆ 
=
ÆÆ 
true
ÆÆ 
;
ÆÆ 
}
ØØ 	
}
∞∞ 
}±± ∑î
FD:\EltizamLive\Eltizam.Data.DataAccess\DataContext\EltizamDBContext.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
DataContext" -
{ 
public		 

partial		 
class		 
EltizamDBContext		 )
:		* +
	DbContext		, 5
{

 
public 
EltizamDBContext 
(  
)  !
{ 	
} 	
public 
EltizamDBContext 
(  
DbContextOptions  0
<0 1
EltizamDBContext1 A
>A B
optionsC J
)J K
: 
base 
( 
options 
) 
{ 	
} 	
public 
virtual 
DbSet 
< 
ComparableEvidence /
>/ 0
ComparableEvidences1 D
{E F
getG J
;J K
setL O
;O P
}Q R
=S T
nullU Y
!Y Z
;Z [
public 
virtual 
DbSet 
< 
EmailLogHistory ,
>, -
EmailLogHistories. ?
{@ A
getB E
;E F
setG J
;J K
}L M
=N O
nullP T
!T U
;U V
public 
virtual 
DbSet 
< 
MasterAddress *
>* +
MasterAddresses, ;
{< =
get> A
;A B
setC F
;F G
}H I
=J K
nullL P
!P Q
;Q R
public 
virtual 
DbSet 
< 
MasterAmenity *
>* +
MasterAmenities, ;
{< =
get> A
;A B
setC F
;F G
}H I
=J K
nullL P
!P Q
;Q R
public 
virtual 
DbSet 
< 
MasterAuditLog +
>+ ,
MasterAuditLogs- <
{= >
get? B
;B C
setD G
;G H
}I J
=K L
nullM Q
!Q R
;R S
public 
virtual 
DbSet 
< 

MasterCity '
>' (
MasterCities) 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
=D E
nullF J
!J K
;K L
public 
virtual 
DbSet 
< 
MasterClient )
>) *
MasterClients+ 8
{9 :
get; >
;> ?
set@ C
;C D
}E F
=G H
nullI M
!M N
;N O
public 
virtual 
DbSet 
< 
MasterClientContact 0
>0 1 
MasterClientContacts2 F
{G H
getI L
;L M
setN Q
;Q R
}S T
=U V
nullW [
![ \
;\ ]
public 
virtual 
DbSet 
< 
MasterClientType -
>- .
MasterClientTypes/ @
{A B
getC F
;F G
setH K
;K L
}M N
=O P
nullQ U
!U V
;V W
public 
virtual 
DbSet 
< 
MasterConfig )
>) *
MasterConfigs+ 8
{9 :
get; >
;> ?
set@ C
;C D
}E F
=G H
nullI M
!M N
;N O
public 
virtual 
DbSet 
< 
MasterContact *
>* +
MasterContacts, :
{; <
get= @
;@ A
setB E
;E F
}G H
=I J
nullK O
!O P
;P Q
public 
virtual 
DbSet 
< 
MasterCountry *
>* +
MasterCountries, ;
{< =
get> A
;A B
setC F
;F G
}H I
=J K
nullL P
!P Q
;Q R
public   
virtual   
DbSet   
<   
MasterCurrency   +
>  + ,
MasterCurrencies  - =
{  > ?
get  @ C
;  C D
set  E H
;  H I
}  J K
=  L M
null  N R
!  R S
;  S T
public!! 
virtual!! 
DbSet!! 
<!! 
MasterDepartment!! -
>!!- .
MasterDepartments!!/ @
{!!A B
get!!C F
;!!F G
set!!H K
;!!K L
}!!M N
=!!O P
null!!Q U
!!!U V
;!!V W
public"" 
virtual"" 
DbSet"" 
<"" 
MasterDesignation"" .
>"". /
MasterDesignations""0 B
{""C D
get""E H
;""H I
set""J M
;""M N
}""O P
=""Q R
null""S W
!""W X
;""X Y
public## 
virtual## 
DbSet## 
<## 
MasterDictionary## -
>##- .
MasterDictionaries##/ A
{##B C
get##D G
;##G H
set##I L
;##L M
}##N O
=##P Q
null##R V
!##V W
;##W X
public$$ 
virtual$$ 
DbSet$$ 
<$$ "
MasterDictionaryDetail$$ 3
>$$3 4#
MasterDictionaryDetails$$5 L
{$$M N
get$$O R
;$$R S
set$$T W
;$$W X
}$$Y Z
=$$[ \
null$$] a
!$$a b
;$$b c
public%% 
virtual%% 
DbSet%% 
<%% 
MasterDocument%% +
>%%+ ,
MasterDocuments%%- <
{%%= >
get%%? B
;%%B C
set%%D G
;%%G H
}%%I J
=%%K L
null%%M Q
!%%Q R
;%%R S
public&& 
virtual&& 
DbSet&& 
<&& 
MasterException&& ,
>&&, -
MasterExceptions&&. >
{&&? @
get&&A D
;&&D E
set&&F I
;&&I J
}&&K L
=&&M N
null&&O S
!&&S T
;&&T U
public'' 
virtual'' 
DbSet'' 
<'' 
MasterLocation'' +
>''+ ,
MasterLocations''- <
{''= >
get''? B
;''B C
set''D G
;''G H
}''I J
=''K L
null''M Q
!''Q R
;''R S
public(( 
virtual(( 
DbSet(( 
<(( 
MasterModule(( )
>(() *
MasterModules((+ 8
{((9 :
get((; >
;((> ?
set((@ C
;((C D
}((E F
=((G H
null((I M
!((M N
;((N O
public)) 
virtual)) 
DbSet)) 
<)) 
MasterNotification)) /
>))/ 0
MasterNotifications))1 D
{))E F
get))G J
;))J K
set))L O
;))O P
}))Q R
=))S T
null))U Y
!))Y Z
;))Z [
public** 
virtual** 
DbSet** 
<** 
MasterOwnershipType** 0
>**0 1 
MasterOwnershipTypes**2 F
{**G H
get**I L
;**L M
set**N Q
;**Q R
}**S T
=**U V
null**W [
!**[ \
;**\ ]
public++ 
virtual++ 
DbSet++ 
<++ 
MasterProperty++ +
>+++ ,
MasterProperties++- =
{++> ?
get++@ C
;++C D
set++E H
;++H I
}++J K
=++L M
null++N R
!++R S
;++S T
public,, 
virtual,, 
DbSet,, 
<,, !
MasterPropertyAmenity,, 2
>,,2 3#
MasterPropertyAmenities,,4 K
{,,L M
get,,N Q
;,,Q R
set,,S V
;,,V W
},,X Y
=,,Z [
null,,\ `
!,,` a
;,,a b
public-- 
virtual-- 
DbSet-- 
<-- "
MasterPropertyLocation-- 3
>--3 4#
MasterPropertyLocations--5 L
{--M N
get--O R
;--R S
set--T W
;--W X
}--Y Z
=--[ \
null--] a
!--a b
;--b c
public.. 
virtual.. 
DbSet.. 
<.. !
MasterPropertySubType.. 2
>..2 3"
MasterPropertySubTypes..4 J
{..K L
get..M P
;..P Q
set..R U
;..U V
}..W X
=..Y Z
null..[ _
!.._ `
;..` a
public// 
virtual// 
DbSet// 
<// 
MasterPropertyType// /
>/// 0
MasterPropertyTypes//1 D
{//E F
get//G J
;//J K
set//L O
;//O P
}//Q R
=//S T
null//U Y
!//Y Z
;//Z [
public00 
virtual00 
DbSet00 
<00 
MasterQualification00 0
>000 1 
MasterQualifications002 F
{00G H
get00I L
;00L M
set00N Q
;00Q R
}00S T
=00U V
null00W [
!00[ \
;00\ ]
public11 
virtual11 
DbSet11 
<11 
MasterResourceType11 /
>11/ 0
MasterResourceTypes111 D
{11E F
get11G J
;11J K
set11L O
;11O P
}11Q R
=11S T
null11U Y
!11Y Z
;11Z [
public22 
virtual22 
DbSet22 
<22 

MasterRole22 '
>22' (
MasterRoles22) 4
{225 6
get227 :
;22: ;
set22< ?
;22? @
}22A B
=22C D
null22E I
!22I J
;22J K
public33 
virtual33 
DbSet33 
<33 &
MasterRoleModulePermission33 7
>337 8'
MasterRoleModulePermissions339 T
{33U V
get33W Z
;33Z [
set33\ _
;33_ `
}33a b
=33c d
null33e i
!33i j
;33j k
public44 
virtual44 
DbSet44 
<44 
MasterState44 (
>44( )
MasterStates44* 6
{447 8
get449 <
;44< =
set44> A
;44A B
}44C D
=44E F
null44G K
!44K L
;44L M
public55 
virtual55 
DbSet55 
<55 
MasterSubModule55 ,
>55, -
MasterSubModules55. >
{55? @
get55A D
;55D E
set55F I
;55I J
}55K L
=55M N
null55O S
!55S T
;55T U
public66 
virtual66 
DbSet66 
<66 

MasterUser66 '
>66' (
MasterUsers66) 4
{665 6
get667 :
;66: ;
set66< ?
;66? @
}66A B
=66C D
null66E I
!66I J
;66J K
public77 
virtual77 
DbSet77 
<77 
MasterUserAddress77 .
>77. /
MasterUserAddresses770 C
{77D E
get77F I
;77I J
set77K N
;77N O
}77P Q
=77R S
null77T X
!77X Y
;77Y Z
public88 
virtual88 
DbSet88 
<88 
MasterUserContact88 .
>88. /
MasterUserContacts880 B
{88C D
get88E H
;88H I
set88J M
;88M N
}88O P
=88Q R
null88S W
!88W X
;88X Y
public99 
virtual99 
DbSet99 
<99 
MasterValuationFee99 /
>99/ 0
MasterValuationFees991 D
{99E F
get99G J
;99J K
set99L O
;99O P
}99Q R
=99S T
null99U Y
!99Y Z
;99Z [
public:: 
virtual:: 
DbSet:: 
<:: "
MasterValuationFeeType:: 3
>::3 4#
MasterValuationFeeTypes::5 L
{::M N
get::O R
;::R S
set::T W
;::W X
}::Y Z
=::[ \
null::] a
!::a b
;::b c
public;; 
virtual;; 
DbSet;; 
<;; /
#MasterValuationRequestApproverLevel;; @
>;;@ A0
$MasterValuationRequestApproverLevels;;B f
{;;g h
get;;i l
;;;l m
set;;n q
;;;q r
};;s t
=;;u v
null;;w {
!;;{ |
;;;| }
public<< 
virtual<< 
DbSet<< 
<<< *
MasterValuationRequestVendorDd<< ;
><<; <+
MasterValuationRequestVendorDds<<= \
{<<] ^
get<<_ b
;<<b c
set<<d g
;<<g h
}<<i j
=<<k l
null<<m q
!<<q r
;<<r s
public== 
virtual== 
DbSet== 
<== !
MasterValuationStatus== 2
>==2 3#
MasterValuationStatuses==4 K
{==L M
get==N Q
;==Q R
set==S V
;==V W
}==X Y
===Z [
null==\ `
!==` a
;==a b
public>> 
virtual>> 
DbSet>> 
<>> *
MasterValuationStatus202401101>> ;
>>>; <+
MasterValuationStatus202401101s>>= \
{>>] ^
get>>_ b
;>>b c
set>>d g
;>>g h
}>>i j
=>>k l
null>>m q
!>>q r
;>>r s
public?? 
virtual?? 
DbSet?? 
<?? *
MasterValuationStatus202401102?? ;
>??; <+
MasterValuationStatus202401102s??= \
{??] ^
get??_ b
;??b c
set??d g
;??g h
}??i j
=??k l
null??m q
!??q r
;??r s
public@@ 
virtual@@ 
DbSet@@ 
<@@ *
MasterValuationStatus202401103@@ ;
>@@; <+
MasterValuationStatus202401103s@@= \
{@@] ^
get@@_ b
;@@b c
set@@d g
;@@g h
}@@i j
=@@k l
null@@m q
!@@q r
;@@r s
publicAA 
virtualAA 
DbSetAA 
<AA #
MasterValuationStatusDdAA 4
>AA4 5$
MasterValuationStatusDdsAA6 N
{AAO P
getAAQ T
;AAT U
setAAV Y
;AAY Z
}AA[ \
=AA] ^
nullAA_ c
!AAc d
;AAd e
publicBB 
virtualBB 
DbSetBB 
<BB 
MasterVendorBB )
>BB) *
MasterVendorsBB+ 8
{BB9 :
getBB; >
;BB> ?
setBB@ C
;BBC D
}BBE F
=BBG H
nullBBI M
!BBM N
;BBN O
publicCC 
virtualCC 
DbSetCC 
<CC 
MasterVendorDdCC +
>CC+ ,
MasterVendorDdsCC- <
{CC= >
getCC? B
;CCB C
setCCD G
;CCG H
}CCI J
=CCK L
nullCCM Q
!CCQ R
;CCR S
publicDD 
virtualDD 
DbSetDD 
<DD 
SiteDescriptionDD ,
>DD, -
SiteDescriptionsDD. >
{DD? @
getDDA D
;DDD E
setDDF I
;DDI J
}DDK L
=DDM N
nullDDO S
!DDS T
;DDT U
publicEE 
virtualEE 
DbSetEE 
<EE 
ValuationAssesmentEE /
>EE/ 0
ValuationAssesmentsEE1 D
{EEE F
getEEG J
;EEJ K
setEEL O
;EEO P
}EEQ R
=EES T
nullEEU Y
!EEY Z
;EEZ [
publicFF 
virtualFF 
DbSetFF 
<FF '
ValuationComparableEvidenceFF 8
>FF8 9(
ValuationComparableEvidencesFF: V
{FFW X
getFFY \
;FF\ ]
setFF^ a
;FFa b
}FFc d
=FFe f
nullFFg k
!FFk l
;FFl m
publicGG 
virtualGG 
DbSetGG 
<GG 
ValuationInvoiceGG -
>GG- .
ValuationInvoicesGG/ @
{GGA B
getGGC F
;GGF G
setGGH K
;GGK L
}GGM N
=GGO P
nullGGQ U
!GGU V
;GGV W
publicHH 
virtualHH 
DbSetHH 
<HH 
ValuationPaymentHH -
>HH- .
ValuationPaymentsHH/ @
{HHA B
getHHC F
;HHF G
setHHH K
;HHK L
}HHM N
=HHO P
nullHHQ U
!HHU V
;HHV W
publicII 
virtualII 
DbSetII 
<II #
ValuationPaymentInvoiceII 4
>II4 5$
ValuationPaymentInvoicesII6 N
{IIO P
getIIQ T
;IIT U
setIIV Y
;IIY Z
}II[ \
=II] ^
nullII_ c
!IIc d
;IId e
publicJJ 
virtualJJ 
DbSetJJ 
<JJ &
ValuationPaymentInvoiceMapJJ 7
>JJ7 8'
ValuationPaymentInvoiceMapsJJ9 T
{JJU V
getJJW Z
;JJZ [
setJJ\ _
;JJ_ `
}JJa b
=JJc d
nullJJe i
!JJi j
;JJj k
publicKK 
virtualKK 
DbSetKK 
<KK 
ValuationQuotationKK /
>KK/ 0
ValuationQuotationsKK1 D
{KKE F
getKKG J
;KKJ K
setKKL O
;KKO P
}KKQ R
=KKS T
nullKKU Y
!KKY Z
;KKZ [
publicLL 
virtualLL 
DbSetLL 
<LL 
ValuationRequestLL -
>LL- .
ValuationRequestsLL/ @
{LLA B
getLLC F
;LLF G
setLLH K
;LLK L
}LLM N
=LLO P
nullLLQ U
!LLU V
;LLV W
publicMM 
virtualMM 
DbSetMM 
<MM )
ValuationRequestApproverLevelMM :
>MM: ;*
ValuationRequestApproverLevelsMM< Z
{MM[ \
getMM] `
;MM` a
setMMb e
;MMe f
}MMg h
=MMi j
nullMMk o
!MMo p
;MMp q
publicNN 
virtualNN 
DbSetNN 
<NN )
ValuationRequestStatusHistoryNN :
>NN: ;+
ValuationRequestStatusHistoriesNN< [
{NN\ ]
getNN^ a
;NNa b
setNNc f
;NNf g
}NNh i
=NNj k
nullNNl p
!NNp q
;NNq r
publicOO 
virtualOO 
DbSetOO 
<OO $
ValuationSiteDescriptionOO 5
>OO5 6%
ValuationSiteDescriptionsOO7 P
{OOQ R
getOOS V
;OOV W
setOOX [
;OO[ \
}OO] ^
=OO_ `
nullOOa e
!OOe f
;OOf g
publicPP 
virtualPP 
DbSetPP 
<PP 
VwClientPP %
>PP% &
	VwClientsPP' 0
{PP1 2
getPP3 6
;PP6 7
setPP8 ;
;PP; <
}PP= >
=PP? @
nullPPA E
!PPE F
;PPF G
publicQQ 
virtualQQ 
DbSetQQ 
<QQ 
VwDictonaryChildQQ -
>QQ- .
VwDictonaryChildrenQQ/ B
{QQC D
getQQE H
;QQH I
setQQJ M
;QQM N
}QQO P
=QQQ R
nullQQS W
!QQW X
;QQX Y
publicRR 
virtualRR 
DbSetRR 
<RR 

VwPropertyRR '
>RR' (
VwPropertiesRR) 5
{RR6 7
getRR8 ;
;RR; <
setRR= @
;RR@ A
}RRB C
=RRD E
nullRRF J
!RRJ K
;RRK L
publicSS 
virtualSS 
DbSetSS 
<SS 
VwPropertyLocationSS /
>SS/ 0
VwPropertyLocationsSS1 D
{SSE F
getSSG J
;SSJ K
setSSL O
;SSO P
}SSQ R
=SSS T
nullSSU Y
!SSY Z
;SSZ [
publicTT 
virtualTT 
DbSetTT 
<TT 
VwUserTT #
>TT# $
VwUsersTT% ,
{TT- .
getTT/ 2
;TT2 3
setTT4 7
;TT7 8
}TT9 :
=TT; <
nullTT= A
!TTA B
;TTB C
publicUU 
virtualUU 
DbSetUU 
<UU 
VwValuationRequestUU /
>UU/ 0
VwValuationRequestsUU1 D
{UUE F
getUUG J
;UUJ K
setUUL O
;UUO P
}UUQ R
=UUS T
nullUUU Y
!UUY Z
;UUZ [
publicVV 
virtualVV 
DbSetVV 
<VV $
VwValuationRequestDetailVV 5
>VV5 6%
VwValuationRequestDetailsVV7 P
{VVQ R
getVVS V
;VVV W
setVVX [
;VV[ \
}VV] ^
=VV_ `
nullVVa e
!VVe f
;VVf g
	protectedXX 
overrideXX 
voidXX 
OnConfiguringXX  -
(XX- .#
DbContextOptionsBuilderXX. E
optionsBuilderXXF T
)XXT U
{YY 	
ifZZ 
(ZZ 
!ZZ 
optionsBuilderZZ 
.ZZ  
IsConfiguredZZ  ,
)ZZ, -
{[[ 
optionsBuilder]] 
.]] 
UseSqlServer]] +
(]]+ ,
$str	]], £
)
]]£ §
;
]]§ •
}^^ 
}__ 	
	protectedaa 
overrideaa 
voidaa 
OnModelCreatingaa  /
(aa/ 0
ModelBuilderaa0 <
modelBuilderaa= I
)aaI J
{bb 	
modelBuildercc 
.cc 
HasDefaultSchemacc )
(cc) *
$strcc* :
)cc: ;
;cc; <
modelBuilderee 
.ee 
Entityee 
<ee  
ComparableEvidenceee  2
>ee2 3
(ee3 4
entityee4 :
=>ee; =
{ff 
entitygg 
.gg 
ToTablegg 
(gg 
$strgg 4
,gg4 5
$strgg6 ;
)gg; <
;gg< =
entityii 
.ii 
Propertyii 
(ii  
eii  !
=>ii" $
eii% &
.ii& '
AddtionalCommentsii' 8
)ii8 9
.ii9 :
HasMaxLengthii: F
(iiF G
$numiiG I
)iiI J
;iiJ K
entitykk 
.kk 
Propertykk 
(kk  
ekk  !
=>kk" $
ekk% &
.kk& '
CreatedDatekk' 2
)kk2 3
.kk3 4
HasColumnTypekk4 A
(kkA B
$strkkB L
)kkL M
;kkM N
entitymm 
.mm 
Propertymm 
(mm  
emm  !
=>mm" $
emm% &
.mm& '
ModifiedDatemm' 3
)mm3 4
.mm4 5
HasColumnTypemm5 B
(mmB C
$strmmC M
)mmM N
;mmN O
entityoo 
.oo 
Propertyoo 
(oo  
eoo  !
=>oo" $
eoo% &
.oo& '
Priceoo' ,
)oo, -
.oo- .
HasColumnTypeoo. ;
(oo; <
$stroo< L
)ooL M
;ooM N
entityqq 
.qq 
Propertyqq 
(qq  
eqq  !
=>qq" $
eqq% &
.qq& '
RateSqFtqq' /
)qq/ 0
.qq0 1
HasColumnTypeqq1 >
(qq> ?
$strqq? O
)qqO P
;qqP Q
entityss 
.ss 
Propertyss 
(ss  
ess  !
=>ss" $
ess% &
.ss& '
Remarksss' .
)ss. /
.ss/ 0
HasMaxLengthss0 <
(ss< =
$numss= @
)ss@ A
;ssA B
entityuu 
.uu 
Propertyuu 
(uu  
euu  !
=>uu" $
euu% &
.uu& '
Typeuu' +
)uu+ ,
.uu, -
HasMaxLengthuu- 9
(uu9 :
$numuu: <
)uu< =
;uu= >
entityww 
.ww 
HasOneww 
(ww 
dww 
=>ww  "
dww# $
.ww$ %
Requestww% ,
)ww, -
.xx 
WithManyxx 
(xx 
pxx 
=>xx  "
pxx# $
.xx$ %
ComparableEvidencesxx% 8
)xx8 9
.yy 
HasForeignKeyyy "
(yy" #
dyy# $
=>yy% '
dyy( )
.yy) *
	RequestIdyy* 3
)yy3 4
.zz 
HasConstraintNamezz &
(zz& '
$strzz' P
)zzP Q
;zzQ R
}{{ 
){{ 
;{{ 
modelBuilder}} 
.}} 
Entity}} 
<}}  
EmailLogHistory}}  /
>}}/ 0
(}}0 1
entity}}1 7
=>}}8 :
{~~ 
entity 
. 
ToTable 
( 
$str 0
,0 1
$str2 7
)7 8
;8 9
entity
ÅÅ 
.
ÅÅ 
HasIndex
ÅÅ 
(
ÅÅ  
e
ÅÅ  !
=>
ÅÅ" $
e
ÅÅ% &
.
ÅÅ& '
Id
ÅÅ' )
,
ÅÅ) *
$str
ÅÅ+ <
)
ÅÅ< =
.
ÇÇ 
IsUnique
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ  
entity
ÑÑ 
.
ÑÑ 
Property
ÑÑ 
(
ÑÑ  
e
ÑÑ  !
=>
ÑÑ" $
e
ÑÑ% &
.
ÑÑ& '

BccAddress
ÑÑ' 1
)
ÑÑ1 2
.
ÖÖ 
HasMaxLength
ÖÖ !
(
ÖÖ! "
$num
ÖÖ" %
)
ÖÖ% &
.
ÜÜ 
	IsUnicode
ÜÜ 
(
ÜÜ 
false
ÜÜ $
)
ÜÜ$ %
;
ÜÜ% &
entity
àà 
.
àà 
Property
àà 
(
àà  
e
àà  !
=>
àà" $
e
àà% &
.
àà& '
Body
àà' +
)
àà+ ,
.
àà, -
	IsUnicode
àà- 6
(
àà6 7
false
àà7 <
)
àà< =
;
àà= >
entity
ää 
.
ää 
Property
ää 
(
ää  
e
ää  !
=>
ää" $
e
ää% &
.
ää& '
	Ccaddress
ää' 0
)
ää0 1
.
ãã 
HasMaxLength
ãã !
(
ãã! "
$num
ãã" %
)
ãã% &
.
åå 
	IsUnicode
åå 
(
åå 
false
åå $
)
åå$ %
.
çç 
HasColumnName
çç "
(
çç" #
$str
çç# .
)
çç. /
;
çç/ 0
entity
èè 
.
èè 
Property
èè 
(
èè  
e
èè  !
=>
èè" $
e
èè% &
.
èè& '
CreatedDate
èè' 2
)
èè2 3
.
èè3 4
HasColumnType
èè4 A
(
èèA B
$str
èèB L
)
èèL M
;
èèM N
entity
ëë 
.
ëë 
Property
ëë 
(
ëë  
e
ëë  !
=>
ëë" $
e
ëë% &
.
ëë& '
EmailResponse
ëë' 4
)
ëë4 5
.
ëë5 6
	IsUnicode
ëë6 ?
(
ëë? @
false
ëë@ E
)
ëëE F
;
ëëF G
entity
ìì 
.
ìì 
Property
ìì 
(
ìì  
e
ìì  !
=>
ìì" $
e
ìì% &
.
ìì& '
FromAddress
ìì' 2
)
ìì2 3
.
îî 
HasMaxLength
îî !
(
îî! "
$num
îî" %
)
îî% &
.
ïï 
	IsUnicode
ïï 
(
ïï 
false
ïï $
)
ïï$ %
;
ïï% &
entity
óó 
.
óó 
Property
óó 
(
óó  
e
óó  !
=>
óó" $
e
óó% &
.
óó& '
ModifiedDate
óó' 3
)
óó3 4
.
óó4 5
HasColumnType
óó5 B
(
óóB C
$str
óóC M
)
óóM N
;
óóN O
entity
ôô 
.
ôô 
Property
ôô 
(
ôô  
e
ôô  !
=>
ôô" $
e
ôô% &
.
ôô& '
Subject
ôô' .
)
ôô. /
.
öö 
HasMaxLength
öö !
(
öö! "
$num
öö" %
)
öö% &
.
õõ 
	IsUnicode
õõ 
(
õõ 
false
õõ $
)
õõ$ %
;
õõ% &
entity
ùù 
.
ùù 
Property
ùù 
(
ùù  
e
ùù  !
=>
ùù" $
e
ùù% &
.
ùù& '
	ToAddress
ùù' 0
)
ùù0 1
.
ûû 
HasMaxLength
ûû !
(
ûû! "
$num
ûû" %
)
ûû% &
.
üü 
	IsUnicode
üü 
(
üü 
false
üü $
)
üü$ %
;
üü% &
}
†† 
)
†† 
;
†† 
modelBuilder
¢¢ 
.
¢¢ 
Entity
¢¢ 
<
¢¢  
MasterAddress
¢¢  -
>
¢¢- .
(
¢¢. /
entity
¢¢/ 5
=>
¢¢6 8
{
££ 
entity
§§ 
.
§§ 
ToTable
§§ 
(
§§ 
$str
§§ /
,
§§/ 0
$str
§§1 6
)
§§6 7
;
§§7 8
entity
¶¶ 
.
¶¶ 
Property
¶¶ 
(
¶¶  
e
¶¶  !
=>
¶¶" $
e
¶¶% &
.
¶¶& '
Address1
¶¶' /
)
¶¶/ 0
.
ßß 
HasMaxLength
ßß !
(
ßß! "
$num
ßß" %
)
ßß% &
.
®® 
	IsUnicode
®® 
(
®® 
false
®® $
)
®®$ %
;
®®% &
entity
™™ 
.
™™ 
Property
™™ 
(
™™  
e
™™  !
=>
™™" $
e
™™% &
.
™™& '
Address2
™™' /
)
™™/ 0
.
´´ 
HasMaxLength
´´ !
(
´´! "
$num
´´" %
)
´´% &
.
¨¨ 
	IsUnicode
¨¨ 
(
¨¨ 
false
¨¨ $
)
¨¨$ %
;
¨¨% &
entity
ÆÆ 
.
ÆÆ 
Property
ÆÆ 
(
ÆÆ  
e
ÆÆ  !
=>
ÆÆ" $
e
ÆÆ% &
.
ÆÆ& '
Address3
ÆÆ' /
)
ÆÆ/ 0
.
ØØ 
HasMaxLength
ØØ !
(
ØØ! "
$num
ØØ" %
)
ØØ% &
.
∞∞ 
	IsUnicode
∞∞ 
(
∞∞ 
false
∞∞ $
)
∞∞$ %
;
∞∞% &
entity
≤≤ 
.
≤≤ 
Property
≤≤ 
(
≤≤  
e
≤≤  !
=>
≤≤" $
e
≤≤% &
.
≤≤& '
AlternateEmail
≤≤' 5
)
≤≤5 6
.
≥≥ 
HasMaxLength
≥≥ !
(
≥≥! "
$num
≥≥" %
)
≥≥% &
.
¥¥ 
	IsUnicode
¥¥ 
(
¥¥ 
false
¥¥ $
)
¥¥$ %
;
¥¥% &
entity
∂∂ 
.
∂∂ 
Property
∂∂ 
(
∂∂  
e
∂∂  !
=>
∂∂" $
e
∂∂% &
.
∂∂& '
AlternatePhone
∂∂' 5
)
∂∂5 6
.
∑∑ 
HasMaxLength
∑∑ !
(
∑∑! "
$num
∑∑" $
)
∑∑$ %
.
∏∏ 
	IsUnicode
∏∏ 
(
∏∏ 
false
∏∏ $
)
∏∏$ %
;
∏∏% &
entity
∫∫ 
.
∫∫ 
Property
∫∫ 
(
∫∫  
e
∫∫  !
=>
∫∫" $
e
∫∫% &
.
∫∫& '
AlternatePhoneExt
∫∫' 8
)
∫∫8 9
.
ªª 
HasMaxLength
ªª !
(
ªª! "
$num
ªª" $
)
ªª$ %
.
ºº 
	IsUnicode
ºº 
(
ºº 
false
ºº $
)
ºº$ %
;
ºº% &
entity
ææ 
.
ææ 
Property
ææ 
(
ææ  
e
ææ  !
=>
ææ" $
e
ææ% &
.
ææ& '
CreatedDate
ææ' 2
)
ææ2 3
.
ææ3 4
HasColumnType
ææ4 A
(
ææA B
$str
ææB L
)
ææL M
;
ææM N
entity
¿¿ 
.
¿¿ 
Property
¿¿ 
(
¿¿  
e
¿¿  !
=>
¿¿" $
e
¿¿% &
.
¿¿& '
Email
¿¿' ,
)
¿¿, -
.
¡¡ 
HasMaxLength
¡¡ !
(
¡¡! "
$num
¡¡" %
)
¡¡% &
.
¬¬ 
	IsUnicode
¬¬ 
(
¬¬ 
false
¬¬ $
)
¬¬$ %
;
¬¬% &
entity
ƒƒ 
.
ƒƒ 
Property
ƒƒ 
(
ƒƒ  
e
ƒƒ  !
=>
ƒƒ" $
e
ƒƒ% &
.
ƒƒ& '
Landlinephone
ƒƒ' 4
)
ƒƒ4 5
.
≈≈ 
HasMaxLength
≈≈ !
(
≈≈! "
$num
≈≈" $
)
≈≈$ %
.
∆∆ 
	IsUnicode
∆∆ 
(
∆∆ 
false
∆∆ $
)
∆∆$ %
;
∆∆% &
entity
»» 
.
»» 
Property
»» 
(
»»  
e
»»  !
=>
»»" $
e
»»% &
.
»»& '
Landmark
»»' /
)
»»/ 0
.
…… 
HasMaxLength
…… !
(
……! "
$num
……" %
)
……% &
.
   
	IsUnicode
   
(
   
false
   $
)
  $ %
;
  % &
entity
ÃÃ 
.
ÃÃ 
Property
ÃÃ 
(
ÃÃ  
e
ÃÃ  !
=>
ÃÃ" $
e
ÃÃ% &
.
ÃÃ& '
ModifiedDate
ÃÃ' 3
)
ÃÃ3 4
.
ÃÃ4 5
HasColumnType
ÃÃ5 B
(
ÃÃB C
$str
ÃÃC M
)
ÃÃM N
;
ÃÃN O
entity
ŒŒ 
.
ŒŒ 
Property
ŒŒ 
(
ŒŒ  
e
ŒŒ  !
=>
ŒŒ" $
e
ŒŒ% &
.
ŒŒ& '
Phone
ŒŒ' ,
)
ŒŒ, -
.
œœ 
HasMaxLength
œœ !
(
œœ! "
$num
œœ" $
)
œœ$ %
.
–– 
	IsUnicode
–– 
(
–– 
false
–– $
)
––$ %
;
––% &
entity
““ 
.
““ 
Property
““ 
(
““  
e
““  !
=>
““" $
e
““% &
.
““& '
PhoneExt
““' /
)
““/ 0
.
”” 
HasMaxLength
”” !
(
””! "
$num
””" $
)
””$ %
.
‘‘ 
	IsUnicode
‘‘ 
(
‘‘ 
false
‘‘ $
)
‘‘$ %
;
‘‘% &
entity
÷÷ 
.
÷÷ 
Property
÷÷ 
(
÷÷  
e
÷÷  !
=>
÷÷" $
e
÷÷% &
.
÷÷& '
PinNo
÷÷' ,
)
÷÷, -
.
◊◊ 
HasMaxLength
◊◊ !
(
◊◊! "
$num
◊◊" $
)
◊◊$ %
.
ÿÿ 
	IsUnicode
ÿÿ 
(
ÿÿ 
false
ÿÿ $
)
ÿÿ$ %
;
ÿÿ% &
entity
⁄⁄ 
.
⁄⁄ 
Property
⁄⁄ 
(
⁄⁄  
e
⁄⁄  !
=>
⁄⁄" $
e
⁄⁄% &
.
⁄⁄& '
	TableName
⁄⁄' 0
)
⁄⁄0 1
.
€€ 
HasMaxLength
€€ !
(
€€! "
$num
€€" %
)
€€% &
.
‹‹ 
	IsUnicode
‹‹ 
(
‹‹ 
false
‹‹ $
)
‹‹$ %
;
‹‹% &
entity
ﬁﬁ 
.
ﬁﬁ 
Property
ﬁﬁ 
(
ﬁﬁ  
e
ﬁﬁ  !
=>
ﬁﬁ" $
e
ﬁﬁ% &
.
ﬁﬁ& '
Zone
ﬁﬁ' +
)
ﬁﬁ+ ,
.
ﬂﬂ 
HasMaxLength
ﬂﬂ !
(
ﬂﬂ! "
$num
ﬂﬂ" %
)
ﬂﬂ% &
.
‡‡ 
	IsUnicode
‡‡ 
(
‡‡ 
false
‡‡ $
)
‡‡$ %
;
‡‡% &
entity
‚‚ 
.
‚‚ 
HasOne
‚‚ 
(
‚‚ 
d
‚‚ 
=>
‚‚  "
d
‚‚# $
.
‚‚$ %
City
‚‚% )
)
‚‚) *
.
„„ 
WithMany
„„ 
(
„„ 
p
„„ 
=>
„„  "
p
„„# $
.
„„$ %
MasterAddresses
„„% 4
)
„„4 5
.
‰‰ 
HasForeignKey
‰‰ "
(
‰‰" #
d
‰‰# $
=>
‰‰% '
d
‰‰( )
.
‰‰) *
CityId
‰‰* 0
)
‰‰0 1
.
ÂÂ 
HasConstraintName
ÂÂ &
(
ÂÂ& '
$str
ÂÂ' F
)
ÂÂF G
;
ÂÂG H
}
ÊÊ 
)
ÊÊ 
;
ÊÊ 
modelBuilder
ËË 
.
ËË 
Entity
ËË 
<
ËË  
MasterAmenity
ËË  -
>
ËË- .
(
ËË. /
entity
ËË/ 5
=>
ËË6 8
{
ÈÈ 
entity
ÍÍ 
.
ÍÍ 
ToTable
ÍÍ 
(
ÍÍ 
$str
ÍÍ /
,
ÍÍ/ 0
$str
ÍÍ1 6
)
ÍÍ6 7
;
ÍÍ7 8
entity
ÏÏ 
.
ÏÏ 
Property
ÏÏ 
(
ÏÏ  
e
ÏÏ  !
=>
ÏÏ" $
e
ÏÏ% &
.
ÏÏ& '
AmenityName
ÏÏ' 2
)
ÏÏ2 3
.
ÌÌ 
HasMaxLength
ÌÌ !
(
ÌÌ! "
$num
ÌÌ" &
)
ÌÌ& '
.
ÓÓ 
	IsUnicode
ÓÓ 
(
ÓÓ 
false
ÓÓ $
)
ÓÓ$ %
;
ÓÓ% &
entity
 
.
 
Property
 
(
  
e
  !
=>
" $
e
% &
.
& '
CreatedDate
' 2
)
2 3
.
3 4
HasColumnType
4 A
(
A B
$str
B L
)
L M
;
M N
entity
ÚÚ 
.
ÚÚ 
Property
ÚÚ 
(
ÚÚ  
e
ÚÚ  !
=>
ÚÚ" $
e
ÚÚ% &
.
ÚÚ& '
Icon
ÚÚ' +
)
ÚÚ+ ,
.
ÛÛ 
HasMaxLength
ÛÛ !
(
ÛÛ! "
$num
ÛÛ" %
)
ÛÛ% &
.
ÙÙ 
	IsUnicode
ÙÙ 
(
ÙÙ 
false
ÙÙ $
)
ÙÙ$ %
;
ÙÙ% &
entity
ˆˆ 
.
ˆˆ 
Property
ˆˆ 
(
ˆˆ  
e
ˆˆ  !
=>
ˆˆ" $
e
ˆˆ% &
.
ˆˆ& '
ModifiedDate
ˆˆ' 3
)
ˆˆ3 4
.
ˆˆ4 5
HasColumnType
ˆˆ5 B
(
ˆˆB C
$str
ˆˆC M
)
ˆˆM N
;
ˆˆN O
}
˜˜ 
)
˜˜ 
;
˜˜ 
modelBuilder
˘˘ 
.
˘˘ 
Entity
˘˘ 
<
˘˘  
MasterAuditLog
˘˘  .
>
˘˘. /
(
˘˘/ 0
entity
˘˘0 6
=>
˘˘7 9
{
˙˙ 
entity
˚˚ 
.
˚˚ 
ToTable
˚˚ 
(
˚˚ 
$str
˚˚ 0
,
˚˚0 1
$str
˚˚2 7
)
˚˚7 8
;
˚˚8 9
entity
˝˝ 
.
˝˝ 
Property
˝˝ 
(
˝˝  
e
˝˝  !
=>
˝˝" $
e
˝˝% &
.
˝˝& '

ActionType
˝˝' 1
)
˝˝1 2
.
˝˝2 3
HasMaxLength
˝˝3 ?
(
˝˝? @
$num
˝˝@ B
)
˝˝B C
;
˝˝C D
entity
ˇˇ 
.
ˇˇ 
Property
ˇˇ 
(
ˇˇ  
e
ˇˇ  !
=>
ˇˇ" $
e
ˇˇ% &
.
ˇˇ& '
CreatedDate
ˇˇ' 2
)
ˇˇ2 3
.
ˇˇ3 4
HasColumnType
ˇˇ4 A
(
ˇˇA B
$str
ˇˇB L
)
ˇˇL M
;
ˇˇM N
entity
ÅÅ 
.
ÅÅ 
Property
ÅÅ 
(
ÅÅ  
e
ÅÅ  !
=>
ÅÅ" $
e
ÅÅ% &
.
ÅÅ& '
ParentTableName
ÅÅ' 6
)
ÅÅ6 7
.
ÇÇ 
HasMaxLength
ÇÇ !
(
ÇÇ! "
$num
ÇÇ" &
)
ÇÇ& '
.
ÉÉ 
	IsUnicode
ÉÉ 
(
ÉÉ 
false
ÉÉ $
)
ÉÉ$ %
;
ÉÉ% &
entity
ÖÖ 
.
ÖÖ 
Property
ÖÖ 
(
ÖÖ  
e
ÖÖ  !
=>
ÖÖ" $
e
ÖÖ% &
.
ÖÖ& '
	TableName
ÖÖ' 0
)
ÖÖ0 1
.
ÖÖ1 2
HasMaxLength
ÖÖ2 >
(
ÖÖ> ?
$num
ÖÖ? B
)
ÖÖB C
;
ÖÖC D
}
ÜÜ 
)
ÜÜ 
;
ÜÜ 
modelBuilder
àà 
.
àà 
Entity
àà 
<
àà  

MasterCity
àà  *
>
àà* +
(
àà+ ,
entity
àà, 2
=>
àà3 5
{
ââ 
entity
ää 
.
ää 
ToTable
ää 
(
ää 
$str
ää ,
,
ää, -
$str
ää. 3
)
ää3 4
;
ää4 5
entity
åå 
.
åå 
Property
åå 
(
åå  
e
åå  !
=>
åå" $
e
åå% &
.
åå& '
CityName
åå' /
)
åå/ 0
.
çç 
HasMaxLength
çç !
(
çç! "
$num
çç" %
)
çç% &
.
éé 
	IsUnicode
éé 
(
éé 
false
éé $
)
éé$ %
;
éé% &
entity
êê 
.
êê 
Property
êê 
(
êê  
e
êê  !
=>
êê" $
e
êê% &
.
êê& '
CreatedDate
êê' 2
)
êê2 3
.
êê3 4
HasColumnType
êê4 A
(
êêA B
$str
êêB L
)
êêL M
;
êêM N
entity
íí 
.
íí 
Property
íí 
(
íí  
e
íí  !
=>
íí" $
e
íí% &
.
íí& '
ModifiedDate
íí' 3
)
íí3 4
.
íí4 5
HasColumnType
íí5 B
(
ííB C
$str
ííC M
)
ííM N
;
ííN O
entity
îî 
.
îî 
Property
îî 
(
îî  
e
îî  !
=>
îî" $
e
îî% &
.
îî& '
Stdcode
îî' .
)
îî. /
.
ïï 
HasMaxLength
ïï !
(
ïï! "
$num
ïï" $
)
ïï$ %
.
ññ 
	IsUnicode
ññ 
(
ññ 
false
ññ $
)
ññ$ %
.
óó 
HasColumnName
óó "
(
óó" #
$str
óó# ,
)
óó, -
;
óó- .
}
òò 
)
òò 
;
òò 
modelBuilder
öö 
.
öö 
Entity
öö 
<
öö  
MasterClient
öö  ,
>
öö, -
(
öö- .
entity
öö. 4
=>
öö5 7
{
õõ 
entity
úú 
.
úú 
ToTable
úú 
(
úú 
$str
úú .
,
úú. /
$str
úú0 5
)
úú5 6
;
úú6 7
entity
ûû 
.
ûû 
Property
ûû 
(
ûû  
e
ûû  !
=>
ûû" $
e
ûû% &
.
ûû& '

ClientName
ûû' 1
)
ûû1 2
.
üü 
HasMaxLength
üü !
(
üü! "
$num
üü" %
)
üü% &
.
†† 
	IsUnicode
†† 
(
†† 
false
†† $
)
††$ %
.
°° "
HasComputedColumnSql
°° )
(
°°) *
$str
°°* _
,
°°_ `
false
°°a f
)
°°f g
;
°°g h
entity
££ 
.
££ 
Property
££ 
(
££  
e
££  !
=>
££" $
e
££% &
.
££& '
Company
££' .
)
££. /
.
§§ 
HasMaxLength
§§ !
(
§§! "
$num
§§" %
)
§§% &
.
•• 
	IsUnicode
•• 
(
•• 
false
•• $
)
••$ %
;
••% &
entity
ßß 
.
ßß 
Property
ßß 
(
ßß  
e
ßß  !
=>
ßß" $
e
ßß% &
.
ßß& '
CreatedDate
ßß' 2
)
ßß2 3
.
ßß3 4
HasColumnType
ßß4 A
(
ßßA B
$str
ßßB L
)
ßßL M
;
ßßM N
entity
©© 
.
©© 
Property
©© 
(
©©  
e
©©  !
=>
©©" $
e
©©% &
.
©©& '
	FirstName
©©' 0
)
©©0 1
.
™™ 
HasMaxLength
™™ !
(
™™! "
$num
™™" %
)
™™% &
.
´´ 
	IsUnicode
´´ 
(
´´ 
false
´´ $
)
´´$ %
;
´´% &
entity
≠≠ 
.
≠≠ 
Property
≠≠ 
(
≠≠  
e
≠≠  !
=>
≠≠" $
e
≠≠% &
.
≠≠& '
LastName
≠≠' /
)
≠≠/ 0
.
ÆÆ 
HasMaxLength
ÆÆ !
(
ÆÆ! "
$num
ÆÆ" %
)
ÆÆ% &
.
ØØ 
	IsUnicode
ØØ 
(
ØØ 
false
ØØ $
)
ØØ$ %
;
ØØ% &
entity
±± 
.
±± 
Property
±± 
(
±±  
e
±±  !
=>
±±" $
e
±±% &
.
±±& '
LicenseNumber
±±' 4
)
±±4 5
.
≤≤ 
HasMaxLength
≤≤ !
(
≤≤! "
$num
≤≤" %
)
≤≤% &
.
≥≥ 
	IsUnicode
≥≥ 
(
≥≥ 
false
≥≥ $
)
≥≥$ %
;
≥≥% &
entity
µµ 
.
µµ 
Property
µµ 
(
µµ  
e
µµ  !
=>
µµ" $
e
µµ% &
.
µµ& '
Logo
µµ' +
)
µµ+ ,
.
∂∂ 
HasMaxLength
∂∂ !
(
∂∂! "
$num
∂∂" %
)
∂∂% &
.
∑∑ 
	IsUnicode
∑∑ 
(
∑∑ 
false
∑∑ $
)
∑∑$ %
;
∑∑% &
entity
ππ 
.
ππ 
Property
ππ 
(
ππ  
e
ππ  !
=>
ππ" $
e
ππ% &
.
ππ& '

MiddleName
ππ' 1
)
ππ1 2
.
∫∫ 
HasMaxLength
∫∫ !
(
∫∫! "
$num
∫∫" %
)
∫∫% &
.
ªª 
	IsUnicode
ªª 
(
ªª 
false
ªª $
)
ªª$ %
;
ªª% &
entity
ΩΩ 
.
ΩΩ 
Property
ΩΩ 
(
ΩΩ  
e
ΩΩ  !
=>
ΩΩ" $
e
ΩΩ% &
.
ΩΩ& '
ModifiedDate
ΩΩ' 3
)
ΩΩ3 4
.
ΩΩ4 5
HasColumnType
ΩΩ5 B
(
ΩΩB C
$str
ΩΩC M
)
ΩΩM N
;
ΩΩN O
entity
øø 
.
øø 
Property
øø 
(
øø  
e
øø  !
=>
øø" $
e
øø% &
.
øø& '
TrnexpiryDate
øø' 4
)
øø4 5
.
¿¿ 
HasColumnType
¿¿ "
(
¿¿" #
$str
¿¿# )
)
¿¿) *
.
¡¡ 
HasColumnName
¡¡ "
(
¡¡" #
$str
¡¡# 2
)
¡¡2 3
;
¡¡3 4
entity
√√ 
.
√√ 
Property
√√ 
(
√√  
e
√√  !
=>
√√" $
e
√√% &
.
√√& '
	Trnnumber
√√' 0
)
√√0 1
.
ƒƒ 
HasMaxLength
ƒƒ !
(
ƒƒ! "
$num
ƒƒ" %
)
ƒƒ% &
.
≈≈ 
	IsUnicode
≈≈ 
(
≈≈ 
false
≈≈ $
)
≈≈$ %
.
∆∆ 
HasColumnName
∆∆ "
(
∆∆" #
$str
∆∆# .
)
∆∆. /
;
∆∆/ 0
entity
»» 
.
»» 
HasOne
»» 
(
»» 
d
»» 
=>
»»  "
d
»»# $
.
»»$ %

ClientType
»»% /
)
»»/ 0
.
…… 
WithMany
…… 
(
…… 
p
…… 
=>
……  "
p
……# $
.
……$ %
MasterClients
……% 2
)
……2 3
.
   
HasForeignKey
   "
(
  " #
d
  # $
=>
  % '
d
  ( )
.
  ) *
ClientTypeId
  * 6
)
  6 7
.
ÀÀ 
HasConstraintName
ÀÀ &
(
ÀÀ& '
$str
ÀÀ' I
)
ÀÀI J
;
ÀÀJ K
}
ÃÃ 
)
ÃÃ 
;
ÃÃ 
modelBuilder
ŒŒ 
.
ŒŒ 
Entity
ŒŒ 
<
ŒŒ  !
MasterClientContact
ŒŒ  3
>
ŒŒ3 4
(
ŒŒ4 5
entity
ŒŒ5 ;
=>
ŒŒ< >
{
œœ 
entity
–– 
.
–– 
ToTable
–– 
(
–– 
$str
–– 5
,
––5 6
$str
––7 <
)
––< =
;
––= >
entity
““ 
.
““ 
Property
““ 
(
““  
e
““  !
=>
““" $
e
““% &
.
““& '
ContactPerson
““' 4
)
““4 5
.
”” 
HasMaxLength
”” !
(
””! "
$num
””" %
)
””% &
.
‘‘ 
	IsUnicode
‘‘ 
(
‘‘ 
false
‘‘ $
)
‘‘$ %
;
‘‘% &
entity
÷÷ 
.
÷÷ 
Property
÷÷ 
(
÷÷  
e
÷÷  !
=>
÷÷" $
e
÷÷% &
.
÷÷& '

CreateDate
÷÷' 1
)
÷÷1 2
.
÷÷2 3
HasColumnType
÷÷3 @
(
÷÷@ A
$str
÷÷A K
)
÷÷K L
;
÷÷L M
entity
ÿÿ 
.
ÿÿ 
Property
ÿÿ 
(
ÿÿ  
e
ÿÿ  !
=>
ÿÿ" $
e
ÿÿ% &
.
ÿÿ& '

Department
ÿÿ' 1
)
ÿÿ1 2
.
ŸŸ 
HasMaxLength
ŸŸ !
(
ŸŸ! "
$num
ŸŸ" %
)
ŸŸ% &
.
⁄⁄ 
	IsUnicode
⁄⁄ 
(
⁄⁄ 
false
⁄⁄ $
)
⁄⁄$ %
;
⁄⁄% &
entity
‹‹ 
.
‹‹ 
Property
‹‹ 
(
‹‹  
e
‹‹  !
=>
‹‹" $
e
‹‹% &
.
‹‹& '
Designation
‹‹' 2
)
‹‹2 3
.
›› 
HasMaxLength
›› !
(
››! "
$num
››" %
)
››% &
.
ﬁﬁ 
	IsUnicode
ﬁﬁ 
(
ﬁﬁ 
false
ﬁﬁ $
)
ﬁﬁ$ %
;
ﬁﬁ% &
entity
‡‡ 
.
‡‡ 
Property
‡‡ 
(
‡‡  
e
‡‡  !
=>
‡‡" $
e
‡‡% &
.
‡‡& '
Email
‡‡' ,
)
‡‡, -
.
·· 
HasMaxLength
·· !
(
··! "
$num
··" %
)
··% &
.
‚‚ 
	IsUnicode
‚‚ 
(
‚‚ 
false
‚‚ $
)
‚‚$ %
;
‚‚% &
entity
‰‰ 
.
‰‰ 
Property
‰‰ 
(
‰‰  
e
‰‰  !
=>
‰‰" $
e
‰‰% &
.
‰‰& '
ModifiedDate
‰‰' 3
)
‰‰3 4
.
‰‰4 5
HasColumnType
‰‰5 B
(
‰‰B C
$str
‰‰C M
)
‰‰M N
;
‰‰N O
entity
ÊÊ 
.
ÊÊ 
Property
ÊÊ 
(
ÊÊ  
e
ÊÊ  !
=>
ÊÊ" $
e
ÊÊ% &
.
ÊÊ& '
PhoneNumber
ÊÊ' 2
)
ÊÊ2 3
.
ÁÁ 
HasMaxLength
ÁÁ !
(
ÁÁ! "
$num
ÁÁ" $
)
ÁÁ$ %
.
ËË 
	IsUnicode
ËË 
(
ËË 
false
ËË $
)
ËË$ %
;
ËË% &
entity
ÍÍ 
.
ÍÍ 
HasOne
ÍÍ 
(
ÍÍ 
d
ÍÍ 
=>
ÍÍ  "
d
ÍÍ# $
.
ÍÍ$ %
Client
ÍÍ% +
)
ÍÍ+ ,
.
ÎÎ 
WithMany
ÎÎ 
(
ÎÎ 
p
ÎÎ 
=>
ÎÎ  "
p
ÎÎ# $
.
ÎÎ$ %"
MasterClientContacts
ÎÎ% 9
)
ÎÎ9 :
.
ÏÏ 
HasForeignKey
ÏÏ "
(
ÏÏ" #
d
ÏÏ# $
=>
ÏÏ% '
d
ÏÏ( )
.
ÏÏ) *
ClientId
ÏÏ* 2
)
ÏÏ2 3
.
ÌÌ 
OnDelete
ÌÌ 
(
ÌÌ 
DeleteBehavior
ÌÌ ,
.
ÌÌ, -
ClientSetNull
ÌÌ- :
)
ÌÌ: ;
.
ÓÓ 
HasConstraintName
ÓÓ &
(
ÓÓ& '
$str
ÓÓ' N
)
ÓÓN O
;
ÓÓO P
}
ÔÔ 
)
ÔÔ 
;
ÔÔ 
modelBuilder
ÒÒ 
.
ÒÒ 
Entity
ÒÒ 
<
ÒÒ  
MasterClientType
ÒÒ  0
>
ÒÒ0 1
(
ÒÒ1 2
entity
ÒÒ2 8
=>
ÒÒ9 ;
{
ÚÚ 
entity
ÛÛ 
.
ÛÛ 
ToTable
ÛÛ 
(
ÛÛ 
$str
ÛÛ 2
,
ÛÛ2 3
$str
ÛÛ4 9
)
ÛÛ9 :
;
ÛÛ: ;
entity
ıı 
.
ıı 
Property
ıı 
(
ıı  
e
ıı  !
=>
ıı" $
e
ıı% &
.
ıı& '

ClientType
ıı' 1
)
ıı1 2
.
ˆˆ 
HasMaxLength
ˆˆ !
(
ˆˆ! "
$num
ˆˆ" %
)
ˆˆ% &
.
˜˜ 
	IsUnicode
˜˜ 
(
˜˜ 
false
˜˜ $
)
˜˜$ %
;
˜˜% &
entity
˘˘ 
.
˘˘ 
Property
˘˘ 
(
˘˘  
e
˘˘  !
=>
˘˘" $
e
˘˘% &
.
˘˘& '
CreatedDate
˘˘' 2
)
˘˘2 3
.
˘˘3 4
HasColumnType
˘˘4 A
(
˘˘A B
$str
˘˘B L
)
˘˘L M
;
˘˘M N
entity
˚˚ 
.
˚˚ 
Property
˚˚ 
(
˚˚  
e
˚˚  !
=>
˚˚" $
e
˚˚% &
.
˚˚& '
ModifiedDate
˚˚' 3
)
˚˚3 4
.
˚˚4 5
HasColumnType
˚˚5 B
(
˚˚B C
$str
˚˚C M
)
˚˚M N
;
˚˚N O
}
¸¸ 
)
¸¸ 
;
¸¸ 
modelBuilder
˛˛ 
.
˛˛ 
Entity
˛˛ 
<
˛˛  
MasterConfig
˛˛  ,
>
˛˛, -
(
˛˛- .
entity
˛˛. 4
=>
˛˛5 7
{
ˇˇ 
entity
ÄÄ 
.
ÄÄ 
ToTable
ÄÄ 
(
ÄÄ 
$str
ÄÄ .
,
ÄÄ. /
$str
ÄÄ0 5
)
ÄÄ5 6
;
ÄÄ6 7
entity
ÇÇ 
.
ÇÇ 
Property
ÇÇ 
(
ÇÇ  
e
ÇÇ  !
=>
ÇÇ" $
e
ÇÇ% &
.
ÇÇ& '
CreatedDate
ÇÇ' 2
)
ÇÇ2 3
.
ÇÇ3 4
HasColumnType
ÇÇ4 A
(
ÇÇA B
$str
ÇÇB L
)
ÇÇL M
;
ÇÇM N
entity
ÑÑ 
.
ÑÑ 
Property
ÑÑ 
(
ÑÑ  
e
ÑÑ  !
=>
ÑÑ" $
e
ÑÑ% &
.
ÑÑ& '
ModifiedDate
ÑÑ' 3
)
ÑÑ3 4
.
ÑÑ4 5
HasColumnType
ÑÑ5 B
(
ÑÑB C
$str
ÑÑC M
)
ÑÑM N
;
ÑÑN O
}
ÖÖ 
)
ÖÖ 
;
ÖÖ 
modelBuilder
áá 
.
áá 
Entity
áá 
<
áá  
MasterContact
áá  -
>
áá- .
(
áá. /
entity
áá/ 5
=>
áá6 8
{
àà 
entity
ââ 
.
ââ 
ToTable
ââ 
(
ââ 
$str
ââ /
,
ââ/ 0
$str
ââ1 6
)
ââ6 7
;
ââ7 8
entity
ãã 
.
ãã 
Property
ãã 
(
ãã  
e
ãã  !
=>
ãã" $
e
ãã% &
.
ãã& '
ContactPersonName
ãã' 8
)
ãã8 9
.
åå 
HasMaxLength
åå !
(
åå! "
$num
åå" %
)
åå% &
.
çç 
	IsUnicode
çç 
(
çç 
false
çç $
)
çç$ %
;
çç% &
entity
èè 
.
èè 
Property
èè 
(
èè  
e
èè  !
=>
èè" $
e
èè% &
.
èè& '
CreatedDate
èè' 2
)
èè2 3
.
èè3 4
HasColumnType
èè4 A
(
èèA B
$str
èèB L
)
èèL M
;
èèM N
entity
ëë 
.
ëë 
Property
ëë 
(
ëë  
e
ëë  !
=>
ëë" $
e
ëë% &
.
ëë& '
Email
ëë' ,
)
ëë, -
.
íí 
HasMaxLength
íí !
(
íí! "
$num
íí" %
)
íí% &
.
ìì 
	IsUnicode
ìì 
(
ìì 
false
ìì $
)
ìì$ %
;
ìì% &
entity
ïï 
.
ïï 
Property
ïï 
(
ïï  
e
ïï  !
=>
ïï" $
e
ïï% &
.
ïï& '
Mobile
ïï' -
)
ïï- .
.
ññ 
HasMaxLength
ññ !
(
ññ! "
$num
ññ" $
)
ññ$ %
.
óó 
	IsUnicode
óó 
(
óó 
false
óó $
)
óó$ %
;
óó% &
entity
ôô 
.
ôô 
Property
ôô 
(
ôô  
e
ôô  !
=>
ôô" $
e
ôô% &
.
ôô& '
	MobileExt
ôô' 0
)
ôô0 1
.
öö 
HasMaxLength
öö !
(
öö! "
$num
öö" $
)
öö$ %
.
õõ 
	IsUnicode
õõ 
(
õõ 
false
õõ $
)
õõ$ %
;
õõ% &
entity
ùù 
.
ùù 
Property
ùù 
(
ùù  
e
ùù  !
=>
ùù" $
e
ùù% &
.
ùù& '
ModifiedDate
ùù' 3
)
ùù3 4
.
ùù4 5
HasColumnType
ùù5 B
(
ùùB C
$str
ùùC M
)
ùùM N
;
ùùN O
entity
üü 
.
üü 
Property
üü 
(
üü  
e
üü  !
=>
üü" $
e
üü% &
.
üü& '
	TableName
üü' 0
)
üü0 1
.
†† 
HasMaxLength
†† !
(
††! "
$num
††" %
)
††% &
.
°° 
	IsUnicode
°° 
(
°° 
false
°° $
)
°°$ %
;
°°% &
}
¢¢ 
)
¢¢ 
;
¢¢ 
modelBuilder
§§ 
.
§§ 
Entity
§§ 
<
§§  
MasterCountry
§§  -
>
§§- .
(
§§. /
entity
§§/ 5
=>
§§6 8
{
•• 
entity
¶¶ 
.
¶¶ 
ToTable
¶¶ 
(
¶¶ 
$str
¶¶ /
,
¶¶/ 0
$str
¶¶1 6
)
¶¶6 7
;
¶¶7 8
entity
®® 
.
®® 
Property
®® 
(
®®  
e
®®  !
=>
®®" $
e
®®% &
.
®®& '
CountryCode
®®' 2
)
®®2 3
.
©© 
HasMaxLength
©© !
(
©©! "
$num
©©" $
)
©©$ %
.
™™ 
	IsUnicode
™™ 
(
™™ 
false
™™ $
)
™™$ %
;
™™% &
entity
¨¨ 
.
¨¨ 
Property
¨¨ 
(
¨¨  
e
¨¨  !
=>
¨¨" $
e
¨¨% &
.
¨¨& '
CountryName
¨¨' 2
)
¨¨2 3
.
≠≠ 
HasMaxLength
≠≠ !
(
≠≠! "
$num
≠≠" %
)
≠≠% &
.
ÆÆ 
	IsUnicode
ÆÆ 
(
ÆÆ 
false
ÆÆ $
)
ÆÆ$ %
;
ÆÆ% &
entity
∞∞ 
.
∞∞ 
Property
∞∞ 
(
∞∞  
e
∞∞  !
=>
∞∞" $
e
∞∞% &
.
∞∞& '
CreatedDate
∞∞' 2
)
∞∞2 3
.
∞∞3 4
HasColumnType
∞∞4 A
(
∞∞A B
$str
∞∞B L
)
∞∞L M
;
∞∞M N
entity
≤≤ 
.
≤≤ 
Property
≤≤ 
(
≤≤  
e
≤≤  !
=>
≤≤" $
e
≤≤% &
.
≤≤& '
IsdcountryCode
≤≤' 5
)
≤≤5 6
.
≥≥ 
HasMaxLength
≥≥ !
(
≥≥! "
$num
≥≥" $
)
≥≥$ %
.
¥¥ 
	IsUnicode
¥¥ 
(
¥¥ 
false
¥¥ $
)
¥¥$ %
.
µµ 
HasColumnName
µµ "
(
µµ" #
$str
µµ# 3
)
µµ3 4
;
µµ4 5
entity
∑∑ 
.
∑∑ 
Property
∑∑ 
(
∑∑  
e
∑∑  !
=>
∑∑" $
e
∑∑% &
.
∑∑& '
ModifiedDate
∑∑' 3
)
∑∑3 4
.
∑∑4 5
HasColumnType
∑∑5 B
(
∑∑B C
$str
∑∑C M
)
∑∑M N
;
∑∑N O
}
∏∏ 
)
∏∏ 
;
∏∏ 
modelBuilder
∫∫ 
.
∫∫ 
Entity
∫∫ 
<
∫∫  
MasterCurrency
∫∫  .
>
∫∫. /
(
∫∫/ 0
entity
∫∫0 6
=>
∫∫7 9
{
ªª 
entity
ºº 
.
ºº 
ToTable
ºº 
(
ºº 
$str
ºº 0
,
ºº0 1
$str
ºº2 7
)
ºº7 8
;
ºº8 9
entity
ææ 
.
ææ 
Property
ææ 
(
ææ  
e
ææ  !
=>
ææ" $
e
ææ% &
.
ææ& '
CreatedDate
ææ' 2
)
ææ2 3
.
ææ3 4
HasColumnType
ææ4 A
(
ææA B
$str
ææB L
)
ææL M
;
ææM N
entity
¿¿ 
.
¿¿ 
Property
¿¿ 
(
¿¿  
e
¿¿  !
=>
¿¿" $
e
¿¿% &
.
¿¿& '
CurrencyCode
¿¿' 3
)
¿¿3 4
.
¡¡ 
HasMaxLength
¡¡ !
(
¡¡! "
$num
¡¡" $
)
¡¡$ %
.
¬¬ 
	IsUnicode
¬¬ 
(
¬¬ 
false
¬¬ $
)
¬¬$ %
;
¬¬% &
entity
ƒƒ 
.
ƒƒ 
Property
ƒƒ 
(
ƒƒ  
e
ƒƒ  !
=>
ƒƒ" $
e
ƒƒ% &
.
ƒƒ& '
CurrencyName
ƒƒ' 3
)
ƒƒ3 4
.
≈≈ 
HasMaxLength
≈≈ !
(
≈≈! "
$num
≈≈" %
)
≈≈% &
.
∆∆ 
	IsUnicode
∆∆ 
(
∆∆ 
false
∆∆ $
)
∆∆$ %
;
∆∆% &
entity
»» 
.
»» 
Property
»» 
(
»»  
e
»»  !
=>
»»" $
e
»»% &
.
»»& '
CurrencyValue
»»' 4
)
»»4 5
.
»»5 6
HasColumnType
»»6 C
(
»»C D
$str
»»D T
)
»»T U
;
»»U V
entity
   
.
   
Property
   
(
    
e
    !
=>
  " $
e
  % &
.
  & '
ExchangeRate
  ' 3
)
  3 4
.
  4 5
HasColumnType
  5 B
(
  B C
$str
  C S
)
  S T
;
  T U
entity
ÃÃ 
.
ÃÃ 
Property
ÃÃ 
(
ÃÃ  
e
ÃÃ  !
=>
ÃÃ" $
e
ÃÃ% &
.
ÃÃ& '
ModifiedDate
ÃÃ' 3
)
ÃÃ3 4
.
ÃÃ4 5
HasColumnType
ÃÃ5 B
(
ÃÃB C
$str
ÃÃC M
)
ÃÃM N
;
ÃÃN O
}
ÕÕ 
)
ÕÕ 
;
ÕÕ 
modelBuilder
œœ 
.
œœ 
Entity
œœ 
<
œœ  
MasterDepartment
œœ  0
>
œœ0 1
(
œœ1 2
entity
œœ2 8
=>
œœ9 ;
{
–– 
entity
—— 
.
—— 
ToTable
—— 
(
—— 
$str
—— 2
,
——2 3
$str
——4 9
)
——9 :
;
——: ;
entity
”” 
.
”” 
Property
”” 
(
””  
e
””  !
=>
””" $
e
””% &
.
””& '
CreatedDate
””' 2
)
””2 3
.
””3 4
HasColumnType
””4 A
(
””A B
$str
””B L
)
””L M
;
””M N
entity
’’ 
.
’’ 
Property
’’ 
(
’’  
e
’’  !
=>
’’" $
e
’’% &
.
’’& '

Department
’’' 1
)
’’1 2
.
÷÷ 
HasMaxLength
÷÷ !
(
÷÷! "
$num
÷÷" %
)
÷÷% &
.
◊◊ 
	IsUnicode
◊◊ 
(
◊◊ 
false
◊◊ $
)
◊◊$ %
;
◊◊% &
entity
ŸŸ 
.
ŸŸ 
Property
ŸŸ 
(
ŸŸ  
e
ŸŸ  !
=>
ŸŸ" $
e
ŸŸ% &
.
ŸŸ& '
ModifiedDate
ŸŸ' 3
)
ŸŸ3 4
.
ŸŸ4 5
HasColumnType
ŸŸ5 B
(
ŸŸB C
$str
ŸŸC M
)
ŸŸM N
;
ŸŸN O
}
⁄⁄ 
)
⁄⁄ 
;
⁄⁄ 
modelBuilder
‹‹ 
.
‹‹ 
Entity
‹‹ 
<
‹‹  
MasterDesignation
‹‹  1
>
‹‹1 2
(
‹‹2 3
entity
‹‹3 9
=>
‹‹: <
{
›› 
entity
ﬁﬁ 
.
ﬁﬁ 
ToTable
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ 3
,
ﬁﬁ3 4
$str
ﬁﬁ5 :
)
ﬁﬁ: ;
;
ﬁﬁ; <
entity
‡‡ 
.
‡‡ 
Property
‡‡ 
(
‡‡  
e
‡‡  !
=>
‡‡" $
e
‡‡% &
.
‡‡& '
CreatedDate
‡‡' 2
)
‡‡2 3
.
‡‡3 4
HasColumnType
‡‡4 A
(
‡‡A B
$str
‡‡B L
)
‡‡L M
;
‡‡M N
entity
‚‚ 
.
‚‚ 
Property
‚‚ 
(
‚‚  
e
‚‚  !
=>
‚‚" $
e
‚‚% &
.
‚‚& '
Designation
‚‚' 2
)
‚‚2 3
.
„„ 
HasMaxLength
„„ !
(
„„! "
$num
„„" %
)
„„% &
.
‰‰ 
	IsUnicode
‰‰ 
(
‰‰ 
false
‰‰ $
)
‰‰$ %
;
‰‰% &
entity
ÊÊ 
.
ÊÊ 
Property
ÊÊ 
(
ÊÊ  
e
ÊÊ  !
=>
ÊÊ" $
e
ÊÊ% &
.
ÊÊ& '
ModifiedDate
ÊÊ' 3
)
ÊÊ3 4
.
ÊÊ4 5
HasColumnType
ÊÊ5 B
(
ÊÊB C
$str
ÊÊC M
)
ÊÊM N
;
ÊÊN O
}
ÁÁ 
)
ÁÁ 
;
ÁÁ 
modelBuilder
ÈÈ 
.
ÈÈ 
Entity
ÈÈ 
<
ÈÈ  
MasterDictionary
ÈÈ  0
>
ÈÈ0 1
(
ÈÈ1 2
entity
ÈÈ2 8
=>
ÈÈ9 ;
{
ÍÍ 
entity
ÎÎ 
.
ÎÎ 
ToTable
ÎÎ 
(
ÎÎ 
$str
ÎÎ 2
,
ÎÎ2 3
$str
ÎÎ4 9
)
ÎÎ9 :
;
ÎÎ: ;
entity
ÌÌ 
.
ÌÌ 
Property
ÌÌ 
(
ÌÌ  
e
ÌÌ  !
=>
ÌÌ" $
e
ÌÌ% &
.
ÌÌ& '
CreatedDate
ÌÌ' 2
)
ÌÌ2 3
.
ÌÌ3 4
HasColumnType
ÌÌ4 A
(
ÌÌA B
$str
ÌÌB L
)
ÌÌL M
;
ÌÌM N
entity
ÔÔ 
.
ÔÔ 
Property
ÔÔ 
(
ÔÔ  
e
ÔÔ  !
=>
ÔÔ" $
e
ÔÔ% &
.
ÔÔ& '
Description
ÔÔ' 2
)
ÔÔ2 3
.
 
HasMaxLength
 !
(
! "
$num
" %
)
% &
.
ÒÒ 
	IsUnicode
ÒÒ 
(
ÒÒ 
false
ÒÒ $
)
ÒÒ$ %
;
ÒÒ% &
entity
ÛÛ 
.
ÛÛ 
Property
ÛÛ 
(
ÛÛ  
e
ÛÛ  !
=>
ÛÛ" $
e
ÛÛ% &
.
ÛÛ& '
DictionaryCode
ÛÛ' 5
)
ÛÛ5 6
.
ÙÙ 
HasMaxLength
ÙÙ !
(
ÙÙ! "
$num
ÙÙ" %
)
ÙÙ% &
.
ıı 
	IsUnicode
ıı 
(
ıı 
false
ıı $
)
ıı$ %
;
ıı% &
entity
˜˜ 
.
˜˜ 
Property
˜˜ 
(
˜˜  
e
˜˜  !
=>
˜˜" $
e
˜˜% &
.
˜˜& '
ModifiedDate
˜˜' 3
)
˜˜3 4
.
˜˜4 5
HasColumnType
˜˜5 B
(
˜˜B C
$str
˜˜C M
)
˜˜M N
;
˜˜N O
}
¯¯ 
)
¯¯ 
;
¯¯ 
modelBuilder
˙˙ 
.
˙˙ 
Entity
˙˙ 
<
˙˙  $
MasterDictionaryDetail
˙˙  6
>
˙˙6 7
(
˙˙7 8
entity
˙˙8 >
=>
˙˙? A
{
˚˚ 
entity
¸¸ 
.
¸¸ 
ToTable
¸¸ 
(
¸¸ 
$str
¸¸ 8
,
¸¸8 9
$str
¸¸: ?
)
¸¸? @
;
¸¸@ A
entity
˛˛ 
.
˛˛ 
Property
˛˛ 
(
˛˛  
e
˛˛  !
=>
˛˛" $
e
˛˛% &
.
˛˛& '
CreatedDate
˛˛' 2
)
˛˛2 3
.
˛˛3 4
HasColumnType
˛˛4 A
(
˛˛A B
$str
˛˛B L
)
˛˛L M
;
˛˛M N
entity
ÄÄ 
.
ÄÄ 
Property
ÄÄ 
(
ÄÄ  
e
ÄÄ  !
=>
ÄÄ" $
e
ÄÄ% &
.
ÄÄ& '
Description
ÄÄ' 2
)
ÄÄ2 3
.
ÅÅ 
HasMaxLength
ÅÅ !
(
ÅÅ! "
$num
ÅÅ" $
)
ÅÅ$ %
.
ÇÇ 
	IsUnicode
ÇÇ 
(
ÇÇ 
false
ÇÇ $
)
ÇÇ$ %
;
ÇÇ% &
entity
ÑÑ 
.
ÑÑ 
Property
ÑÑ 
(
ÑÑ  
e
ÑÑ  !
=>
ÑÑ" $
e
ÑÑ% &
.
ÑÑ& '
ModifiedDate
ÑÑ' 3
)
ÑÑ3 4
.
ÑÑ4 5
HasColumnType
ÑÑ5 B
(
ÑÑB C
$str
ÑÑC M
)
ÑÑM N
;
ÑÑN O
entity
ÜÜ 
.
ÜÜ 
HasOne
ÜÜ 
(
ÜÜ 
d
ÜÜ 
=>
ÜÜ  "
d
ÜÜ# $
.
ÜÜ$ %

Dictionary
ÜÜ% /
)
ÜÜ/ 0
.
áá 
WithMany
áá 
(
áá 
p
áá 
=>
áá  "
p
áá# $
.
áá$ %%
MasterDictionaryDetails
áá% <
)
áá< =
.
àà 
HasForeignKey
àà "
(
àà" #
d
àà# $
=>
àà% '
d
àà( )
.
àà) *
DictionaryId
àà* 6
)
àà6 7
.
ââ 
OnDelete
ââ 
(
ââ 
DeleteBehavior
ââ ,
.
ââ, -
ClientSetNull
ââ- :
)
ââ: ;
.
ää 
HasConstraintName
ää &
(
ää& '
$str
ää' G
)
ääG H
;
ääH I
}
ãã 
)
ãã 
;
ãã 
modelBuilder
çç 
.
çç 
Entity
çç 
<
çç  
MasterDocument
çç  .
>
çç. /
(
çç/ 0
entity
çç0 6
=>
çç7 9
{
éé 
entity
èè 
.
èè 
ToTable
èè 
(
èè 
$str
èè 0
,
èè0 1
$str
èè2 7
)
èè7 8
;
èè8 9
entity
ëë 
.
ëë 
Property
ëë 
(
ëë  
e
ëë  !
=>
ëë" $
e
ëë% &
.
ëë& '
CreatedDate
ëë' 2
)
ëë2 3
.
ëë3 4
HasColumnType
ëë4 A
(
ëëA B
$str
ëëB L
)
ëëL M
;
ëëM N
entity
ìì 
.
ìì 
Property
ìì 
(
ìì  
e
ìì  !
=>
ìì" $
e
ìì% &
.
ìì& '
DocumentName
ìì' 3
)
ìì3 4
.
îî 
HasMaxLength
îî !
(
îî! "
$num
îî" %
)
îî% &
.
ïï 
	IsUnicode
ïï 
(
ïï 
false
ïï $
)
ïï$ %
;
ïï% &
entity
óó 
.
óó 
Property
óó 
(
óó  
e
óó  !
=>
óó" $
e
óó% &
.
óó& '
FileName
óó' /
)
óó/ 0
.
òò 
HasMaxLength
òò !
(
òò! "
$num
òò" %
)
òò% &
.
ôô 
	IsUnicode
ôô 
(
ôô 
false
ôô $
)
ôô$ %
;
ôô% &
entity
õõ 
.
õõ 
Property
õõ 
(
õõ  
e
õõ  !
=>
õõ" $
e
õõ% &
.
õõ& '
FilePath
õõ' /
)
õõ/ 0
.
úú 
HasMaxLength
úú !
(
úú! "
$num
úú" %
)
úú% &
.
ùù 
	IsUnicode
ùù 
(
ùù 
false
ùù $
)
ùù$ %
;
ùù% &
entity
üü 
.
üü 
Property
üü 
(
üü  
e
üü  !
=>
üü" $
e
üü% &
.
üü& '
FileType
üü' /
)
üü/ 0
.
†† 
HasMaxLength
†† !
(
††! "
$num
††" %
)
††% &
.
°° 
	IsUnicode
°° 
(
°° 
false
°° $
)
°°$ %
;
°°% &
entity
££ 
.
££ 
Property
££ 
(
££  
e
££  !
=>
££" $
e
££% &
.
££& '
ModifiedDate
££' 3
)
££3 4
.
££4 5
HasColumnType
££5 B
(
££B C
$str
££C M
)
££M N
;
££N O
entity
•• 
.
•• 
Property
•• 
(
••  
e
••  !
=>
••" $
e
••% &
.
••& '
	TableName
••' 0
)
••0 1
.
¶¶ 
HasMaxLength
¶¶ !
(
¶¶! "
$num
¶¶" %
)
¶¶% &
.
ßß 
	IsUnicode
ßß 
(
ßß 
false
ßß $
)
ßß$ %
;
ßß% &
}
®® 
)
®® 
;
®® 
modelBuilder
™™ 
.
™™ 
Entity
™™ 
<
™™  
MasterException
™™  /
>
™™/ 0
(
™™0 1
entity
™™1 7
=>
™™8 :
{
´´ 
entity
¨¨ 
.
¨¨ 
HasKey
¨¨ 
(
¨¨ 
e
¨¨ 
=>
¨¨  "
e
¨¨# $
.
¨¨$ %
ExceptionId
¨¨% 0
)
¨¨0 1
;
¨¨1 2
entity
ÆÆ 
.
ÆÆ 
ToTable
ÆÆ 
(
ÆÆ 
$str
ÆÆ 1
,
ÆÆ1 2
$str
ÆÆ3 8
)
ÆÆ8 9
;
ÆÆ9 :
entity
∞∞ 
.
∞∞ 
Property
∞∞ 
(
∞∞  
e
∞∞  !
=>
∞∞" $
e
∞∞% &
.
∞∞& '
CreatedDate
∞∞' 2
)
∞∞2 3
.
∞∞3 4
HasColumnType
∞∞4 A
(
∞∞A B
$str
∞∞B L
)
∞∞L M
;
∞∞M N
entity
≤≤ 
.
≤≤ 
Property
≤≤ 
(
≤≤  
e
≤≤  !
=>
≤≤" $
e
≤≤% &
.
≤≤& '
Message
≤≤' .
)
≤≤. /
.
≤≤/ 0
HasMaxLength
≤≤0 <
(
≤≤< =
$num
≤≤= @
)
≤≤@ A
;
≤≤A B
entity
¥¥ 
.
¥¥ 
Property
¥¥ 
(
¥¥  
e
¥¥  !
=>
¥¥" $
e
¥¥% &
.
¥¥& '
Source
¥¥' -
)
¥¥- .
.
¥¥. /
HasMaxLength
¥¥/ ;
(
¥¥; <
$num
¥¥< ?
)
¥¥? @
;
¥¥@ A
entity
∂∂ 
.
∂∂ 
Property
∂∂ 
(
∂∂  
e
∂∂  !
=>
∂∂" $
e
∂∂% &
.
∂∂& '
StrackTrace
∂∂' 2
)
∂∂2 3
.
∂∂3 4
HasMaxLength
∂∂4 @
(
∂∂@ A
$num
∂∂A E
)
∂∂E F
;
∂∂F G
}
∑∑ 
)
∑∑ 
;
∑∑ 
modelBuilder
ππ 
.
ππ 
Entity
ππ 
<
ππ  
MasterLocation
ππ  .
>
ππ. /
(
ππ/ 0
entity
ππ0 6
=>
ππ7 9
{
∫∫ 
entity
ªª 
.
ªª 
ToTable
ªª 
(
ªª 
$str
ªª 0
,
ªª0 1
$str
ªª2 7
)
ªª7 8
;
ªª8 9
entity
ΩΩ 
.
ΩΩ 
Property
ΩΩ 
(
ΩΩ  
e
ΩΩ  !
=>
ΩΩ" $
e
ΩΩ% &
.
ΩΩ& '
CreatedDate
ΩΩ' 2
)
ΩΩ2 3
.
ΩΩ3 4
HasColumnType
ΩΩ4 A
(
ΩΩA B
$str
ΩΩB L
)
ΩΩL M
;
ΩΩM N
entity
øø 
.
øø 
Property
øø 
(
øø  
e
øø  !
=>
øø" $
e
øø% &
.
øø& '
Latitude
øø' /
)
øø/ 0
.
øø0 1
HasMaxLength
øø1 =
(
øø= >
$num
øø> A
)
øøA B
;
øøB C
entity
¡¡ 
.
¡¡ 
Property
¡¡ 
(
¡¡  
e
¡¡  !
=>
¡¡" $
e
¡¡% &
.
¡¡& '
LocationName
¡¡' 3
)
¡¡3 4
.
¬¬ 
HasMaxLength
¬¬ !
(
¬¬! "
$num
¬¬" %
)
¬¬% &
.
√√ 
	IsUnicode
√√ 
(
√√ 
false
√√ $
)
√√$ %
;
√√% &
entity
≈≈ 
.
≈≈ 
Property
≈≈ 
(
≈≈  
e
≈≈  !
=>
≈≈" $
e
≈≈% &
.
≈≈& '
	Longitude
≈≈' 0
)
≈≈0 1
.
≈≈1 2
HasMaxLength
≈≈2 >
(
≈≈> ?
$num
≈≈? B
)
≈≈B C
;
≈≈C D
entity
«« 
.
«« 
Property
«« 
(
««  
e
««  !
=>
««" $
e
««% &
.
««& '
ModifiedDate
««' 3
)
««3 4
.
««4 5
HasColumnType
««5 B
(
««B C
$str
««C M
)
««M N
;
««N O
entity
…… 
.
…… 
Property
…… 
(
……  
e
……  !
=>
……" $
e
……% &
.
……& '
Sector
……' -
)
……- .
.
……. /
HasMaxLength
……/ ;
(
……; <
$num
……< ?
)
……? @
;
……@ A
entity
ÀÀ 
.
ÀÀ 
HasOne
ÀÀ 
(
ÀÀ 
d
ÀÀ 
=>
ÀÀ  "
d
ÀÀ# $
.
ÀÀ$ %
City
ÀÀ% )
)
ÀÀ) *
.
ÃÃ 
WithMany
ÃÃ 
(
ÃÃ 
p
ÃÃ 
=>
ÃÃ  "
p
ÃÃ# $
.
ÃÃ$ %
MasterLocations
ÃÃ% 4
)
ÃÃ4 5
.
ÕÕ 
HasForeignKey
ÕÕ "
(
ÕÕ" #
d
ÕÕ# $
=>
ÕÕ% '
d
ÕÕ( )
.
ÕÕ) *
CityId
ÕÕ* 0
)
ÕÕ0 1
.
ŒŒ 
OnDelete
ŒŒ 
(
ŒŒ 
DeleteBehavior
ŒŒ ,
.
ŒŒ, -
ClientSetNull
ŒŒ- :
)
ŒŒ: ;
.
œœ 
HasConstraintName
œœ &
(
œœ& '
$str
œœ' G
)
œœG H
;
œœH I
entity
—— 
.
—— 
HasOne
—— 
(
—— 
d
—— 
=>
——  "
d
——# $
.
——$ %
Country
——% ,
)
——, -
.
““ 
WithMany
““ 
(
““ 
p
““ 
=>
““  "
p
““# $
.
““$ %
MasterLocations
““% 4
)
““4 5
.
”” 
HasForeignKey
”” "
(
””" #
d
””# $
=>
””% '
d
””( )
.
””) *
	CountryId
””* 3
)
””3 4
.
‘‘ 
OnDelete
‘‘ 
(
‘‘ 
DeleteBehavior
‘‘ ,
.
‘‘, -
ClientSetNull
‘‘- :
)
‘‘: ;
.
’’ 
HasConstraintName
’’ &
(
’’& '
$str
’’' J
)
’’J K
;
’’K L
entity
◊◊ 
.
◊◊ 
HasOne
◊◊ 
(
◊◊ 
d
◊◊ 
=>
◊◊  "
d
◊◊# $
.
◊◊$ %
State
◊◊% *
)
◊◊* +
.
ÿÿ 
WithMany
ÿÿ 
(
ÿÿ 
p
ÿÿ 
=>
ÿÿ  "
p
ÿÿ# $
.
ÿÿ$ %
MasterLocations
ÿÿ% 4
)
ÿÿ4 5
.
ŸŸ 
HasForeignKey
ŸŸ "
(
ŸŸ" #
d
ŸŸ# $
=>
ŸŸ% '
d
ŸŸ( )
.
ŸŸ) *
StateId
ŸŸ* 1
)
ŸŸ1 2
.
⁄⁄ 
OnDelete
⁄⁄ 
(
⁄⁄ 
DeleteBehavior
⁄⁄ ,
.
⁄⁄, -
ClientSetNull
⁄⁄- :
)
⁄⁄: ;
.
€€ 
HasConstraintName
€€ &
(
€€& '
$str
€€' H
)
€€H I
;
€€I J
}
‹‹ 
)
‹‹ 
;
‹‹ 
modelBuilder
ﬁﬁ 
.
ﬁﬁ 
Entity
ﬁﬁ 
<
ﬁﬁ  
MasterModule
ﬁﬁ  ,
>
ﬁﬁ, -
(
ﬁﬁ- .
entity
ﬁﬁ. 4
=>
ﬁﬁ5 7
{
ﬂﬂ 
entity
‡‡ 
.
‡‡ 
HasKey
‡‡ 
(
‡‡ 
e
‡‡ 
=>
‡‡  "
e
‡‡# $
.
‡‡$ %
ModuleId
‡‡% -
)
‡‡- .
;
‡‡. /
entity
‚‚ 
.
‚‚ 
ToTable
‚‚ 
(
‚‚ 
$str
‚‚ .
,
‚‚. /
$str
‚‚0 5
)
‚‚5 6
;
‚‚6 7
entity
‰‰ 
.
‰‰ 
Property
‰‰ 
(
‰‰  
e
‰‰  !
=>
‰‰" $
e
‰‰% &
.
‰‰& '
ControlName
‰‰' 2
)
‰‰2 3
.
‰‰3 4
HasMaxLength
‰‰4 @
(
‰‰@ A
$num
‰‰A D
)
‰‰D E
;
‰‰E F
entity
ÊÊ 
.
ÊÊ 
Property
ÊÊ 
(
ÊÊ  
e
ÊÊ  !
=>
ÊÊ" $
e
ÊÊ% &
.
ÊÊ& '
CreatedDate
ÊÊ' 2
)
ÊÊ2 3
.
ÊÊ3 4
HasColumnType
ÊÊ4 A
(
ÊÊA B
$str
ÊÊB L
)
ÊÊL M
;
ÊÊM N
entity
ËË 
.
ËË 
Property
ËË 
(
ËË  
e
ËË  !
=>
ËË" $
e
ËË% &
.
ËË& '
	HoverIcon
ËË' 0
)
ËË0 1
.
ÈÈ 
HasMaxLength
ÈÈ !
(
ÈÈ! "
$num
ÈÈ" %
)
ÈÈ% &
.
ÍÍ 
	IsUnicode
ÍÍ 
(
ÍÍ 
false
ÍÍ $
)
ÍÍ$ %
;
ÍÍ% &
entity
ÏÏ 
.
ÏÏ 
Property
ÏÏ 
(
ÏÏ  
e
ÏÏ  !
=>
ÏÏ" $
e
ÏÏ% &
.
ÏÏ& '
Icon
ÏÏ' +
)
ÏÏ+ ,
.
ÌÌ 
HasMaxLength
ÌÌ !
(
ÌÌ! "
$num
ÌÌ" %
)
ÌÌ% &
.
ÓÓ 
	IsUnicode
ÓÓ 
(
ÓÓ 
false
ÓÓ $
)
ÓÓ$ %
;
ÓÓ% &
entity
 
.
 
Property
 
(
  
e
  !
=>
" $
e
% &
.
& '

ModifyDate
' 1
)
1 2
.
2 3
HasColumnType
3 @
(
@ A
$str
A K
)
K L
;
L M
entity
ÚÚ 
.
ÚÚ 
Property
ÚÚ 
(
ÚÚ  
e
ÚÚ  !
=>
ÚÚ" $
e
ÚÚ% &
.
ÚÚ& '

ModuleName
ÚÚ' 1
)
ÚÚ1 2
.
ÚÚ2 3
HasMaxLength
ÚÚ3 ?
(
ÚÚ? @
$num
ÚÚ@ C
)
ÚÚC D
;
ÚÚD E
entity
ÙÙ 
.
ÙÙ 
Property
ÙÙ 
(
ÙÙ  
e
ÙÙ  !
=>
ÙÙ" $
e
ÙÙ% &
.
ÙÙ& '
ViewName
ÙÙ' /
)
ÙÙ/ 0
.
ıı 
HasMaxLength
ıı !
(
ıı! "
$num
ıı" %
)
ıı% &
.
ˆˆ 
	IsUnicode
ˆˆ 
(
ˆˆ 
false
ˆˆ $
)
ˆˆ$ %
;
ˆˆ% &
}
˜˜ 
)
˜˜ 
;
˜˜ 
modelBuilder
˘˘ 
.
˘˘ 
Entity
˘˘ 
<
˘˘   
MasterNotification
˘˘  2
>
˘˘2 3
(
˘˘3 4
entity
˘˘4 :
=>
˘˘; =
{
˙˙ 
entity
˚˚ 
.
˚˚ 
ToTable
˚˚ 
(
˚˚ 
$str
˚˚ 4
,
˚˚4 5
$str
˚˚6 ;
)
˚˚; <
;
˚˚< =
entity
˝˝ 
.
˝˝ 
HasIndex
˝˝ 
(
˝˝  
e
˝˝  !
=>
˝˝" $
new
˝˝% (
{
˝˝) *
e
˝˝+ ,
.
˝˝, -
Id
˝˝- /
,
˝˝/ 0
e
˝˝1 2
.
˝˝2 3 
ValuationRequestId
˝˝3 E
}
˝˝F G
,
˝˝G H
$str
˝˝I Y
)
˝˝Y Z
;
˝˝Z [
entity
ˇˇ 
.
ˇˇ 
Property
ˇˇ 
(
ˇˇ  
e
ˇˇ  !
=>
ˇˇ" $
e
ˇˇ% &
.
ˇˇ& '
Body
ˇˇ' +
)
ˇˇ+ ,
.
ˇˇ, -
	IsUnicode
ˇˇ- 6
(
ˇˇ6 7
false
ˇˇ7 <
)
ˇˇ< =
;
ˇˇ= >
entity
ÅÅ 
.
ÅÅ 
Property
ÅÅ 
(
ÅÅ  
e
ÅÅ  !
=>
ÅÅ" $
e
ÅÅ% &
.
ÅÅ& '
CreatedDate
ÅÅ' 2
)
ÅÅ2 3
.
ÅÅ3 4
HasColumnType
ÅÅ4 A
(
ÅÅA B
$str
ÅÅB L
)
ÅÅL M
;
ÅÅM N
entity
ÉÉ 
.
ÉÉ 
Property
ÉÉ 
(
ÉÉ  
e
ÉÉ  !
=>
ÉÉ" $
e
ÉÉ% &
.
ÉÉ& '
ReadDate
ÉÉ' /
)
ÉÉ/ 0
.
ÉÉ0 1
HasColumnType
ÉÉ1 >
(
ÉÉ> ?
$str
ÉÉ? I
)
ÉÉI J
;
ÉÉJ K
entity
ÖÖ 
.
ÖÖ 
Property
ÖÖ 
(
ÖÖ  
e
ÖÖ  !
=>
ÖÖ" $
e
ÖÖ% &
.
ÖÖ& '
SentDatetime
ÖÖ' 3
)
ÖÖ3 4
.
ÖÖ4 5
HasColumnType
ÖÖ5 B
(
ÖÖB C
$str
ÖÖC M
)
ÖÖM N
;
ÖÖN O
entity
áá 
.
áá 
Property
áá 
(
áá  
e
áá  !
=>
áá" $
e
áá% &
.
áá& '
Subject
áá' .
)
áá. /
.
àà 
HasMaxLength
àà !
(
àà! "
$num
àà" %
)
àà% &
.
ââ 
	IsUnicode
ââ 
(
ââ 
false
ââ $
)
ââ$ %
;
ââ% &
entity
ãã 
.
ãã 
Property
ãã 
(
ãã  
e
ãã  !
=>
ãã" $
e
ãã% &
.
ãã& '
ToEmails
ãã' /
)
ãã/ 0
.
ãã0 1
	IsUnicode
ãã1 :
(
ãã: ;
false
ãã; @
)
ãã@ A
;
ããA B
entity
çç 
.
çç 
HasOne
çç 
(
çç 
d
çç 
=>
çç  "
d
çç# $
.
çç$ %
ValuationRequest
çç% 5
)
çç5 6
.
éé 
WithMany
éé 
(
éé 
p
éé 
=>
éé  "
p
éé# $
.
éé$ %!
MasterNotifications
éé% 8
)
éé8 9
.
èè 
HasForeignKey
èè "
(
èè" #
d
èè# $
=>
èè% '
d
èè( )
.
èè) * 
ValuationRequestId
èè* <
)
èè< =
.
êê 
HasConstraintName
êê &
(
êê& '
$str
êê' G
)
êêG H
;
êêH I
}
ëë 
)
ëë 
;
ëë 
modelBuilder
ìì 
.
ìì 
Entity
ìì 
<
ìì  !
MasterOwnershipType
ìì  3
>
ìì3 4
(
ìì4 5
entity
ìì5 ;
=>
ìì< >
{
îî 
entity
ïï 
.
ïï 
ToTable
ïï 
(
ïï 
$str
ïï 5
,
ïï5 6
$str
ïï7 <
)
ïï< =
;
ïï= >
entity
óó 
.
óó 
Property
óó 
(
óó  
e
óó  !
=>
óó" $
e
óó% &
.
óó& '
CreatedDate
óó' 2
)
óó2 3
.
óó3 4
HasColumnType
óó4 A
(
óóA B
$str
óóB L
)
óóL M
;
óóM N
entity
ôô 
.
ôô 
Property
ôô 
(
ôô  
e
ôô  !
=>
ôô" $
e
ôô% &
.
ôô& '
ModifiedDate
ôô' 3
)
ôô3 4
.
ôô4 5
HasColumnType
ôô5 B
(
ôôB C
$str
ôôC M
)
ôôM N
;
ôôN O
entity
õõ 
.
õõ 
Property
õõ 
(
õõ  
e
õõ  !
=>
õõ" $
e
õõ% &
.
õõ& '
OwnershipType
õõ' 4
)
õõ4 5
.
úú 
HasMaxLength
úú !
(
úú! "
$num
úú" %
)
úú% &
.
ùù 
	IsUnicode
ùù 
(
ùù 
false
ùù $
)
ùù$ %
;
ùù% &
}
ûû 
)
ûû 
;
ûû 
modelBuilder
†† 
.
†† 
Entity
†† 
<
††  
MasterProperty
††  .
>
††. /
(
††/ 0
entity
††0 6
=>
††7 9
{
°° 
entity
¢¢ 
.
¢¢ 
ToTable
¢¢ 
(
¢¢ 
$str
¢¢ 0
,
¢¢0 1
$str
¢¢2 7
)
¢¢7 8
;
¢¢8 9
entity
§§ 
.
§§ 
Property
§§ 
(
§§  
e
§§  !
=>
§§" $
e
§§% &
.
§§& '
AdditionalUnits
§§' 6
)
§§6 7
.
•• 
HasMaxLength
•• !
(
••! "
$num
••" %
)
••% &
.
¶¶ 
	IsUnicode
¶¶ 
(
¶¶ 
false
¶¶ $
)
¶¶$ %
;
¶¶% &
entity
®® 
.
®® 
Property
®® 
(
®®  
e
®®  !
=>
®®" $
e
®®% &
.
®®& '
	Amenities
®®' 0
)
®®0 1
.
©© 
HasMaxLength
©© !
(
©©! "
$num
©©" %
)
©©% &
.
™™ 
	IsUnicode
™™ 
(
™™ 
false
™™ $
)
™™$ %
;
™™% &
entity
¨¨ 
.
¨¨ 
Property
¨¨ 
(
¨¨  
e
¨¨  !
=>
¨¨" $
e
¨¨% &
.
¨¨& '
BuildUpAreaSqFt
¨¨' 6
)
¨¨6 7
.
¨¨7 8
HasColumnType
¨¨8 E
(
¨¨E F
$str
¨¨F V
)
¨¨V W
;
¨¨W X
entity
ÆÆ 
.
ÆÆ 
Property
ÆÆ 
(
ÆÆ  
e
ÆÆ  !
=>
ÆÆ" $
e
ÆÆ% &
.
ÆÆ& '
BuildUpAreaSqMtr
ÆÆ' 7
)
ÆÆ7 8
.
ÆÆ8 9
HasColumnType
ÆÆ9 F
(
ÆÆF G
$str
ÆÆG W
)
ÆÆW X
;
ÆÆX Y
entity
∞∞ 
.
∞∞ 
Property
∞∞ 
(
∞∞  
e
∞∞  !
=>
∞∞" $
e
∞∞% &
.
∞∞& '
CreatedDate
∞∞' 2
)
∞∞2 3
.
∞∞3 4
HasColumnType
∞∞4 A
(
∞∞A B
$str
∞∞B L
)
∞∞L M
;
∞∞M N
entity
≤≤ 
.
≤≤ 
Property
≤≤ 
(
≤≤  
e
≤≤  !
=>
≤≤" $
e
≤≤% &
.
≤≤& '
Description
≤≤' 2
)
≤≤2 3
.
≥≥ 
HasMaxLength
≥≥ !
(
≥≥! "
$num
≥≥" %
)
≥≥% &
.
¥¥ 
	IsUnicode
¥¥ 
(
¥¥ 
false
¥¥ $
)
¥¥$ %
;
¥¥% &
entity
∂∂ 
.
∂∂ 
Property
∂∂ 
(
∂∂  
e
∂∂  !
=>
∂∂" $
e
∂∂% &
.
∂∂& '
ModifiedDate
∂∂' 3
)
∂∂3 4
.
∂∂4 5
HasColumnType
∂∂5 B
(
∂∂B C
$str
∂∂C M
)
∂∂M N
;
∂∂N O
entity
∏∏ 
.
∏∏ 
Property
∏∏ 
(
∏∏  
e
∏∏  !
=>
∏∏" $
e
∏∏% &
.
∏∏& '
Parking
∏∏' .
)
∏∏. /
.
ππ 
HasMaxLength
ππ !
(
ππ! "
$num
ππ" $
)
ππ$ %
.
∫∫ 
	IsUnicode
∫∫ 
(
∫∫ 
false
∫∫ $
)
∫∫$ %
;
∫∫% &
entity
ºº 
.
ºº 
Property
ºº 
(
ºº  
e
ºº  !
=>
ºº" $
e
ºº% &
.
ºº& '
ParkingBayNo
ºº' 3
)
ºº3 4
.
ΩΩ 
HasMaxLength
ΩΩ !
(
ΩΩ! "
$num
ΩΩ" %
)
ΩΩ% &
.
ææ 
	IsUnicode
ææ 
(
ææ 
false
ææ $
)
ææ$ %
;
ææ% &
entity
¿¿ 
.
¿¿ 
Property
¿¿ 
(
¿¿  
e
¿¿  !
=>
¿¿" $
e
¿¿% &
.
¿¿& '
PropertyName
¿¿' 3
)
¿¿3 4
.
¡¡ 
HasMaxLength
¡¡ !
(
¡¡! "
$num
¡¡" %
)
¡¡% &
.
¬¬ 
	IsUnicode
¬¬ 
(
¬¬ 
false
¬¬ $
)
¬¬$ %
;
¬¬% &
entity
ƒƒ 
.
ƒƒ 
Property
ƒƒ 
(
ƒƒ  
e
ƒƒ  !
=>
ƒƒ" $
e
ƒƒ% &
.
ƒƒ& '

UnitNumber
ƒƒ' 1
)
ƒƒ1 2
.
≈≈ 
HasMaxLength
≈≈ !
(
≈≈! "
$num
≈≈" %
)
≈≈% &
.
∆∆ 
	IsUnicode
∆∆ 
(
∆∆ 
false
∆∆ $
)
∆∆$ %
;
∆∆% &
entity
»» 
.
»» 
Property
»» 
(
»»  
e
»»  !
=>
»»" $
e
»»% &
.
»»& '
ValuationPurpose
»»' 7
)
»»7 8
.
…… 
HasMaxLength
…… !
(
……! "
$num
……" %
)
……% &
.
   
	IsUnicode
   
(
   
false
   $
)
  $ %
;
  % &
entity
ÃÃ 
.
ÃÃ 
HasOne
ÃÃ 
(
ÃÃ 
d
ÃÃ 
=>
ÃÃ  "
d
ÃÃ# $
.
ÃÃ$ %
	Furnished
ÃÃ% .
)
ÃÃ. /
.
ÕÕ 
WithMany
ÕÕ 
(
ÕÕ 
p
ÕÕ 
=>
ÕÕ  "
p
ÕÕ# $
.
ÕÕ$ %&
MasterPropertyFurnisheds
ÕÕ% =
)
ÕÕ= >
.
ŒŒ 
HasForeignKey
ŒŒ "
(
ŒŒ" #
d
ŒŒ# $
=>
ŒŒ% '
d
ŒŒ( )
.
ŒŒ) *
FurnishedId
ŒŒ* 5
)
ŒŒ5 6
.
œœ 
HasConstraintName
œœ &
(
œœ& '
$str
œœ' H
)
œœH I
;
œœI J
entity
—— 
.
—— 
HasOne
—— 
(
—— 
d
—— 
=>
——  "
d
——# $
.
——$ %
OwnershipType
——% 2
)
——2 3
.
““ 
WithMany
““ 
(
““ 
p
““ 
=>
““  "
p
““# $
.
““$ %*
MasterPropertyOwnershipTypes
““% A
)
““A B
.
”” 
HasForeignKey
”” "
(
””" #
d
””# $
=>
””% '
d
””( )
.
””) *
OwnershipTypeId
””* 9
)
””9 :
.
‘‘ 
HasConstraintName
‘‘ &
(
‘‘& '
$str
‘‘' L
)
‘‘L M
;
‘‘M N
entity
÷÷ 
.
÷÷ 
HasOne
÷÷ 
(
÷÷ 
d
÷÷ 
=>
÷÷  "
d
÷÷# $
.
÷÷$ %
UnitType
÷÷% -
)
÷÷- .
.
◊◊ 
WithMany
◊◊ 
(
◊◊ 
p
◊◊ 
=>
◊◊  "
p
◊◊# $
.
◊◊$ %%
MasterPropertyUnitTypes
◊◊% <
)
◊◊< =
.
ÿÿ 
HasForeignKey
ÿÿ "
(
ÿÿ" #
d
ÿÿ# $
=>
ÿÿ% '
d
ÿÿ( )
.
ÿÿ) *

UnitTypeId
ÿÿ* 4
)
ÿÿ4 5
.
ŸŸ 
HasConstraintName
ŸŸ &
(
ŸŸ& '
$str
ŸŸ' G
)
ŸŸG H
;
ŸŸH I
}
⁄⁄ 
)
⁄⁄ 
;
⁄⁄ 
modelBuilder
‹‹ 
.
‹‹ 
Entity
‹‹ 
<
‹‹  #
MasterPropertyAmenity
‹‹  5
>
‹‹5 6
(
‹‹6 7
entity
‹‹7 =
=>
‹‹> @
{
›› 
entity
ﬁﬁ 
.
ﬁﬁ 
ToTable
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ 8
,
ﬁﬁ8 9
$str
ﬁﬁ: ?
)
ﬁﬁ? @
;
ﬁﬁ@ A
entity
‡‡ 
.
‡‡ 
Property
‡‡ 
(
‡‡  
e
‡‡  !
=>
‡‡" $
e
‡‡% &
.
‡‡& '
CreatedDate
‡‡' 2
)
‡‡2 3
.
‡‡3 4
HasColumnType
‡‡4 A
(
‡‡A B
$str
‡‡B L
)
‡‡L M
;
‡‡M N
entity
‚‚ 
.
‚‚ 
Property
‚‚ 
(
‚‚  
e
‚‚  !
=>
‚‚" $
e
‚‚% &
.
‚‚& '
ModifiedDate
‚‚' 3
)
‚‚3 4
.
‚‚4 5
HasColumnType
‚‚5 B
(
‚‚B C
$str
‚‚C M
)
‚‚M N
;
‚‚N O
entity
‰‰ 
.
‰‰ 
HasOne
‰‰ 
(
‰‰ 
d
‰‰ 
=>
‰‰  "
d
‰‰# $
.
‰‰$ %
Amenity
‰‰% ,
)
‰‰, -
.
ÂÂ 
WithMany
ÂÂ 
(
ÂÂ 
p
ÂÂ 
=>
ÂÂ  "
p
ÂÂ# $
.
ÂÂ$ %%
MasterPropertyAmenities
ÂÂ% <
)
ÂÂ< =
.
ÊÊ 
HasForeignKey
ÊÊ "
(
ÊÊ" #
d
ÊÊ# $
=>
ÊÊ% '
d
ÊÊ( )
.
ÊÊ) *
	AmenityId
ÊÊ* 3
)
ÊÊ3 4
.
ÁÁ 
OnDelete
ÁÁ 
(
ÁÁ 
DeleteBehavior
ÁÁ ,
.
ÁÁ, -
ClientSetNull
ÁÁ- :
)
ÁÁ: ;
.
ËË 
HasConstraintName
ËË &
(
ËË& '
$str
ËË' G
)
ËËG H
;
ËËH I
entity
ÍÍ 
.
ÍÍ 
HasOne
ÍÍ 
(
ÍÍ 
d
ÍÍ 
=>
ÍÍ  "
d
ÍÍ# $
.
ÍÍ$ %
Property
ÍÍ% -
)
ÍÍ- .
.
ÎÎ 
WithMany
ÎÎ 
(
ÎÎ 
p
ÎÎ 
=>
ÎÎ  "
p
ÎÎ# $
.
ÎÎ$ %%
MasterPropertyAmenities
ÎÎ% <
)
ÎÎ< =
.
ÏÏ 
HasForeignKey
ÏÏ "
(
ÏÏ" #
d
ÏÏ# $
=>
ÏÏ% '
d
ÏÏ( )
.
ÏÏ) *

PropertyId
ÏÏ* 4
)
ÏÏ4 5
.
ÌÌ 
OnDelete
ÌÌ 
(
ÌÌ 
DeleteBehavior
ÌÌ ,
.
ÌÌ, -
ClientSetNull
ÌÌ- :
)
ÌÌ: ;
.
ÓÓ 
HasConstraintName
ÓÓ &
(
ÓÓ& '
$str
ÓÓ' G
)
ÓÓG H
;
ÓÓH I
}
ÔÔ 
)
ÔÔ 
;
ÔÔ 
modelBuilder
ÒÒ 
.
ÒÒ 
Entity
ÒÒ 
<
ÒÒ  $
MasterPropertyLocation
ÒÒ  6
>
ÒÒ6 7
(
ÒÒ7 8
entity
ÒÒ8 >
=>
ÒÒ? A
{
ÚÚ 
entity
ÛÛ 
.
ÛÛ 
ToTable
ÛÛ 
(
ÛÛ 
$str
ÛÛ 9
,
ÛÛ9 :
$str
ÛÛ; @
)
ÛÛ@ A
;
ÛÛA B
entity
ıı 
.
ıı 
Property
ıı 
(
ıı  
e
ıı  !
=>
ıı" $
e
ıı% &
.
ıı& '
Address1
ıı' /
)
ıı/ 0
.
ˆˆ 
HasMaxLength
ˆˆ !
(
ˆˆ! "
$num
ˆˆ" %
)
ˆˆ% &
.
˜˜ 
	IsUnicode
˜˜ 
(
˜˜ 
false
˜˜ $
)
˜˜$ %
;
˜˜% &
entity
˘˘ 
.
˘˘ 
Property
˘˘ 
(
˘˘  
e
˘˘  !
=>
˘˘" $
e
˘˘% &
.
˘˘& '
Address2
˘˘' /
)
˘˘/ 0
.
˙˙ 
HasMaxLength
˙˙ !
(
˙˙! "
$num
˙˙" %
)
˙˙% &
.
˚˚ 
	IsUnicode
˚˚ 
(
˚˚ 
false
˚˚ $
)
˚˚$ %
;
˚˚% &
entity
˝˝ 
.
˝˝ 
Property
˝˝ 
(
˝˝  
e
˝˝  !
=>
˝˝" $
e
˝˝% &
.
˝˝& '
BuildingProject
˝˝' 6
)
˝˝6 7
.
˛˛ 
HasMaxLength
˛˛ !
(
˛˛! "
$num
˛˛" %
)
˛˛% &
.
ˇˇ 
	IsUnicode
ˇˇ 
(
ˇˇ 
false
ˇˇ $
)
ˇˇ$ %
;
ˇˇ% &
entity
ÅÅ 
.
ÅÅ 
Property
ÅÅ 
(
ÅÅ  
e
ÅÅ  !
=>
ÅÅ" $
e
ÅÅ% &
.
ÅÅ& '
CreatedDate
ÅÅ' 2
)
ÅÅ2 3
.
ÅÅ3 4
HasColumnType
ÅÅ4 A
(
ÅÅA B
$str
ÅÅB L
)
ÅÅL M
;
ÅÅM N
entity
ÉÉ 
.
ÉÉ 
Property
ÉÉ 
(
ÉÉ  
e
ÉÉ  !
=>
ÉÉ" $
e
ÉÉ% &
.
ÉÉ& '
Landmark
ÉÉ' /
)
ÉÉ/ 0
.
ÑÑ 
HasMaxLength
ÑÑ !
(
ÑÑ! "
$num
ÑÑ" %
)
ÑÑ% &
.
ÖÖ 
	IsUnicode
ÖÖ 
(
ÖÖ 
false
ÖÖ $
)
ÖÖ$ %
;
ÖÖ% &
entity
áá 
.
áá 
Property
áá 
(
áá  
e
áá  !
=>
áá" $
e
áá% &
.
áá& '
Latitude
áá' /
)
áá/ 0
.
àà 
HasMaxLength
àà !
(
àà! "
$num
àà" $
)
àà$ %
.
ââ 
	IsUnicode
ââ 
(
ââ 
false
ââ $
)
ââ$ %
;
ââ% &
entity
ãã 
.
ãã 
Property
ãã 
(
ãã  
e
ãã  !
=>
ãã" $
e
ãã% &
.
ãã& '
	Longitude
ãã' 0
)
ãã0 1
.
åå 
HasMaxLength
åå !
(
åå! "
$num
åå" $
)
åå$ %
.
çç 
	IsUnicode
çç 
(
çç 
false
çç $
)
çç$ %
;
çç% &
entity
èè 
.
èè 
Property
èè 
(
èè  
e
èè  !
=>
èè" $
e
èè% &
.
èè& '
ModifiedDate
èè' 3
)
èè3 4
.
èè4 5
HasColumnType
èè5 B
(
èèB C
$str
èèC M
)
èèM N
;
èèN O
entity
ëë 
.
ëë 
Property
ëë 
(
ëë  
e
ëë  !
=>
ëë" $
e
ëë% &
.
ëë& '
Pincode
ëë' .
)
ëë. /
.
íí 
HasMaxLength
íí !
(
íí! "
$num
íí" $
)
íí$ %
.
ìì 
	IsUnicode
ìì 
(
ìì 
false
ìì $
)
ìì$ %
;
ìì% &
entity
ïï 
.
ïï 
Property
ïï 
(
ïï  
e
ïï  !
=>
ïï" $
e
ïï% &
.
ïï& '
Zone
ïï' +
)
ïï+ ,
.
ññ 
HasMaxLength
ññ !
(
ññ! "
$num
ññ" %
)
ññ% &
.
óó 
	IsUnicode
óó 
(
óó 
false
óó $
)
óó$ %
;
óó% &
entity
ôô 
.
ôô 
HasOne
ôô 
(
ôô 
d
ôô 
=>
ôô  "
d
ôô# $
.
ôô$ %
Property
ôô% -
)
ôô- .
.
öö 
WithMany
öö 
(
öö 
p
öö 
=>
öö  "
p
öö# $
.
öö$ %%
MasterPropertyLocations
öö% <
)
öö< =
.
õõ 
HasForeignKey
õõ "
(
õõ" #
d
õõ# $
=>
õõ% '
d
õõ( )
.
õõ) *

PropertyId
õõ* 4
)
õõ4 5
.
úú 
OnDelete
úú 
(
úú 
DeleteBehavior
úú ,
.
úú, -
ClientSetNull
úú- :
)
úú: ;
.
ùù 
HasConstraintName
ùù &
(
ùù& '
$str
ùù' Q
)
ùùQ R
;
ùùR S
}
ûû 
)
ûû 
;
ûû 
modelBuilder
†† 
.
†† 
Entity
†† 
<
††  #
MasterPropertySubType
††  5
>
††5 6
(
††6 7
entity
††7 =
=>
††> @
{
°° 
entity
¢¢ 
.
¢¢ 
ToTable
¢¢ 
(
¢¢ 
$str
¢¢ 7
,
¢¢7 8
$str
¢¢9 >
)
¢¢> ?
;
¢¢? @
entity
§§ 
.
§§ 
Property
§§ 
(
§§  
e
§§  !
=>
§§" $
e
§§% &
.
§§& '
CreatedDate
§§' 2
)
§§2 3
.
§§3 4
HasColumnType
§§4 A
(
§§A B
$str
§§B L
)
§§L M
;
§§M N
entity
¶¶ 
.
¶¶ 
Property
¶¶ 
(
¶¶  
e
¶¶  !
=>
¶¶" $
e
¶¶% &
.
¶¶& '
ModifiedDate
¶¶' 3
)
¶¶3 4
.
¶¶4 5
HasColumnType
¶¶5 B
(
¶¶B C
$str
¶¶C M
)
¶¶M N
;
¶¶N O
entity
®® 
.
®® 
Property
®® 
(
®®  
e
®®  !
=>
®®" $
e
®®% &
.
®®& '
PropertySubType
®®' 6
)
®®6 7
.
©© 
HasMaxLength
©© !
(
©©! "
$num
©©" %
)
©©% &
.
™™ 
	IsUnicode
™™ 
(
™™ 
false
™™ $
)
™™$ %
;
™™% &
entity
¨¨ 
.
¨¨ 
HasOne
¨¨ 
(
¨¨ 
d
¨¨ 
=>
¨¨  "
d
¨¨# $
.
¨¨$ %
PropertyType
¨¨% 1
)
¨¨1 2
.
≠≠ 
WithMany
≠≠ 
(
≠≠ 
p
≠≠ 
=>
≠≠  "
p
≠≠# $
.
≠≠$ %$
MasterPropertySubTypes
≠≠% ;
)
≠≠; <
.
ÆÆ 
HasForeignKey
ÆÆ "
(
ÆÆ" #
d
ÆÆ# $
=>
ÆÆ% '
d
ÆÆ( )
.
ÆÆ) *
PropertyTypeId
ÆÆ* 8
)
ÆÆ8 9
.
ØØ 
HasConstraintName
ØØ &
(
ØØ& '
$str
ØØ' G
)
ØØG H
;
ØØH I
}
∞∞ 
)
∞∞ 
;
∞∞ 
modelBuilder
≤≤ 
.
≤≤ 
Entity
≤≤ 
<
≤≤   
MasterPropertyType
≤≤  2
>
≤≤2 3
(
≤≤3 4
entity
≤≤4 :
=>
≤≤; =
{
≥≥ 
entity
¥¥ 
.
¥¥ 
ToTable
¥¥ 
(
¥¥ 
$str
¥¥ 4
,
¥¥4 5
$str
¥¥6 ;
)
¥¥; <
;
¥¥< =
entity
∂∂ 
.
∂∂ 
Property
∂∂ 
(
∂∂  
e
∂∂  !
=>
∂∂" $
e
∂∂% &
.
∂∂& '
CreatedDate
∂∂' 2
)
∂∂2 3
.
∂∂3 4
HasColumnType
∂∂4 A
(
∂∂A B
$str
∂∂B L
)
∂∂L M
;
∂∂M N
entity
∏∏ 
.
∏∏ 
Property
∏∏ 
(
∏∏  
e
∏∏  !
=>
∏∏" $
e
∏∏% &
.
∏∏& '
ModifiedDate
∏∏' 3
)
∏∏3 4
.
∏∏4 5
HasColumnType
∏∏5 B
(
∏∏B C
$str
∏∏C M
)
∏∏M N
;
∏∏N O
entity
∫∫ 
.
∫∫ 
Property
∫∫ 
(
∫∫  
e
∫∫  !
=>
∫∫" $
e
∫∫% &
.
∫∫& '
PropertyType
∫∫' 3
)
∫∫3 4
.
ªª 
HasMaxLength
ªª !
(
ªª! "
$num
ªª" %
)
ªª% &
.
ºº 
	IsUnicode
ºº 
(
ºº 
false
ºº $
)
ºº$ %
;
ºº% &
}
ΩΩ 
)
ΩΩ 
;
ΩΩ 
modelBuilder
øø 
.
øø 
Entity
øø 
<
øø  !
MasterQualification
øø  3
>
øø3 4
(
øø4 5
entity
øø5 ;
=>
øø< >
{
¿¿ 
entity
¡¡ 
.
¡¡ 
ToTable
¡¡ 
(
¡¡ 
$str
¡¡ 5
,
¡¡5 6
$str
¡¡7 <
)
¡¡< =
;
¡¡= >
entity
√√ 
.
√√ 
Property
√√ 
(
√√  
e
√√  !
=>
√√" $
e
√√% &
.
√√& '
CreatedDate
√√' 2
)
√√2 3
.
√√3 4
HasColumnType
√√4 A
(
√√A B
$str
√√B L
)
√√L M
;
√√M N
entity
≈≈ 
.
≈≈ 
Property
≈≈ 
(
≈≈  
e
≈≈  !
=>
≈≈" $
e
≈≈% &
.
≈≈& '
Grade
≈≈' ,
)
≈≈, -
.
∆∆ 
HasMaxLength
∆∆ !
(
∆∆! "
$num
∆∆" $
)
∆∆$ %
.
«« 
	IsUnicode
«« 
(
«« 
false
«« $
)
««$ %
;
««% &
entity
…… 
.
…… 
Property
…… 
(
……  
e
……  !
=>
……" $
e
……% &
.
……& '
	Institute
……' 0
)
……0 1
.
   
HasMaxLength
   !
(
  ! "
$num
  " %
)
  % &
.
ÀÀ 
	IsUnicode
ÀÀ 
(
ÀÀ 
false
ÀÀ $
)
ÀÀ$ %
;
ÀÀ% &
entity
ÕÕ 
.
ÕÕ 
Property
ÕÕ 
(
ÕÕ  
e
ÕÕ  !
=>
ÕÕ" $
e
ÕÕ% &
.
ÕÕ& '
ModifiedDate
ÕÕ' 3
)
ÕÕ3 4
.
ÕÕ4 5
HasColumnType
ÕÕ5 B
(
ÕÕB C
$str
ÕÕC M
)
ÕÕM N
;
ÕÕN O
entity
œœ 
.
œœ 
Property
œœ 
(
œœ  
e
œœ  !
=>
œœ" $
e
œœ% &
.
œœ& '
Qualification
œœ' 4
)
œœ4 5
.
–– 
HasMaxLength
–– !
(
––! "
$num
––" %
)
––% &
.
—— 
	IsUnicode
—— 
(
—— 
false
—— $
)
——$ %
;
——% &
entity
”” 
.
”” 
Property
”” 
(
””  
e
””  !
=>
””" $
e
””% &
.
””& '
Subject
””' .
)
””. /
.
‘‘ 
HasMaxLength
‘‘ !
(
‘‘! "
$num
‘‘" %
)
‘‘% &
.
’’ 
	IsUnicode
’’ 
(
’’ 
false
’’ $
)
’’$ %
;
’’% &
entity
◊◊ 
.
◊◊ 
Property
◊◊ 
(
◊◊  
e
◊◊  !
=>
◊◊" $
e
◊◊% &
.
◊◊& '
	TableName
◊◊' 0
)
◊◊0 1
.
ÿÿ 
HasMaxLength
ÿÿ !
(
ÿÿ! "
$num
ÿÿ" %
)
ÿÿ% &
.
ŸŸ 
	IsUnicode
ŸŸ 
(
ŸŸ 
false
ŸŸ $
)
ŸŸ$ %
;
ŸŸ% &
entity
€€ 
.
€€ 
Property
€€ 
(
€€  
e
€€  !
=>
€€" $
e
€€% &
.
€€& '
YearOfInstitute
€€' 6
)
€€6 7
.
‹‹ 
HasMaxLength
‹‹ !
(
‹‹! "
$num
‹‹" $
)
‹‹$ %
.
›› 
	IsUnicode
›› 
(
›› 
false
›› $
)
››$ %
;
››% &
}
ﬁﬁ 
)
ﬁﬁ 
;
ﬁﬁ 
modelBuilder
‡‡ 
.
‡‡ 
Entity
‡‡ 
<
‡‡   
MasterResourceType
‡‡  2
>
‡‡2 3
(
‡‡3 4
entity
‡‡4 :
=>
‡‡; =
{
·· 
entity
‚‚ 
.
‚‚ 
ToTable
‚‚ 
(
‚‚ 
$str
‚‚ 4
,
‚‚4 5
$str
‚‚6 ;
)
‚‚; <
;
‚‚< =
entity
‰‰ 
.
‰‰ 
Property
‰‰ 
(
‰‰  
e
‰‰  !
=>
‰‰" $
e
‰‰% &
.
‰‰& '
CreatedDate
‰‰' 2
)
‰‰2 3
.
‰‰3 4
HasColumnType
‰‰4 A
(
‰‰A B
$str
‰‰B L
)
‰‰L M
;
‰‰M N
entity
ÊÊ 
.
ÊÊ 
Property
ÊÊ 
(
ÊÊ  
e
ÊÊ  !
=>
ÊÊ" $
e
ÊÊ% &
.
ÊÊ& '
ModifiedDate
ÊÊ' 3
)
ÊÊ3 4
.
ÊÊ4 5
HasColumnType
ÊÊ5 B
(
ÊÊB C
$str
ÊÊC M
)
ÊÊM N
;
ÊÊN O
entity
ËË 
.
ËË 
Property
ËË 
(
ËË  
e
ËË  !
=>
ËË" $
e
ËË% &
.
ËË& '
ResourceType
ËË' 3
)
ËË3 4
.
ÈÈ 
HasMaxLength
ÈÈ !
(
ÈÈ! "
$num
ÈÈ" %
)
ÈÈ% &
.
ÍÍ 
	IsUnicode
ÍÍ 
(
ÍÍ 
false
ÍÍ $
)
ÍÍ$ %
;
ÍÍ% &
}
ÎÎ 
)
ÎÎ 
;
ÎÎ 
modelBuilder
ÌÌ 
.
ÌÌ 
Entity
ÌÌ 
<
ÌÌ  

MasterRole
ÌÌ  *
>
ÌÌ* +
(
ÌÌ+ ,
entity
ÌÌ, 2
=>
ÌÌ3 5
{
ÓÓ 
entity
ÔÔ 
.
ÔÔ 
ToTable
ÔÔ 
(
ÔÔ 
$str
ÔÔ ,
,
ÔÔ, -
$str
ÔÔ. 3
)
ÔÔ3 4
;
ÔÔ4 5
entity
ÒÒ 
.
ÒÒ 
Property
ÒÒ 
(
ÒÒ  
e
ÒÒ  !
=>
ÒÒ" $
e
ÒÒ% &
.
ÒÒ& '
CreatedDate
ÒÒ' 2
)
ÒÒ2 3
.
ÒÒ3 4
HasColumnType
ÒÒ4 A
(
ÒÒA B
$str
ÒÒB L
)
ÒÒL M
;
ÒÒM N
entity
ÛÛ 
.
ÛÛ 
Property
ÛÛ 
(
ÛÛ  
e
ÛÛ  !
=>
ÛÛ" $
e
ÛÛ% &
.
ÛÛ& '
DeletedDate
ÛÛ' 2
)
ÛÛ2 3
.
ÛÛ3 4
HasColumnType
ÛÛ4 A
(
ÛÛA B
$str
ÛÛB L
)
ÛÛL M
;
ÛÛM N
entity
ıı 
.
ıı 
Property
ıı 
(
ıı  
e
ıı  !
=>
ıı" $
e
ıı% &
.
ıı& '
ModifiedDate
ıı' 3
)
ıı3 4
.
ıı4 5
HasColumnType
ıı5 B
(
ııB C
$str
ııC M
)
ııM N
;
ııN O
entity
˜˜ 
.
˜˜ 
Property
˜˜ 
(
˜˜  
e
˜˜  !
=>
˜˜" $
e
˜˜% &
.
˜˜& '
RoleName
˜˜' /
)
˜˜/ 0
.
˜˜0 1
HasMaxLength
˜˜1 =
(
˜˜= >
$num
˜˜> @
)
˜˜@ A
;
˜˜A B
}
¯¯ 
)
¯¯ 
;
¯¯ 
modelBuilder
˙˙ 
.
˙˙ 
Entity
˙˙ 
<
˙˙  (
MasterRoleModulePermission
˙˙  :
>
˙˙: ;
(
˙˙; <
entity
˙˙< B
=>
˙˙C E
{
˚˚ 
entity
¸¸ 
.
¸¸ 
HasKey
¸¸ 
(
¸¸ 
e
¸¸ 
=>
¸¸  "
e
¸¸# $
.
¸¸$ %
RoleModuleId
¸¸% 1
)
¸¸1 2
.
˝˝ 
HasName
˝˝ 
(
˝˝ 
$str
˝˝ 6
)
˝˝6 7
;
˝˝7 8
entity
ˇˇ 
.
ˇˇ 
ToTable
ˇˇ 
(
ˇˇ 
$str
ˇˇ <
,
ˇˇ< =
$str
ˇˇ> C
)
ˇˇC D
;
ˇˇD E
entity
ÅÅ 
.
ÅÅ 
Property
ÅÅ 
(
ÅÅ  
e
ÅÅ  !
=>
ÅÅ" $
e
ÅÅ% &
.
ÅÅ& '
CreatedDate
ÅÅ' 2
)
ÅÅ2 3
.
ÅÅ3 4
HasColumnType
ÅÅ4 A
(
ÅÅA B
$str
ÅÅB L
)
ÅÅL M
;
ÅÅM N
entity
ÉÉ 
.
ÉÉ 
Property
ÉÉ 
(
ÉÉ  
e
ÉÉ  !
=>
ÉÉ" $
e
ÉÉ% &
.
ÉÉ& '

ModifyDate
ÉÉ' 1
)
ÉÉ1 2
.
ÉÉ2 3
HasColumnType
ÉÉ3 @
(
ÉÉ@ A
$str
ÉÉA K
)
ÉÉK L
;
ÉÉL M
}
ÑÑ 
)
ÑÑ 
;
ÑÑ 
modelBuilder
ÜÜ 
.
ÜÜ 
Entity
ÜÜ 
<
ÜÜ  
MasterState
ÜÜ  +
>
ÜÜ+ ,
(
ÜÜ, -
entity
ÜÜ- 3
=>
ÜÜ4 6
{
áá 
entity
àà 
.
àà 
ToTable
àà 
(
àà 
$str
àà -
,
àà- .
$str
àà/ 4
)
àà4 5
;
àà5 6
entity
ää 
.
ää 
Property
ää 
(
ää  
e
ää  !
=>
ää" $
e
ää% &
.
ää& '
CreatedDate
ää' 2
)
ää2 3
.
ää3 4
HasColumnType
ää4 A
(
ääA B
$str
ääB L
)
ääL M
;
ääM N
entity
åå 
.
åå 
Property
åå 
(
åå  
e
åå  !
=>
åå" $
e
åå% &
.
åå& '
ModifiedDate
åå' 3
)
åå3 4
.
åå4 5
HasColumnType
åå5 B
(
ååB C
$str
ååC M
)
ååM N
;
ååN O
entity
éé 
.
éé 
Property
éé 
(
éé  
e
éé  !
=>
éé" $
e
éé% &
.
éé& '
	StateCode
éé' 0
)
éé0 1
.
èè 
HasMaxLength
èè !
(
èè! "
$num
èè" $
)
èè$ %
.
êê 
	IsUnicode
êê 
(
êê 
false
êê $
)
êê$ %
;
êê% &
entity
íí 
.
íí 
Property
íí 
(
íí  
e
íí  !
=>
íí" $
e
íí% &
.
íí& '
	StateName
íí' 0
)
íí0 1
.
ìì 
HasMaxLength
ìì !
(
ìì! "
$num
ìì" %
)
ìì% &
.
îî 
	IsUnicode
îî 
(
îî 
false
îî $
)
îî$ %
;
îî% &
entity
ññ 
.
ññ 
HasOne
ññ 
(
ññ 
d
ññ 
=>
ññ  "
d
ññ# $
.
ññ$ %
Country
ññ% ,
)
ññ, -
.
óó 
WithMany
óó 
(
óó 
p
óó 
=>
óó  "
p
óó# $
.
óó$ %
MasterStates
óó% 1
)
óó1 2
.
òò 
HasForeignKey
òò "
(
òò" #
d
òò# $
=>
òò% '
d
òò( )
.
òò) *
	CountryId
òò* 3
)
òò3 4
.
ôô 
OnDelete
ôô 
(
ôô 
DeleteBehavior
ôô ,
.
ôô, -
ClientSetNull
ôô- :
)
ôô: ;
.
öö 
HasConstraintName
öö &
(
öö& '
$str
öö' G
)
ööG H
;
ööH I
}
õõ 
)
õõ 
;
õõ 
modelBuilder
ùù 
.
ùù 
Entity
ùù 
<
ùù  
MasterSubModule
ùù  /
>
ùù/ 0
(
ùù0 1
entity
ùù1 7
=>
ùù8 :
{
ûû 
entity
üü 
.
üü 
HasKey
üü 
(
üü 
e
üü 
=>
üü  "
e
üü# $
.
üü$ %
SubModuleId
üü% 0
)
üü0 1
;
üü1 2
entity
°° 
.
°° 
ToTable
°° 
(
°° 
$str
°° 1
,
°°1 2
$str
°°3 8
)
°°8 9
;
°°9 :
entity
££ 
.
££ 
Property
££ 
(
££  
e
££  !
=>
££" $
e
££% &
.
££& '
ControlName
££' 2
)
££2 3
.
££3 4
HasMaxLength
££4 @
(
££@ A
$num
££A D
)
££D E
;
££E F
entity
•• 
.
•• 
Property
•• 
(
••  
e
••  !
=>
••" $
e
••% &
.
••& '
CreatedDate
••' 2
)
••2 3
.
••3 4
HasColumnType
••4 A
(
••A B
$str
••B L
)
••L M
;
••M N
entity
ßß 
.
ßß 
Property
ßß 
(
ßß  
e
ßß  !
=>
ßß" $
e
ßß% &
.
ßß& '

ModifyDate
ßß' 1
)
ßß1 2
.
ßß2 3
HasColumnType
ßß3 @
(
ßß@ A
$str
ßßA K
)
ßßK L
;
ßßL M
entity
©© 
.
©© 
Property
©© 
(
©©  
e
©©  !
=>
©©" $
e
©©% &
.
©©& '
SubModuleName
©©' 4
)
©©4 5
.
©©5 6
HasMaxLength
©©6 B
(
©©B C
$num
©©C F
)
©©F G
;
©©G H
}
™™ 
)
™™ 
;
™™ 
modelBuilder
¨¨ 
.
¨¨ 
Entity
¨¨ 
<
¨¨  

MasterUser
¨¨  *
>
¨¨* +
(
¨¨+ ,
entity
¨¨, 2
=>
¨¨3 5
{
≠≠ 
entity
ÆÆ 
.
ÆÆ 
ToTable
ÆÆ 
(
ÆÆ 
$str
ÆÆ ,
,
ÆÆ, -
$str
ÆÆ. 3
)
ÆÆ3 4
;
ÆÆ4 5
entity
∞∞ 
.
∞∞ 
Property
∞∞ 
(
∞∞  
e
∞∞  !
=>
∞∞" $
e
∞∞% &
.
∞∞& '
CompanyName
∞∞' 2
)
∞∞2 3
.
±± 
HasMaxLength
±± !
(
±±! "
$num
±±" %
)
±±% &
.
≤≤ 
	IsUnicode
≤≤ 
(
≤≤ 
false
≤≤ $
)
≤≤$ %
;
≤≤% &
entity
¥¥ 
.
¥¥ 
Property
¥¥ 
(
¥¥  
e
¥¥  !
=>
¥¥" $
e
¥¥% &
.
¥¥& '
CreatedDate
¥¥' 2
)
¥¥2 3
.
¥¥3 4
HasColumnType
¥¥4 A
(
¥¥A B
$str
¥¥B L
)
¥¥L M
;
¥¥M N
entity
∂∂ 
.
∂∂ 
Property
∂∂ 
(
∂∂  
e
∂∂  !
=>
∂∂" $
e
∂∂% &
.
∂∂& '
DateOfBirth
∂∂' 2
)
∂∂2 3
.
∂∂3 4
HasColumnType
∂∂4 A
(
∂∂A B
$str
∂∂B H
)
∂∂H I
;
∂∂I J
entity
∏∏ 
.
∏∏ 
Property
∏∏ 
(
∏∏  
e
∏∏  !
=>
∏∏" $
e
∏∏% &
.
∏∏& '
Email
∏∏' ,
)
∏∏, -
.
ππ 
HasMaxLength
ππ !
(
ππ! "
$num
ππ" %
)
ππ% &
.
∫∫ 
	IsUnicode
∫∫ 
(
∫∫ 
false
∫∫ $
)
∫∫$ %
;
∫∫% &
entity
ºº 
.
ºº 
Property
ºº 
(
ºº  
e
ºº  !
=>
ºº" $
e
ºº% &
.
ºº& '
	FirstName
ºº' 0
)
ºº0 1
.
ΩΩ 
HasMaxLength
ΩΩ !
(
ΩΩ! "
$num
ΩΩ" %
)
ΩΩ% &
.
ææ 
	IsUnicode
ææ 
(
ææ 
false
ææ $
)
ææ$ %
;
ææ% &
entity
¿¿ 
.
¿¿ 
Property
¿¿ 
(
¿¿  
e
¿¿  !
=>
¿¿" $
e
¿¿% &
.
¿¿& '$
ForgotPasswordDateTime
¿¿' =
)
¿¿= >
.
¿¿> ?
HasColumnType
¿¿? L
(
¿¿L M
$str
¿¿M W
)
¿¿W X
;
¿¿X Y
entity
¬¬ 
.
¬¬ 
Property
¬¬ 
(
¬¬  
e
¬¬  !
=>
¬¬" $
e
¬¬% &
.
¬¬& '!
ForgotPasswordToken
¬¬' :
)
¬¬: ;
.
√√ 
HasMaxLength
√√ !
(
√√! "
$num
√√" %
)
√√% &
.
ƒƒ 
	IsUnicode
ƒƒ 
(
ƒƒ 
false
ƒƒ $
)
ƒƒ$ %
;
ƒƒ% &
entity
   
.
   
Property
   
(
    
e
    !
=>
  " $
e
  % &
.
  & '
LastName
  ' /
)
  / 0
.
ÀÀ 
HasMaxLength
ÀÀ !
(
ÀÀ! "
$num
ÀÀ" %
)
ÀÀ% &
.
ÃÃ 
	IsUnicode
ÃÃ 
(
ÃÃ 
false
ÃÃ $
)
ÃÃ$ %
;
ÃÃ% &
entity
ŒŒ 
.
ŒŒ 
Property
ŒŒ 
(
ŒŒ  
e
ŒŒ  !
=>
ŒŒ" $
e
ŒŒ% &
.
ŒŒ& '
	LicenseNo
ŒŒ' 0
)
ŒŒ0 1
.
œœ 
HasMaxLength
œœ !
(
œœ! "
$num
œœ" %
)
œœ% &
.
–– 
	IsUnicode
–– 
(
–– 
false
–– $
)
––$ %
;
––% &
entity
““ 
.
““ 
Property
““ 
(
““  
e
““  !
=>
““" $
e
““% &
.
““& '

MiddleName
““' 1
)
““1 2
.
”” 
HasMaxLength
”” !
(
””! "
$num
””" %
)
””% &
.
‘‘ 
	IsUnicode
‘‘ 
(
‘‘ 
false
‘‘ $
)
‘‘$ %
;
‘‘% &
entity
÷÷ 
.
÷÷ 
Property
÷÷ 
(
÷÷  
e
÷÷  !
=>
÷÷" $
e
÷÷% &
.
÷÷& '
ModifiedDate
÷÷' 3
)
÷÷3 4
.
÷÷4 5
HasColumnType
÷÷5 B
(
÷÷B C
$str
÷÷C M
)
÷÷M N
;
÷÷N O
entity
ÿÿ 
.
ÿÿ 
Property
ÿÿ 
(
ÿÿ  
e
ÿÿ  !
=>
ÿÿ" $
e
ÿÿ% &
.
ÿÿ& '
Password
ÿÿ' /
)
ÿÿ/ 0
.
ŸŸ 
HasMaxLength
ŸŸ !
(
ŸŸ! "
$num
ŸŸ" %
)
ŸŸ% &
.
⁄⁄ 
	IsUnicode
⁄⁄ 
(
⁄⁄ 
false
⁄⁄ $
)
⁄⁄$ %
;
⁄⁄% &
entity
‹‹ 
.
‹‹ 
Property
‹‹ 
(
‹‹  
e
‹‹  !
=>
‹‹" $
e
‹‹% &
.
‹‹& '
UserName
‹‹' /
)
‹‹/ 0
.
›› 
HasMaxLength
›› !
(
››! "
$num
››" %
)
››% &
.
ﬁﬁ 
	IsUnicode
ﬁﬁ 
(
ﬁﬁ 
false
ﬁﬁ $
)
ﬁﬁ$ %
.
ﬂﬂ "
HasComputedColumnSql
ﬂﬂ )
(
ﬂﬂ) *
$str
ﬂﬂ* J
,
ﬂﬂJ K
false
ﬂﬂL Q
)
ﬂﬂQ R
;
ﬂﬂR S
entity
·· 
.
·· 
HasOne
·· 
(
·· 
d
·· 
=>
··  "
d
··# $
.
··$ %

Department
··% /
)
··/ 0
.
‚‚ 
WithMany
‚‚ 
(
‚‚ 
p
‚‚ 
=>
‚‚  "
p
‚‚# $
.
‚‚$ %#
MasterUserDepartments
‚‚% :
)
‚‚: ;
.
„„ 
HasForeignKey
„„ "
(
„„" #
d
„„# $
=>
„„% '
d
„„( )
.
„„) *
DepartmentId
„„* 6
)
„„6 7
.
‰‰ 
HasConstraintName
‰‰ &
(
‰‰& '
$str
‰‰' <
)
‰‰< =
;
‰‰= >
entity
ÊÊ 
.
ÊÊ 
HasOne
ÊÊ 
(
ÊÊ 
d
ÊÊ 
=>
ÊÊ  "
d
ÊÊ# $
.
ÊÊ$ %
Designation
ÊÊ% 0
)
ÊÊ0 1
.
ÁÁ 
WithMany
ÁÁ 
(
ÁÁ 
p
ÁÁ 
=>
ÁÁ  "
p
ÁÁ# $
.
ÁÁ$ %$
MasterUserDesignations
ÁÁ% ;
)
ÁÁ; <
.
ËË 
HasForeignKey
ËË "
(
ËË" #
d
ËË# $
=>
ËË% '
d
ËË( )
.
ËË) *
DesignationId
ËË* 7
)
ËË7 8
.
ÈÈ 
HasConstraintName
ÈÈ &
(
ÈÈ& '
$str
ÈÈ' H
)
ÈÈH I
;
ÈÈI J
}
ÍÍ 
)
ÍÍ 
;
ÍÍ 
modelBuilder
ÏÏ 
.
ÏÏ 
Entity
ÏÏ 
<
ÏÏ  
MasterUserAddress
ÏÏ  1
>
ÏÏ1 2
(
ÏÏ2 3
entity
ÏÏ3 9
=>
ÏÏ: <
{
ÌÌ 
entity
ÓÓ 
.
ÓÓ 
ToTable
ÓÓ 
(
ÓÓ 
$str
ÓÓ 3
,
ÓÓ3 4
$str
ÓÓ5 :
)
ÓÓ: ;
;
ÓÓ; <
entity
 
.
 
Property
 
(
  
e
  !
=>
" $
e
% &
.
& '
Address1
' /
)
/ 0
.
ÒÒ 
HasMaxLength
ÒÒ !
(
ÒÒ! "
$num
ÒÒ" %
)
ÒÒ% &
.
ÚÚ 
	IsUnicode
ÚÚ 
(
ÚÚ 
false
ÚÚ $
)
ÚÚ$ %
;
ÚÚ% &
entity
ÙÙ 
.
ÙÙ 
Property
ÙÙ 
(
ÙÙ  
e
ÙÙ  !
=>
ÙÙ" $
e
ÙÙ% &
.
ÙÙ& '
Address2
ÙÙ' /
)
ÙÙ/ 0
.
ıı 
HasMaxLength
ıı !
(
ıı! "
$num
ıı" %
)
ıı% &
.
ˆˆ 
	IsUnicode
ˆˆ 
(
ˆˆ 
false
ˆˆ $
)
ˆˆ$ %
;
ˆˆ% &
entity
¯¯ 
.
¯¯ 
Property
¯¯ 
(
¯¯  
e
¯¯  !
=>
¯¯" $
e
¯¯% &
.
¯¯& '
Address3
¯¯' /
)
¯¯/ 0
.
˘˘ 
HasMaxLength
˘˘ !
(
˘˘! "
$num
˘˘" %
)
˘˘% &
.
˙˙ 
	IsUnicode
˙˙ 
(
˙˙ 
false
˙˙ $
)
˙˙$ %
;
˙˙% &
entity
¸¸ 
.
¸¸ 
Property
¸¸ 
(
¸¸  
e
¸¸  !
=>
¸¸" $
e
¸¸% &
.
¸¸& '
CreatedDate
¸¸' 2
)
¸¸2 3
.
¸¸3 4
HasColumnType
¸¸4 A
(
¸¸A B
$str
¸¸B L
)
¸¸L M
;
¸¸M N
entity
˛˛ 
.
˛˛ 
Property
˛˛ 
(
˛˛  
e
˛˛  !
=>
˛˛" $
e
˛˛% &
.
˛˛& '
ModifiedDate
˛˛' 3
)
˛˛3 4
.
˛˛4 5
HasColumnType
˛˛5 B
(
˛˛B C
$str
˛˛C M
)
˛˛M N
;
˛˛N O
entity
ÄÄ 
.
ÄÄ 
Property
ÄÄ 
(
ÄÄ  
e
ÄÄ  !
=>
ÄÄ" $
e
ÄÄ% &
.
ÄÄ& '
PinNo
ÄÄ' ,
)
ÄÄ, -
.
ÅÅ 
HasMaxLength
ÅÅ !
(
ÅÅ! "
$num
ÅÅ" $
)
ÅÅ$ %
.
ÇÇ 
	IsUnicode
ÇÇ 
(
ÇÇ 
false
ÇÇ $
)
ÇÇ$ %
;
ÇÇ% &
entity
ÑÑ 
.
ÑÑ 
HasOne
ÑÑ 
(
ÑÑ 
d
ÑÑ 
=>
ÑÑ  "
d
ÑÑ# $
.
ÑÑ$ %
City
ÑÑ% )
)
ÑÑ) *
.
ÖÖ 
WithMany
ÖÖ 
(
ÖÖ 
p
ÖÖ 
=>
ÖÖ  "
p
ÖÖ# $
.
ÖÖ$ %!
MasterUserAddresses
ÖÖ% 8
)
ÖÖ8 9
.
ÜÜ 
HasForeignKey
ÜÜ "
(
ÜÜ" #
d
ÜÜ# $
=>
ÜÜ% '
d
ÜÜ( )
.
ÜÜ) *
CityId
ÜÜ* 0
)
ÜÜ0 1
.
áá 
OnDelete
áá 
(
áá 
DeleteBehavior
áá ,
.
áá, -
ClientSetNull
áá- :
)
áá: ;
.
àà 
HasConstraintName
àà &
(
àà& '
$str
àà' J
)
ààJ K
;
ààK L
entity
ää 
.
ää 
HasOne
ää 
(
ää 
d
ää 
=>
ää  "
d
ää# $
.
ää$ %
Country
ää% ,
)
ää, -
.
ãã 
WithMany
ãã 
(
ãã 
p
ãã 
=>
ãã  "
p
ãã# $
.
ãã$ %!
MasterUserAddresses
ãã% 8
)
ãã8 9
.
åå 
HasForeignKey
åå "
(
åå" #
d
åå# $
=>
åå% '
d
åå( )
.
åå) *
	CountryId
åå* 3
)
åå3 4
.
çç 
OnDelete
çç 
(
çç 
DeleteBehavior
çç ,
.
çç, -
ClientSetNull
çç- :
)
çç: ;
.
éé 
HasConstraintName
éé &
(
éé& '
$str
éé' M
)
ééM N
;
ééN O
entity
êê 
.
êê 
HasOne
êê 
(
êê 
d
êê 
=>
êê  "
d
êê# $
.
êê$ %
State
êê% *
)
êê* +
.
ëë 
WithMany
ëë 
(
ëë 
p
ëë 
=>
ëë  "
p
ëë# $
.
ëë$ %!
MasterUserAddresses
ëë% 8
)
ëë8 9
.
íí 
HasForeignKey
íí "
(
íí" #
d
íí# $
=>
íí% '
d
íí( )
.
íí) *
StateId
íí* 1
)
íí1 2
.
ìì 
OnDelete
ìì 
(
ìì 
DeleteBehavior
ìì ,
.
ìì, -
ClientSetNull
ìì- :
)
ìì: ;
.
îî 
HasConstraintName
îî &
(
îî& '
$str
îî' K
)
îîK L
;
îîL M
entity
ññ 
.
ññ 
HasOne
ññ 
(
ññ 
d
ññ 
=>
ññ  "
d
ññ# $
.
ññ$ %
User
ññ% )
)
ññ) *
.
óó 
WithMany
óó 
(
óó 
p
óó 
=>
óó  "
p
óó# $
.
óó$ %!
MasterUserAddresses
óó% 8
)
óó8 9
.
òò 
HasForeignKey
òò "
(
òò" #
d
òò# $
=>
òò% '
d
òò( )
.
òò) *
UserId
òò* 0
)
òò0 1
.
ôô 
HasConstraintName
ôô &
(
ôô& '
$str
ôô' J
)
ôôJ K
;
ôôK L
}
öö 
)
öö 
;
öö 
modelBuilder
úú 
.
úú 
Entity
úú 
<
úú  
MasterUserContact
úú  1
>
úú1 2
(
úú2 3
entity
úú3 9
=>
úú: <
{
ùù 
entity
ûû 
.
ûû 
ToTable
ûû 
(
ûû 
$str
ûû 3
,
ûû3 4
$str
ûû5 :
)
ûû: ;
;
ûû; <
entity
†† 
.
†† 
Property
†† 
(
††  
e
††  !
=>
††" $
e
††% &
.
††& '
CreatedDate
††' 2
)
††2 3
.
††3 4
HasColumnType
††4 A
(
††A B
$str
††B L
)
††L M
;
††M N
entity
¢¢ 
.
¢¢ 
Property
¢¢ 
(
¢¢  
e
¢¢  !
=>
¢¢" $
e
¢¢% &
.
¢¢& '
Email
¢¢' ,
)
¢¢, -
.
££ 
HasMaxLength
££ !
(
££! "
$num
££" %
)
££% &
.
§§ 
	IsUnicode
§§ 
(
§§ 
false
§§ $
)
§§$ %
;
§§% &
entity
¶¶ 
.
¶¶ 
Property
¶¶ 
(
¶¶  
e
¶¶  !
=>
¶¶" $
e
¶¶% &
.
¶¶& '
Mobile
¶¶' -
)
¶¶- .
.
ßß 
HasMaxLength
ßß !
(
ßß! "
$num
ßß" $
)
ßß$ %
.
®® 
	IsUnicode
®® 
(
®® 
false
®® $
)
®®$ %
;
®®% &
entity
™™ 
.
™™ 
Property
™™ 
(
™™  
e
™™  !
=>
™™" $
e
™™% &
.
™™& '
ModifiedDate
™™' 3
)
™™3 4
.
™™4 5
HasColumnType
™™5 B
(
™™B C
$str
™™C M
)
™™M N
;
™™N O
entity
¨¨ 
.
¨¨ 
HasOne
¨¨ 
(
¨¨ 
d
¨¨ 
=>
¨¨  "
d
¨¨# $
.
¨¨$ %
User
¨¨% )
)
¨¨) *
.
≠≠ 
WithMany
≠≠ 
(
≠≠ 
p
≠≠ 
=>
≠≠  "
p
≠≠# $
.
≠≠$ % 
MasterUserContacts
≠≠% 7
)
≠≠7 8
.
ÆÆ 
HasForeignKey
ÆÆ "
(
ÆÆ" #
d
ÆÆ# $
=>
ÆÆ% '
d
ÆÆ( )
.
ÆÆ) *
UserId
ÆÆ* 0
)
ÆÆ0 1
.
ØØ 
HasConstraintName
ØØ &
(
ØØ& '
$str
ØØ' J
)
ØØJ K
;
ØØK L
}
∞∞ 
)
∞∞ 
;
∞∞ 
modelBuilder
≤≤ 
.
≤≤ 
Entity
≤≤ 
<
≤≤   
MasterValuationFee
≤≤  2
>
≤≤2 3
(
≤≤3 4
entity
≤≤4 :
=>
≤≤; =
{
≥≥ 
entity
¥¥ 
.
¥¥ 
ToTable
¥¥ 
(
¥¥ 
$str
¥¥ 5
,
¥¥5 6
$str
¥¥7 <
)
¥¥< =
;
¥¥= >
entity
∂∂ 
.
∂∂ 
Property
∂∂ 
(
∂∂  
e
∂∂  !
=>
∂∂" $
e
∂∂% &
.
∂∂& '
CarpetAreaInSqFt
∂∂' 7
)
∂∂7 8
.
∑∑ 
HasMaxLength
∑∑ !
(
∑∑! "
$num
∑∑" %
)
∑∑% &
.
∏∏ 
	IsUnicode
∏∏ 
(
∏∏ 
false
∏∏ $
)
∏∏$ %
;
∏∏% &
entity
∫∫ 
.
∫∫ 
Property
∫∫ 
(
∫∫  
e
∫∫  !
=>
∫∫" $
e
∫∫% &
.
∫∫& '
CarpetAreaInSqMtr
∫∫' 8
)
∫∫8 9
.
ªª 
HasMaxLength
ªª !
(
ªª! "
$num
ªª" %
)
ªª% &
.
ºº 
	IsUnicode
ºº 
(
ºº 
false
ºº $
)
ºº$ %
;
ºº% &
entity
ææ 
.
ææ 
Property
ææ 
(
ææ  
e
ææ  !
=>
ææ" $
e
ææ% &
.
ææ& '
CreatedDate
ææ' 2
)
ææ2 3
.
ææ3 4
HasColumnType
ææ4 A
(
ææA B
$str
ææB L
)
ææL M
;
ææM N
entity
¿¿ 
.
¿¿ 
Property
¿¿ 
(
¿¿  
e
¿¿  !
=>
¿¿" $
e
¿¿% &
.
¿¿& ' 
FixedvaluationFees
¿¿' 9
)
¿¿9 :
.
¿¿: ;
HasColumnType
¿¿; H
(
¿¿H I
$str
¿¿I Y
)
¿¿Y Z
;
¿¿Z [
entity
¬¬ 
.
¬¬ 
Property
¬¬ 
(
¬¬  
e
¬¬  !
=>
¬¬" $
e
¬¬% &
.
¬¬& '
ModifiedDate
¬¬' 3
)
¬¬3 4
.
¬¬4 5
HasColumnType
¬¬5 B
(
¬¬B C
$str
¬¬C M
)
¬¬M N
;
¬¬N O
entity
ƒƒ 
.
ƒƒ 
Property
ƒƒ 
(
ƒƒ  
e
ƒƒ  !
=>
ƒƒ" $
e
ƒƒ% &
.
ƒƒ& '
OtherCharges
ƒƒ' 3
)
ƒƒ3 4
.
ƒƒ4 5
HasColumnType
ƒƒ5 B
(
ƒƒB C
$str
ƒƒC S
)
ƒƒS T
;
ƒƒT U
entity
∆∆ 
.
∆∆ 
Property
∆∆ 
(
∆∆  
e
∆∆  !
=>
∆∆" $
e
∆∆% &
.
∆∆& ' 
TotalValuationFees
∆∆' 9
)
∆∆9 :
.
∆∆: ;
HasColumnType
∆∆; H
(
∆∆H I
$str
∆∆I Y
)
∆∆Y Z
;
∆∆Z [
entity
»» 
.
»» 
Property
»» 
(
»»  
e
»»  !
=>
»»" $
e
»»% &
.
»»& '
ValuationFees
»»' 4
)
»»4 5
.
»»5 6
HasColumnType
»»6 C
(
»»C D
$str
»»D T
)
»»T U
;
»»U V
entity
   
.
   
Property
   
(
    
e
    !
=>
  " $
e
  % &
.
  & '
Vat
  ' *
)
  * +
.
ÀÀ 
HasColumnType
ÀÀ "
(
ÀÀ" #
$str
ÀÀ# 3
)
ÀÀ3 4
.
ÃÃ 
HasColumnName
ÃÃ "
(
ÃÃ" #
$str
ÃÃ# (
)
ÃÃ( )
;
ÃÃ) *
}
ÕÕ 
)
ÕÕ 
;
ÕÕ 
modelBuilder
œœ 
.
œœ 
Entity
œœ 
<
œœ  $
MasterValuationFeeType
œœ  6
>
œœ6 7
(
œœ7 8
entity
œœ8 >
=>
œœ? A
{
–– 
entity
—— 
.
—— 
ToTable
—— 
(
—— 
$str
—— 8
,
——8 9
$str
——: ?
)
——? @
;
——@ A
entity
”” 
.
”” 
Property
”” 
(
””  
e
””  !
=>
””" $
e
””% &
.
””& '
CreatedDate
””' 2
)
””2 3
.
””3 4
HasColumnType
””4 A
(
””A B
$str
””B L
)
””L M
;
””M N
entity
’’ 
.
’’ 
Property
’’ 
(
’’  
e
’’  !
=>
’’" $
e
’’% &
.
’’& '
ModifiedDate
’’' 3
)
’’3 4
.
’’4 5
HasColumnType
’’5 B
(
’’B C
$str
’’C M
)
’’M N
;
’’N O
entity
◊◊ 
.
◊◊ 
Property
◊◊ 
(
◊◊  
e
◊◊  !
=>
◊◊" $
e
◊◊% &
.
◊◊& '
ValuationFeeType
◊◊' 7
)
◊◊7 8
.
ÿÿ 
HasMaxLength
ÿÿ !
(
ÿÿ! "
$num
ÿÿ" %
)
ÿÿ% &
.
ŸŸ 
	IsUnicode
ŸŸ 
(
ŸŸ 
false
ŸŸ $
)
ŸŸ$ %
;
ŸŸ% &
}
⁄⁄ 
)
⁄⁄ 
;
⁄⁄ 
modelBuilder
‹‹ 
.
‹‹ 
Entity
‹‹ 
<
‹‹  1
#MasterValuationRequestApproverLevel
‹‹  C
>
‹‹C D
(
‹‹D E
entity
‹‹E K
=>
‹‹L N
{
›› 
entity
ﬁﬁ 
.
ﬁﬁ 
ToTable
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ E
,
ﬁﬁE F
$str
ﬁﬁG L
)
ﬁﬁL M
;
ﬁﬁM N
entity
‡‡ 
.
‡‡ 
Property
‡‡ 
(
‡‡  
e
‡‡  !
=>
‡‡" $
e
‡‡% &
.
‡‡& '
CreatedDate
‡‡' 2
)
‡‡2 3
.
‡‡3 4
HasColumnType
‡‡4 A
(
‡‡A B
$str
‡‡B L
)
‡‡L M
;
‡‡M N
entity
‚‚ 
.
‚‚ 
Property
‚‚ 
(
‚‚  
e
‚‚  !
=>
‚‚" $
e
‚‚% &
.
‚‚& '
Description
‚‚' 2
)
‚‚2 3
.
„„ 
HasMaxLength
„„ !
(
„„! "
$num
„„" %
)
„„% &
.
‰‰ 
	IsUnicode
‰‰ 
(
‰‰ 
false
‰‰ $
)
‰‰$ %
;
‰‰% &
entity
ÊÊ 
.
ÊÊ 
Property
ÊÊ 
(
ÊÊ  
e
ÊÊ  !
=>
ÊÊ" $
e
ÊÊ% &
.
ÊÊ& '

FromAmount
ÊÊ' 1
)
ÊÊ1 2
.
ÊÊ2 3
HasColumnType
ÊÊ3 @
(
ÊÊ@ A
$str
ÊÊA Q
)
ÊÊQ R
;
ÊÊR S
entity
ËË 
.
ËË 
Property
ËË 
(
ËË  
e
ËË  !
=>
ËË" $
e
ËË% &
.
ËË& '
ModifiedDate
ËË' 3
)
ËË3 4
.
ËË4 5
HasColumnType
ËË5 B
(
ËËB C
$str
ËËC M
)
ËËM N
;
ËËN O
entity
ÍÍ 
.
ÍÍ 
Property
ÍÍ 
(
ÍÍ  
e
ÍÍ  !
=>
ÍÍ" $
e
ÍÍ% &
.
ÍÍ& '
ToAmount
ÍÍ' /
)
ÍÍ/ 0
.
ÍÍ0 1
HasColumnType
ÍÍ1 >
(
ÍÍ> ?
$str
ÍÍ? O
)
ÍÍO P
;
ÍÍP Q
}
ÎÎ 
)
ÎÎ 
;
ÎÎ 
modelBuilder
ÌÌ 
.
ÌÌ 
Entity
ÌÌ 
<
ÌÌ  ,
MasterValuationRequestVendorDd
ÌÌ  >
>
ÌÌ> ?
(
ÌÌ? @
entity
ÌÌ@ F
=>
ÌÌG I
{
ÓÓ 
entity
ÔÔ 
.
ÔÔ 
HasNoKey
ÔÔ 
(
ÔÔ  
)
ÔÔ  !
;
ÔÔ! "
entity
ÒÒ 
.
ÒÒ 
ToTable
ÒÒ 
(
ÒÒ 
$str
ÒÒ C
)
ÒÒC D
;
ÒÒD E
entity
ÛÛ 
.
ÛÛ 
Property
ÛÛ 
(
ÛÛ  
e
ÛÛ  !
=>
ÛÛ" $
e
ÛÛ% &
.
ÛÛ& '
BackGroundColor
ÛÛ' 6
)
ÛÛ6 7
.
ÛÛ7 8
HasMaxLength
ÛÛ8 D
(
ÛÛD E
$num
ÛÛE G
)
ÛÛG H
;
ÛÛH I
entity
ıı 
.
ıı 
Property
ıı 
(
ıı  
e
ıı  !
=>
ıı" $
e
ıı% &
.
ıı& '
	ColorCode
ıı' 0
)
ıı0 1
.
ˆˆ 
HasMaxLength
ˆˆ !
(
ˆˆ! "
$num
ˆˆ" %
)
ˆˆ% &
.
˜˜ 
	IsUnicode
˜˜ 
(
˜˜ 
false
˜˜ $
)
˜˜$ %
;
˜˜% &
entity
˘˘ 
.
˘˘ 
Property
˘˘ 
(
˘˘  
e
˘˘  !
=>
˘˘" $
e
˘˘% &
.
˘˘& '
CreatedDate
˘˘' 2
)
˘˘2 3
.
˘˘3 4
HasColumnType
˘˘4 A
(
˘˘A B
$str
˘˘B L
)
˘˘L M
;
˘˘M N
entity
˚˚ 
.
˚˚ 
Property
˚˚ 
(
˚˚  
e
˚˚  !
=>
˚˚" $
e
˚˚% &
.
˚˚& '
Id
˚˚' )
)
˚˚) *
.
˚˚* +!
ValueGeneratedOnAdd
˚˚+ >
(
˚˚> ?
)
˚˚? @
;
˚˚@ A
entity
˝˝ 
.
˝˝ 
Property
˝˝ 
(
˝˝  
e
˝˝  !
=>
˝˝" $
e
˝˝% &
.
˝˝& '

ModifyDate
˝˝' 1
)
˝˝1 2
.
˝˝2 3
HasColumnType
˝˝3 @
(
˝˝@ A
$str
˝˝A K
)
˝˝K L
;
˝˝L M
entity
ˇˇ 
.
ˇˇ 
Property
ˇˇ 
(
ˇˇ  
e
ˇˇ  !
=>
ˇˇ" $
e
ˇˇ% &
.
ˇˇ& '
Status
ˇˇ' -
)
ˇˇ- .
.
Ä	Ä	 
HasMaxLength
Ä	Ä	 !
(
Ä	Ä	! "
$num
Ä	Ä	" %
)
Ä	Ä	% &
.
Å	Å	 
	IsUnicode
Å	Å	 
(
Å	Å	 
false
Å	Å	 $
)
Å	Å	$ %
;
Å	Å	% &
entity
É	É	 
.
É	É	 
Property
É	É	 
(
É	É	  
e
É	É	  !
=>
É	É	" $
e
É	É	% &
.
É	É	& '

StatusCode
É	É	' 1
)
É	É	1 2
.
Ñ	Ñ	 
HasMaxLength
Ñ	Ñ	 !
(
Ñ	Ñ	! "
$num
Ñ	Ñ	" %
)
Ñ	Ñ	% &
.
Ö	Ö	 
	IsUnicode
Ö	Ö	 
(
Ö	Ö	 
false
Ö	Ö	 $
)
Ö	Ö	$ %
;
Ö	Ö	% &
}
Ü	Ü	 
)
Ü	Ü	 
;
Ü	Ü	 
modelBuilder
à	à	 
.
à	à	 
Entity
à	à	 
<
à	à	  #
MasterValuationStatus
à	à	  5
>
à	à	5 6
(
à	à	6 7
entity
à	à	7 =
=>
à	à	> @
{
â	â	 
entity
ä	ä	 
.
ä	ä	 
ToTable
ä	ä	 
(
ä	ä	 
$str
ä	ä	 7
,
ä	ä	7 8
$str
ä	ä	9 >
)
ä	ä	> ?
;
ä	ä	? @
entity
å	å	 
.
å	å	 
Property
å	å	 
(
å	å	  
e
å	å	  !
=>
å	å	" $
e
å	å	% &
.
å	å	& '
BackGroundColor
å	å	' 6
)
å	å	6 7
.
å	å	7 8
HasMaxLength
å	å	8 D
(
å	å	D E
$num
å	å	E G
)
å	å	G H
;
å	å	H I
entity
é	é	 
.
é	é	 
Property
é	é	 
(
é	é	  
e
é	é	  !
=>
é	é	" $
e
é	é	% &
.
é	é	& '
	ColorCode
é	é	' 0
)
é	é	0 1
.
è	è	 
HasMaxLength
è	è	 !
(
è	è	! "
$num
è	è	" %
)
è	è	% &
.
ê	ê	 
	IsUnicode
ê	ê	 
(
ê	ê	 
false
ê	ê	 $
)
ê	ê	$ %
;
ê	ê	% &
entity
í	í	 
.
í	í	 
Property
í	í	 
(
í	í	  
e
í	í	  !
=>
í	í	" $
e
í	í	% &
.
í	í	& '
CreatedDate
í	í	' 2
)
í	í	2 3
.
í	í	3 4
HasColumnType
í	í	4 A
(
í	í	A B
$str
í	í	B L
)
í	í	L M
;
í	í	M N
entity
î	î	 
.
î	î	 
Property
î	î	 
(
î	î	  
e
î	î	  !
=>
î	î	" $
e
î	î	% &
.
î	î	& '

ModifyDate
î	î	' 1
)
î	î	1 2
.
î	î	2 3
HasColumnType
î	î	3 @
(
î	î	@ A
$str
î	î	A K
)
î	î	K L
;
î	î	L M
entity
ñ	ñ	 
.
ñ	ñ	 
Property
ñ	ñ	 
(
ñ	ñ	  
e
ñ	ñ	  !
=>
ñ	ñ	" $
e
ñ	ñ	% &
.
ñ	ñ	& '
Status
ñ	ñ	' -
)
ñ	ñ	- .
.
ó	ó	 
HasMaxLength
ó	ó	 !
(
ó	ó	! "
$num
ó	ó	" %
)
ó	ó	% &
.
ò	ò	 
	IsUnicode
ò	ò	 
(
ò	ò	 
false
ò	ò	 $
)
ò	ò	$ %
;
ò	ò	% &
entity
ö	ö	 
.
ö	ö	 
Property
ö	ö	 
(
ö	ö	  
e
ö	ö	  !
=>
ö	ö	" $
e
ö	ö	% &
.
ö	ö	& '

StatusCode
ö	ö	' 1
)
ö	ö	1 2
.
õ	õ	 
HasMaxLength
õ	õ	 !
(
õ	õ	! "
$num
õ	õ	" %
)
õ	õ	% &
.
ú	ú	 
	IsUnicode
ú	ú	 
(
ú	ú	 
false
ú	ú	 $
)
ú	ú	$ %
;
ú	ú	% &
}
ù	ù	 
)
ù	ù	 
;
ù	ù	 
modelBuilder
ü	ü	 
.
ü	ü	 
Entity
ü	ü	 
<
ü	ü	  ,
MasterValuationStatus202401101
ü	ü	  >
>
ü	ü	> ?
(
ü	ü	? @
entity
ü	ü	@ F
=>
ü	ü	G I
{
†	†	 
entity
°	°	 
.
°	°	 
HasNoKey
°	°	 
(
°	°	  
)
°	°	  !
;
°	°	! "
entity
£	£	 
.
£	£	 
ToTable
£	£	 
(
£	£	 
$str
£	£	 B
,
£	£	B C
$str
£	£	D I
)
£	£	I J
;
£	£	J K
entity
•	•	 
.
•	•	 
Property
•	•	 
(
•	•	  
e
•	•	  !
=>
•	•	" $
e
•	•	% &
.
•	•	& '
BackGroundColor
•	•	' 6
)
•	•	6 7
.
•	•	7 8
HasMaxLength
•	•	8 D
(
•	•	D E
$num
•	•	E G
)
•	•	G H
;
•	•	H I
entity
ß	ß	 
.
ß	ß	 
Property
ß	ß	 
(
ß	ß	  
e
ß	ß	  !
=>
ß	ß	" $
e
ß	ß	% &
.
ß	ß	& '
	ColorCode
ß	ß	' 0
)
ß	ß	0 1
.
®	®	 
HasMaxLength
®	®	 !
(
®	®	! "
$num
®	®	" %
)
®	®	% &
.
©	©	 
	IsUnicode
©	©	 
(
©	©	 
false
©	©	 $
)
©	©	$ %
;
©	©	% &
entity
´	´	 
.
´	´	 
Property
´	´	 
(
´	´	  
e
´	´	  !
=>
´	´	" $
e
´	´	% &
.
´	´	& '
CreatedDate
´	´	' 2
)
´	´	2 3
.
´	´	3 4
HasColumnType
´	´	4 A
(
´	´	A B
$str
´	´	B L
)
´	´	L M
;
´	´	M N
entity
≠	≠	 
.
≠	≠	 
Property
≠	≠	 
(
≠	≠	  
e
≠	≠	  !
=>
≠	≠	" $
e
≠	≠	% &
.
≠	≠	& '
Id
≠	≠	' )
)
≠	≠	) *
.
≠	≠	* +!
ValueGeneratedOnAdd
≠	≠	+ >
(
≠	≠	> ?
)
≠	≠	? @
;
≠	≠	@ A
entity
Ø	Ø	 
.
Ø	Ø	 
Property
Ø	Ø	 
(
Ø	Ø	  
e
Ø	Ø	  !
=>
Ø	Ø	" $
e
Ø	Ø	% &
.
Ø	Ø	& '

ModifyDate
Ø	Ø	' 1
)
Ø	Ø	1 2
.
Ø	Ø	2 3
HasColumnType
Ø	Ø	3 @
(
Ø	Ø	@ A
$str
Ø	Ø	A K
)
Ø	Ø	K L
;
Ø	Ø	L M
entity
±	±	 
.
±	±	 
Property
±	±	 
(
±	±	  
e
±	±	  !
=>
±	±	" $
e
±	±	% &
.
±	±	& '
Status
±	±	' -
)
±	±	- .
.
≤	≤	 
HasMaxLength
≤	≤	 !
(
≤	≤	! "
$num
≤	≤	" %
)
≤	≤	% &
.
≥	≥	 
	IsUnicode
≥	≥	 
(
≥	≥	 
false
≥	≥	 $
)
≥	≥	$ %
;
≥	≥	% &
entity
µ	µ	 
.
µ	µ	 
Property
µ	µ	 
(
µ	µ	  
e
µ	µ	  !
=>
µ	µ	" $
e
µ	µ	% &
.
µ	µ	& '

StatusCode
µ	µ	' 1
)
µ	µ	1 2
.
∂	∂	 
HasMaxLength
∂	∂	 !
(
∂	∂	! "
$num
∂	∂	" %
)
∂	∂	% &
.
∑	∑	 
	IsUnicode
∑	∑	 
(
∑	∑	 
false
∑	∑	 $
)
∑	∑	$ %
;
∑	∑	% &
}
∏	∏	 
)
∏	∏	 
;
∏	∏	 
modelBuilder
∫	∫	 
.
∫	∫	 
Entity
∫	∫	 
<
∫	∫	  ,
MasterValuationStatus202401102
∫	∫	  >
>
∫	∫	> ?
(
∫	∫	? @
entity
∫	∫	@ F
=>
∫	∫	G I
{
ª	ª	 
entity
º	º	 
.
º	º	 
HasNoKey
º	º	 
(
º	º	  
)
º	º	  !
;
º	º	! "
entity
æ	æ	 
.
æ	æ	 
ToTable
æ	æ	 
(
æ	æ	 
$str
æ	æ	 B
,
æ	æ	B C
$str
æ	æ	D I
)
æ	æ	I J
;
æ	æ	J K
entity
¿	¿	 
.
¿	¿	 
Property
¿	¿	 
(
¿	¿	  
e
¿	¿	  !
=>
¿	¿	" $
e
¿	¿	% &
.
¿	¿	& '
BackGroundColor
¿	¿	' 6
)
¿	¿	6 7
.
¿	¿	7 8
HasMaxLength
¿	¿	8 D
(
¿	¿	D E
$num
¿	¿	E G
)
¿	¿	G H
;
¿	¿	H I
entity
¬	¬	 
.
¬	¬	 
Property
¬	¬	 
(
¬	¬	  
e
¬	¬	  !
=>
¬	¬	" $
e
¬	¬	% &
.
¬	¬	& '
	ColorCode
¬	¬	' 0
)
¬	¬	0 1
.
√	√	 
HasMaxLength
√	√	 !
(
√	√	! "
$num
√	√	" %
)
√	√	% &
.
ƒ	ƒ	 
	IsUnicode
ƒ	ƒ	 
(
ƒ	ƒ	 
false
ƒ	ƒ	 $
)
ƒ	ƒ	$ %
;
ƒ	ƒ	% &
entity
∆	∆	 
.
∆	∆	 
Property
∆	∆	 
(
∆	∆	  
e
∆	∆	  !
=>
∆	∆	" $
e
∆	∆	% &
.
∆	∆	& '
CreatedDate
∆	∆	' 2
)
∆	∆	2 3
.
∆	∆	3 4
HasColumnType
∆	∆	4 A
(
∆	∆	A B
$str
∆	∆	B L
)
∆	∆	L M
;
∆	∆	M N
entity
»	»	 
.
»	»	 
Property
»	»	 
(
»	»	  
e
»	»	  !
=>
»	»	" $
e
»	»	% &
.
»	»	& '
Id
»	»	' )
)
»	»	) *
.
»	»	* +!
ValueGeneratedOnAdd
»	»	+ >
(
»	»	> ?
)
»	»	? @
;
»	»	@ A
entity
 	 	 
.
 	 	 
Property
 	 	 
(
 	 	  
e
 	 	  !
=>
 	 	" $
e
 	 	% &
.
 	 	& '

ModifyDate
 	 	' 1
)
 	 	1 2
.
 	 	2 3
HasColumnType
 	 	3 @
(
 	 	@ A
$str
 	 	A K
)
 	 	K L
;
 	 	L M
entity
Ã	Ã	 
.
Ã	Ã	 
Property
Ã	Ã	 
(
Ã	Ã	  
e
Ã	Ã	  !
=>
Ã	Ã	" $
e
Ã	Ã	% &
.
Ã	Ã	& '
Status
Ã	Ã	' -
)
Ã	Ã	- .
.
Õ	Õ	 
HasMaxLength
Õ	Õ	 !
(
Õ	Õ	! "
$num
Õ	Õ	" %
)
Õ	Õ	% &
.
Œ	Œ	 
	IsUnicode
Œ	Œ	 
(
Œ	Œ	 
false
Œ	Œ	 $
)
Œ	Œ	$ %
;
Œ	Œ	% &
entity
–	–	 
.
–	–	 
Property
–	–	 
(
–	–	  
e
–	–	  !
=>
–	–	" $
e
–	–	% &
.
–	–	& '

StatusCode
–	–	' 1
)
–	–	1 2
.
—	—	 
HasMaxLength
—	—	 !
(
—	—	! "
$num
—	—	" %
)
—	—	% &
.
“	“	 
	IsUnicode
“	“	 
(
“	“	 
false
“	“	 $
)
“	“	$ %
;
“	“	% &
}
”	”	 
)
”	”	 
;
”	”	 
modelBuilder
’	’	 
.
’	’	 
Entity
’	’	 
<
’	’	  ,
MasterValuationStatus202401103
’	’	  >
>
’	’	> ?
(
’	’	? @
entity
’	’	@ F
=>
’	’	G I
{
÷	÷	 
entity
◊	◊	 
.
◊	◊	 
HasNoKey
◊	◊	 
(
◊	◊	  
)
◊	◊	  !
;
◊	◊	! "
entity
Ÿ	Ÿ	 
.
Ÿ	Ÿ	 
ToTable
Ÿ	Ÿ	 
(
Ÿ	Ÿ	 
$str
Ÿ	Ÿ	 B
,
Ÿ	Ÿ	B C
$str
Ÿ	Ÿ	D I
)
Ÿ	Ÿ	I J
;
Ÿ	Ÿ	J K
entity
€	€	 
.
€	€	 
Property
€	€	 
(
€	€	  
e
€	€	  !
=>
€	€	" $
e
€	€	% &
.
€	€	& '
BackGroundColor
€	€	' 6
)
€	€	6 7
.
€	€	7 8
HasMaxLength
€	€	8 D
(
€	€	D E
$num
€	€	E G
)
€	€	G H
;
€	€	H I
entity
›	›	 
.
›	›	 
Property
›	›	 
(
›	›	  
e
›	›	  !
=>
›	›	" $
e
›	›	% &
.
›	›	& '
	ColorCode
›	›	' 0
)
›	›	0 1
.
ﬁ	ﬁ	 
HasMaxLength
ﬁ	ﬁ	 !
(
ﬁ	ﬁ	! "
$num
ﬁ	ﬁ	" %
)
ﬁ	ﬁ	% &
.
ﬂ	ﬂ	 
	IsUnicode
ﬂ	ﬂ	 
(
ﬂ	ﬂ	 
false
ﬂ	ﬂ	 $
)
ﬂ	ﬂ	$ %
;
ﬂ	ﬂ	% &
entity
·	·	 
.
·	·	 
Property
·	·	 
(
·	·	  
e
·	·	  !
=>
·	·	" $
e
·	·	% &
.
·	·	& '
CreatedDate
·	·	' 2
)
·	·	2 3
.
·	·	3 4
HasColumnType
·	·	4 A
(
·	·	A B
$str
·	·	B L
)
·	·	L M
;
·	·	M N
entity
„	„	 
.
„	„	 
Property
„	„	 
(
„	„	  
e
„	„	  !
=>
„	„	" $
e
„	„	% &
.
„	„	& '
Id
„	„	' )
)
„	„	) *
.
„	„	* +!
ValueGeneratedOnAdd
„	„	+ >
(
„	„	> ?
)
„	„	? @
;
„	„	@ A
entity
Â	Â	 
.
Â	Â	 
Property
Â	Â	 
(
Â	Â	  
e
Â	Â	  !
=>
Â	Â	" $
e
Â	Â	% &
.
Â	Â	& '

ModifyDate
Â	Â	' 1
)
Â	Â	1 2
.
Â	Â	2 3
HasColumnType
Â	Â	3 @
(
Â	Â	@ A
$str
Â	Â	A K
)
Â	Â	K L
;
Â	Â	L M
entity
Á	Á	 
.
Á	Á	 
Property
Á	Á	 
(
Á	Á	  
e
Á	Á	  !
=>
Á	Á	" $
e
Á	Á	% &
.
Á	Á	& '
Status
Á	Á	' -
)
Á	Á	- .
.
Ë	Ë	 
HasMaxLength
Ë	Ë	 !
(
Ë	Ë	! "
$num
Ë	Ë	" %
)
Ë	Ë	% &
.
È	È	 
	IsUnicode
È	È	 
(
È	È	 
false
È	È	 $
)
È	È	$ %
;
È	È	% &
entity
Î	Î	 
.
Î	Î	 
Property
Î	Î	 
(
Î	Î	  
e
Î	Î	  !
=>
Î	Î	" $
e
Î	Î	% &
.
Î	Î	& '

StatusCode
Î	Î	' 1
)
Î	Î	1 2
.
Ï	Ï	 
HasMaxLength
Ï	Ï	 !
(
Ï	Ï	! "
$num
Ï	Ï	" %
)
Ï	Ï	% &
.
Ì	Ì	 
	IsUnicode
Ì	Ì	 
(
Ì	Ì	 
false
Ì	Ì	 $
)
Ì	Ì	$ %
;
Ì	Ì	% &
}
Ó	Ó	 
)
Ó	Ó	 
;
Ó	Ó	 
modelBuilder
		 
.
		 
Entity
		 
<
		  %
MasterValuationStatusDd
		  7
>
		7 8
(
		8 9
entity
		9 ?
=>
		@ B
{
Ò	Ò	 
entity
Ú	Ú	 
.
Ú	Ú	 
HasNoKey
Ú	Ú	 
(
Ú	Ú	  
)
Ú	Ú	  !
;
Ú	Ú	! "
entity
Ù	Ù	 
.
Ù	Ù	 
ToTable
Ù	Ù	 
(
Ù	Ù	 
$str
Ù	Ù	 ;
,
Ù	Ù	; <
$str
Ù	Ù	= B
)
Ù	Ù	B C
;
Ù	Ù	C D
entity
ˆ	ˆ	 
.
ˆ	ˆ	 
Property
ˆ	ˆ	 
(
ˆ	ˆ	  
e
ˆ	ˆ	  !
=>
ˆ	ˆ	" $
e
ˆ	ˆ	% &
.
ˆ	ˆ	& '
BackGroundColor
ˆ	ˆ	' 6
)
ˆ	ˆ	6 7
.
ˆ	ˆ	7 8
HasMaxLength
ˆ	ˆ	8 D
(
ˆ	ˆ	D E
$num
ˆ	ˆ	E G
)
ˆ	ˆ	G H
;
ˆ	ˆ	H I
entity
¯	¯	 
.
¯	¯	 
Property
¯	¯	 
(
¯	¯	  
e
¯	¯	  !
=>
¯	¯	" $
e
¯	¯	% &
.
¯	¯	& '
	ColorCode
¯	¯	' 0
)
¯	¯	0 1
.
˘	˘	 
HasMaxLength
˘	˘	 !
(
˘	˘	! "
$num
˘	˘	" %
)
˘	˘	% &
.
˙	˙	 
	IsUnicode
˙	˙	 
(
˙	˙	 
false
˙	˙	 $
)
˙	˙	$ %
;
˙	˙	% &
entity
¸	¸	 
.
¸	¸	 
Property
¸	¸	 
(
¸	¸	  
e
¸	¸	  !
=>
¸	¸	" $
e
¸	¸	% &
.
¸	¸	& '
CreatedDate
¸	¸	' 2
)
¸	¸	2 3
.
¸	¸	3 4
HasColumnType
¸	¸	4 A
(
¸	¸	A B
$str
¸	¸	B L
)
¸	¸	L M
;
¸	¸	M N
entity
˛	˛	 
.
˛	˛	 
Property
˛	˛	 
(
˛	˛	  
e
˛	˛	  !
=>
˛	˛	" $
e
˛	˛	% &
.
˛	˛	& '
Id
˛	˛	' )
)
˛	˛	) *
.
˛	˛	* +!
ValueGeneratedOnAdd
˛	˛	+ >
(
˛	˛	> ?
)
˛	˛	? @
;
˛	˛	@ A
entity
Ä
Ä
 
.
Ä
Ä
 
Property
Ä
Ä
 
(
Ä
Ä
  
e
Ä
Ä
  !
=>
Ä
Ä
" $
e
Ä
Ä
% &
.
Ä
Ä
& '

ModifyDate
Ä
Ä
' 1
)
Ä
Ä
1 2
.
Ä
Ä
2 3
HasColumnType
Ä
Ä
3 @
(
Ä
Ä
@ A
$str
Ä
Ä
A K
)
Ä
Ä
K L
;
Ä
Ä
L M
entity
Ç
Ç
 
.
Ç
Ç
 
Property
Ç
Ç
 
(
Ç
Ç
  
e
Ç
Ç
  !
=>
Ç
Ç
" $
e
Ç
Ç
% &
.
Ç
Ç
& '
Status
Ç
Ç
' -
)
Ç
Ç
- .
.
É
É
 
HasMaxLength
É
É
 !
(
É
É
! "
$num
É
É
" %
)
É
É
% &
.
Ñ
Ñ
 
	IsUnicode
Ñ
Ñ
 
(
Ñ
Ñ
 
false
Ñ
Ñ
 $
)
Ñ
Ñ
$ %
;
Ñ
Ñ
% &
entity
Ü
Ü
 
.
Ü
Ü
 
Property
Ü
Ü
 
(
Ü
Ü
  
e
Ü
Ü
  !
=>
Ü
Ü
" $
e
Ü
Ü
% &
.
Ü
Ü
& '

StatusCode
Ü
Ü
' 1
)
Ü
Ü
1 2
.
á
á
 
HasMaxLength
á
á
 !
(
á
á
! "
$num
á
á
" %
)
á
á
% &
.
à
à
 
	IsUnicode
à
à
 
(
à
à
 
false
à
à
 $
)
à
à
$ %
;
à
à
% &
}
â
â
 
)
â
â
 
;
â
â
 
modelBuilder
ã
ã
 
.
ã
ã
 
Entity
ã
ã
 
<
ã
ã
  
MasterVendor
ã
ã
  ,
>
ã
ã
, -
(
ã
ã
- .
entity
ã
ã
. 4
=>
ã
ã
5 7
{
å
å
 
entity
ç
ç
 
.
ç
ç
 
ToTable
ç
ç
 
(
ç
ç
 
$str
ç
ç
 .
,
ç
ç
. /
$str
ç
ç
0 5
)
ç
ç
5 6
;
ç
ç
6 7
entity
è
è
 
.
è
è
 
Property
è
è
 
(
è
è
  
e
è
è
  !
=>
è
è
" $
e
è
è
% &
.
è
è
& '
BusinessType
è
è
' 3
)
è
è
3 4
.
ê
ê
 
HasMaxLength
ê
ê
 !
(
ê
ê
! "
$num
ê
ê
" %
)
ê
ê
% &
.
ë
ë
 
	IsUnicode
ë
ë
 
(
ë
ë
 
false
ë
ë
 $
)
ë
ë
$ %
;
ë
ë
% &
entity
ì
ì
 
.
ì
ì
 
Property
ì
ì
 
(
ì
ì
  
e
ì
ì
  !
=>
ì
ì
" $
e
ì
ì
% &
.
ì
ì
& ' 
CompanyDescription
ì
ì
' 9
)
ì
ì
9 :
.
î
î
 
HasMaxLength
î
î
 !
(
î
î
! "
$num
î
î
" %
)
î
î
% &
.
ï
ï
 
	IsUnicode
ï
ï
 
(
ï
ï
 
false
ï
ï
 $
)
ï
ï
$ %
;
ï
ï
% &
entity
ó
ó
 
.
ó
ó
 
Property
ó
ó
 
(
ó
ó
  
e
ó
ó
  !
=>
ó
ó
" $
e
ó
ó
% &
.
ó
ó
& '
CompanyName
ó
ó
' 2
)
ó
ó
2 3
.
ò
ò
 
HasMaxLength
ò
ò
 !
(
ò
ò
! "
$num
ò
ò
" %
)
ò
ò
% &
.
ô
ô
 
	IsUnicode
ô
ô
 
(
ô
ô
 
false
ô
ô
 $
)
ô
ô
$ %
;
ô
ô
% &
entity
õ
õ
 
.
õ
õ
 
Property
õ
õ
 
(
õ
õ
  
e
õ
õ
  !
=>
õ
õ
" $
e
õ
õ
% &
.
õ
õ
& '
CreatedDate
õ
õ
' 2
)
õ
õ
2 3
.
õ
õ
3 4
HasColumnType
õ
õ
4 A
(
õ
õ
A B
$str
õ
õ
B L
)
õ
õ
L M
;
õ
õ
M N
entity
ù
ù
 
.
ù
ù
 
Property
ù
ù
 
(
ù
ù
  
e
ù
ù
  !
=>
ù
ù
" $
e
ù
ù
% &
.
ù
ù
& '
EstimattionDate
ù
ù
' 6
)
ù
ù
6 7
.
ù
ù
7 8
HasColumnType
ù
ù
8 E
(
ù
ù
E F
$str
ù
ù
F P
)
ù
ù
P Q
;
ù
ù
Q R
entity
ü
ü
 
.
ü
ü
 
Property
ü
ü
 
(
ü
ü
  
e
ü
ü
  !
=>
ü
ü
" $
e
ü
ü
% &
.
ü
ü
& '
ModifiedDate
ü
ü
' 3
)
ü
ü
3 4
.
ü
ü
4 5
HasColumnType
ü
ü
5 B
(
ü
ü
B C
$str
ü
ü
C M
)
ü
ü
M N
;
ü
ü
N O
entity
°
°
 
.
°
°
 
Property
°
°
 
(
°
°
  
e
°
°
  !
=>
°
°
" $
e
°
°
% &
.
°
°
& '

VendorName
°
°
' 1
)
°
°
1 2
.
¢
¢
 
HasMaxLength
¢
¢
 !
(
¢
¢
! "
$num
¢
¢
" %
)
¢
¢
% &
.
£
£
 
	IsUnicode
£
£
 
(
£
£
 
false
£
£
 $
)
£
£
$ %
;
£
£
% &
}
§
§
 
)
§
§
 
;
§
§
 
modelBuilder
¶
¶
 
.
¶
¶
 
Entity
¶
¶
 
<
¶
¶
  
MasterVendorDd
¶
¶
  .
>
¶
¶
. /
(
¶
¶
/ 0
entity
¶
¶
0 6
=>
¶
¶
7 9
{
ß
ß
 
entity
®
®
 
.
®
®
 
HasNoKey
®
®
 
(
®
®
  
)
®
®
  !
;
®
®
! "
entity
™
™
 
.
™
™
 
ToTable
™
™
 
(
™
™
 
$str
™
™
 2
)
™
™
2 3
;
™
™
3 4
entity
¨
¨
 
.
¨
¨
 
Property
¨
¨
 
(
¨
¨
  
e
¨
¨
  !
=>
¨
¨
" $
e
¨
¨
% &
.
¨
¨
& '
BusinessType
¨
¨
' 3
)
¨
¨
3 4
.
≠
≠
 
HasMaxLength
≠
≠
 !
(
≠
≠
! "
$num
≠
≠
" %
)
≠
≠
% &
.
Æ
Æ
 
	IsUnicode
Æ
Æ
 
(
Æ
Æ
 
false
Æ
Æ
 $
)
Æ
Æ
$ %
;
Æ
Æ
% &
entity
∞
∞
 
.
∞
∞
 
Property
∞
∞
 
(
∞
∞
  
e
∞
∞
  !
=>
∞
∞
" $
e
∞
∞
% &
.
∞
∞
& ' 
CompanyDescription
∞
∞
' 9
)
∞
∞
9 :
.
±
±
 
HasMaxLength
±
±
 !
(
±
±
! "
$num
±
±
" %
)
±
±
% &
.
≤
≤
 
	IsUnicode
≤
≤
 
(
≤
≤
 
false
≤
≤
 $
)
≤
≤
$ %
;
≤
≤
% &
entity
¥
¥
 
.
¥
¥
 
Property
¥
¥
 
(
¥
¥
  
e
¥
¥
  !
=>
¥
¥
" $
e
¥
¥
% &
.
¥
¥
& '
CompanyName
¥
¥
' 2
)
¥
¥
2 3
.
µ
µ
 
HasMaxLength
µ
µ
 !
(
µ
µ
! "
$num
µ
µ
" %
)
µ
µ
% &
.
∂
∂
 
	IsUnicode
∂
∂
 
(
∂
∂
 
false
∂
∂
 $
)
∂
∂
$ %
;
∂
∂
% &
entity
∏
∏
 
.
∏
∏
 
Property
∏
∏
 
(
∏
∏
  
e
∏
∏
  !
=>
∏
∏
" $
e
∏
∏
% &
.
∏
∏
& '
CreatedDate
∏
∏
' 2
)
∏
∏
2 3
.
∏
∏
3 4
HasColumnType
∏
∏
4 A
(
∏
∏
A B
$str
∏
∏
B L
)
∏
∏
L M
;
∏
∏
M N
entity
∫
∫
 
.
∫
∫
 
Property
∫
∫
 
(
∫
∫
  
e
∫
∫
  !
=>
∫
∫
" $
e
∫
∫
% &
.
∫
∫
& '
EstimattionDate
∫
∫
' 6
)
∫
∫
6 7
.
∫
∫
7 8
HasColumnType
∫
∫
8 E
(
∫
∫
E F
$str
∫
∫
F P
)
∫
∫
P Q
;
∫
∫
Q R
entity
º
º
 
.
º
º
 
Property
º
º
 
(
º
º
  
e
º
º
  !
=>
º
º
" $
e
º
º
% &
.
º
º
& '
Id
º
º
' )
)
º
º
) *
.
º
º
* +!
ValueGeneratedOnAdd
º
º
+ >
(
º
º
> ?
)
º
º
? @
;
º
º
@ A
entity
æ
æ
 
.
æ
æ
 
Property
æ
æ
 
(
æ
æ
  
e
æ
æ
  !
=>
æ
æ
" $
e
æ
æ
% &
.
æ
æ
& '
ModifiedDate
æ
æ
' 3
)
æ
æ
3 4
.
æ
æ
4 5
HasColumnType
æ
æ
5 B
(
æ
æ
B C
$str
æ
æ
C M
)
æ
æ
M N
;
æ
æ
N O
entity
¿
¿
 
.
¿
¿
 
Property
¿
¿
 
(
¿
¿
  
e
¿
¿
  !
=>
¿
¿
" $
e
¿
¿
% &
.
¿
¿
& '

VendorName
¿
¿
' 1
)
¿
¿
1 2
.
¡
¡
 
HasMaxLength
¡
¡
 !
(
¡
¡
! "
$num
¡
¡
" %
)
¡
¡
% &
.
¬
¬
 
	IsUnicode
¬
¬
 
(
¬
¬
 
false
¬
¬
 $
)
¬
¬
$ %
;
¬
¬
% &
}
√
√
 
)
√
√
 
;
√
√
 
modelBuilder
≈
≈
 
.
≈
≈
 
Entity
≈
≈
 
<
≈
≈
  
SiteDescription
≈
≈
  /
>
≈
≈
/ 0
(
≈
≈
0 1
entity
≈
≈
1 7
=>
≈
≈
8 :
{
∆
∆
 
entity
«
«
 
.
«
«
 
ToTable
«
«
 
(
«
«
 
$str
«
«
 0
,
«
«
0 1
$str
«
«
2 7
)
«
«
7 8
;
«
«
8 9
entity
…
…
 
.
…
…
 
Property
…
…
 
(
…
…
  
e
…
…
  !
=>
…
…
" $
e
…
…
% &
.
…
…
& '
AdditionComment
…
…
' 6
)
…
…
6 7
.
 
 
 
HasMaxLength
 
 
 !
(
 
 
! "
$num
 
 
" %
)
 
 
% &
.
À
À
 
	IsUnicode
À
À
 
(
À
À
 
false
À
À
 $
)
À
À
$ %
;
À
À
% &
entity
Õ
Õ
 
.
Õ
Õ
 
Property
Õ
Õ
 
(
Õ
Õ
  
e
Õ
Õ
  !
=>
Õ
Õ
" $
e
Õ
Õ
% &
.
Õ
Õ
& '
AdditionalNotes
Õ
Õ
' 6
)
Õ
Õ
6 7
.
Œ
Œ
 
HasMaxLength
Œ
Œ
 !
(
Œ
Œ
! "
$num
Œ
Œ
" %
)
Œ
Œ
% &
.
œ
œ
 
	IsUnicode
œ
œ
 
(
œ
œ
 
false
œ
œ
 $
)
œ
œ
$ %
;
œ
œ
% &
entity
—
—
 
.
—
—
 
Property
—
—
 
(
—
—
  
e
—
—
  !
=>
—
—
" $
e
—
—
% &
.
—
—
& '
CreatedDate
—
—
' 2
)
—
—
2 3
.
—
—
3 4
HasColumnType
—
—
4 A
(
—
—
A B
$str
—
—
B L
)
—
—
L M
;
—
—
M N
entity
”
”
 
.
”
”
 
Property
”
”
 
(
”
”
  
e
”
”
  !
=>
”
”
" $
e
”
”
% &
.
”
”
& '
ExternalArea
”
”
' 3
)
”
”
3 4
.
”
”
4 5
HasColumnType
”
”
5 B
(
”
”
B C
$str
”
”
C S
)
”
”
S T
;
”
”
T U
entity
’
’
 
.
’
’
 
Property
’
’
 
(
’
’
  
e
’
’
  !
=>
’
’
" $
e
’
’
% &
.
’
’
& '
InternalArea
’
’
' 3
)
’
’
3 4
.
’
’
4 5
HasColumnType
’
’
5 B
(
’
’
B C
$str
’
’
C S
)
’
’
S T
;
’
’
T U
entity
◊
◊
 
.
◊
◊
 
Property
◊
◊
 
(
◊
◊
  
e
◊
◊
  !
=>
◊
◊
" $
e
◊
◊
% &
.
◊
◊
& '
Location
◊
◊
' /
)
◊
◊
/ 0
.
ÿ
ÿ
 
HasMaxLength
ÿ
ÿ
 !
(
ÿ
ÿ
! "
$num
ÿ
ÿ
" %
)
ÿ
ÿ
% &
.
Ÿ
Ÿ
 
	IsUnicode
Ÿ
Ÿ
 
(
Ÿ
Ÿ
 
false
Ÿ
Ÿ
 $
)
Ÿ
Ÿ
$ %
;
Ÿ
Ÿ
% &
entity
€
€
 
.
€
€
 
Property
€
€
 
(
€
€
  
e
€
€
  !
=>
€
€
" $
e
€
€
% &
.
€
€
& '
ModifiedDate
€
€
' 3
)
€
€
3 4
.
€
€
4 5
HasColumnType
€
€
5 B
(
€
€
B C
$str
€
€
C M
)
€
€
M N
;
€
€
N O
entity
›
›
 
.
›
›
 
Property
›
›
 
(
›
›
  
e
›
›
  !
=>
›
›
" $
e
›
›
% &
.
›
›
& '
Others
›
›
' -
)
›
›
- .
.
ﬁ
ﬁ
 
HasMaxLength
ﬁ
ﬁ
 !
(
ﬁ
ﬁ
! "
$num
ﬁ
ﬁ
" %
)
ﬁ
ﬁ
% &
.
ﬂ
ﬂ
 
	IsUnicode
ﬂ
ﬂ
 
(
ﬂ
ﬂ
 
false
ﬂ
ﬂ
 $
)
ﬂ
ﬂ
$ %
;
ﬂ
ﬂ
% &
entity
·
·
 
.
·
·
 
Property
·
·
 
(
·
·
  
e
·
·
  !
=>
·
·
" $
e
·
·
% &
.
·
·
& '
PropertyCondition
·
·
' 8
)
·
·
8 9
.
‚
‚
 
HasMaxLength
‚
‚
 !
(
‚
‚
! "
$num
‚
‚
" %
)
‚
‚
% &
.
„
„
 
	IsUnicode
„
„
 
(
„
„
 
false
„
„
 $
)
„
„
$ %
;
„
„
% &
entity
Â
Â
 
.
Â
Â
 
Property
Â
Â
 
(
Â
Â
  
e
Â
Â
  !
=>
Â
Â
" $
e
Â
Â
% &
.
Â
Â
& '
Storage
Â
Â
' .
)
Â
Â
. /
.
Ê
Ê
 
HasMaxLength
Ê
Ê
 !
(
Ê
Ê
! "
$num
Ê
Ê
" %
)
Ê
Ê
% &
.
Á
Á
 
	IsUnicode
Á
Á
 
(
Á
Á
 
false
Á
Á
 $
)
Á
Á
$ %
;
Á
Á
% &
entity
È
È
 
.
È
È
 
HasOne
È
È
 
(
È
È
 
d
È
È
 
=>
È
È
  "
d
È
È
# $
.
È
È
$ %
ValuationRequest
È
È
% 5
)
È
È
5 6
.
Í
Í
 
WithMany
Í
Í
 
(
Í
Í
 
p
Í
Í
 
=>
Í
Í
  "
p
Í
Í
# $
.
Í
Í
$ %
SiteDescriptions
Í
Í
% 5
)
Í
Í
5 6
.
Î
Î
 
HasForeignKey
Î
Î
 "
(
Î
Î
" #
d
Î
Î
# $
=>
Î
Î
% '
d
Î
Î
( )
.
Î
Î
) * 
ValuationRequestId
Î
Î
* <
)
Î
Î
< =
.
Ï
Ï
 
OnDelete
Ï
Ï
 
(
Ï
Ï
 
DeleteBehavior
Ï
Ï
 ,
.
Ï
Ï
, -
ClientSetNull
Ï
Ï
- :
)
Ï
Ï
: ;
.
Ì
Ì
 
HasConstraintName
Ì
Ì
 &
(
Ì
Ì
& '
$str
Ì
Ì
' L
)
Ì
Ì
L M
;
Ì
Ì
M N
}
Ó
Ó
 
)
Ó
Ó
 
;
Ó
Ó
 
modelBuilder


 
.


 
Entity


 
<


   
ValuationAssesment


  2
>


2 3
(


3 4
entity


4 :
=>


; =
{
Ò
Ò
 
entity
Ú
Ú
 
.
Ú
Ú
 
ToTable
Ú
Ú
 
(
Ú
Ú
 
$str
Ú
Ú
 3
,
Ú
Ú
3 4
$str
Ú
Ú
5 :
)
Ú
Ú
: ;
;
Ú
Ú
; <
entity
Ù
Ù
 
.
Ù
Ù
 
Property
Ù
Ù
 
(
Ù
Ù
  
e
Ù
Ù
  !
=>
Ù
Ù
" $
e
Ù
Ù
% &
.
Ù
Ù
& '"
AnnualMaintainceCost
Ù
Ù
' ;
)
Ù
Ù
; <
.
Ù
Ù
< =
HasColumnType
Ù
Ù
= J
(
Ù
Ù
J K
$str
Ù
Ù
K [
)
Ù
Ù
[ \
;
Ù
Ù
\ ]
entity
ˆ
ˆ
 
.
ˆ
ˆ
 
Property
ˆ
ˆ
 
(
ˆ
ˆ
  
e
ˆ
ˆ
  !
=>
ˆ
ˆ
" $
e
ˆ
ˆ
% &
.
ˆ
ˆ
& '
CreatedDate
ˆ
ˆ
' 2
)
ˆ
ˆ
2 3
.
ˆ
ˆ
3 4
HasColumnType
ˆ
ˆ
4 A
(
ˆ
ˆ
A B
$str
ˆ
ˆ
B L
)
ˆ
ˆ
L M
;
ˆ
ˆ
M N
entity
¯
¯
 
.
¯
¯
 
Property
¯
¯
 
(
¯
¯
  
e
¯
¯
  !
=>
¯
¯
" $
e
¯
¯
% &
.
¯
¯
& '
InsuranceDetails
¯
¯
' 7
)
¯
¯
7 8
.
¯
¯
8 9
HasMaxLength
¯
¯
9 E
(
¯
¯
E F
$num
¯
¯
F I
)
¯
¯
I J
;
¯
¯
J K
entity
˙
˙
 
.
˙
˙
 
Property
˙
˙
 
(
˙
˙
  
e
˙
˙
  !
=>
˙
˙
" $
e
˙
˙
% &
.
˙
˙
& '

MarketRate
˙
˙
' 1
)
˙
˙
1 2
.
˙
˙
2 3
HasColumnType
˙
˙
3 @
(
˙
˙
@ A
$str
˙
˙
A Q
)
˙
˙
Q R
;
˙
˙
R S
entity
¸
¸
 
.
¸
¸
 
Property
¸
¸
 
(
¸
¸
  
e
¸
¸
  !
=>
¸
¸
" $
e
¸
¸
% &
.
¸
¸
& '
MarketValue
¸
¸
' 2
)
¸
¸
2 3
.
¸
¸
3 4
HasColumnType
¸
¸
4 A
(
¸
¸
A B
$str
¸
¸
B R
)
¸
¸
R S
;
¸
¸
S T
entity
˛
˛
 
.
˛
˛
 
Property
˛
˛
 
(
˛
˛
  
e
˛
˛
  !
=>
˛
˛
" $
e
˛
˛
% &
.
˛
˛
& '
ModifiedDate
˛
˛
' 3
)
˛
˛
3 4
.
˛
˛
4 5
HasColumnType
˛
˛
5 B
(
˛
˛
B C
$str
˛
˛
C M
)
˛
˛
M N
;
˛
˛
N O
entity
ÄÄ 
.
ÄÄ 
HasOne
ÄÄ 
(
ÄÄ 
d
ÄÄ 
=>
ÄÄ  "
d
ÄÄ# $
.
ÄÄ$ %
Request
ÄÄ% ,
)
ÄÄ, -
.
ÅÅ 
WithMany
ÅÅ 
(
ÅÅ 
p
ÅÅ 
=>
ÅÅ  "
p
ÅÅ# $
.
ÅÅ$ %!
ValuationAssesments
ÅÅ% 8
)
ÅÅ8 9
.
ÇÇ 
HasForeignKey
ÇÇ "
(
ÇÇ" #
d
ÇÇ# $
=>
ÇÇ% '
d
ÇÇ( )
.
ÇÇ) *
	RequestId
ÇÇ* 3
)
ÇÇ3 4
.
ÉÉ 
HasConstraintName
ÉÉ &
(
ÉÉ& '
$str
ÉÉ' O
)
ÉÉO P
;
ÉÉP Q
}
ÑÑ 
)
ÑÑ 
;
ÑÑ 
modelBuilder
ÜÜ 
.
ÜÜ 
Entity
ÜÜ 
<
ÜÜ  )
ValuationComparableEvidence
ÜÜ  ;
>
ÜÜ; <
(
ÜÜ< =
entity
ÜÜ= C
=>
ÜÜD F
{
áá 
entity
àà 
.
àà 
ToTable
àà 
(
àà 
$str
àà <
,
àà< =
$str
àà> C
)
ààC D
;
ààD E
entity
ää 
.
ää 
Property
ää 
(
ää  
e
ää  !
=>
ää" $
e
ää% &
.
ää& '
AddtionalComments
ää' 8
)
ää8 9
.
ää9 :
HasMaxLength
ää: F
(
ääF G
$num
ääG I
)
ääI J
;
ääJ K
entity
åå 
.
åå 
Property
åå 
(
åå  
e
åå  !
=>
åå" $
e
åå% &
.
åå& '
CreatedDate
åå' 2
)
åå2 3
.
åå3 4
HasColumnType
åå4 A
(
ååA B
$str
ååB L
)
ååL M
;
ååM N
entity
éé 
.
éé 
Property
éé 
(
éé  
e
éé  !
=>
éé" $
e
éé% &
.
éé& '
ModifiedDate
éé' 3
)
éé3 4
.
éé4 5
HasColumnType
éé5 B
(
ééB C
$str
ééC M
)
ééM N
;
ééN O
entity
êê 
.
êê 
Property
êê 
(
êê  
e
êê  !
=>
êê" $
e
êê% &
.
êê& '
Price
êê' ,
)
êê, -
.
êê- .
HasColumnType
êê. ;
(
êê; <
$str
êê< L
)
êêL M
;
êêM N
entity
íí 
.
íí 
Property
íí 
(
íí  
e
íí  !
=>
íí" $
e
íí% &
.
íí& '
RateSqFt
íí' /
)
íí/ 0
.
íí0 1
HasColumnType
íí1 >
(
íí> ?
$str
íí? O
)
ííO P
;
ííP Q
entity
îî 
.
îî 
Property
îî 
(
îî  
e
îî  !
=>
îî" $
e
îî% &
.
îî& '
Remarks
îî' .
)
îî. /
.
îî/ 0
HasMaxLength
îî0 <
(
îî< =
$num
îî= @
)
îî@ A
;
îîA B
entity
ññ 
.
ññ 
Property
ññ 
(
ññ  
e
ññ  !
=>
ññ" $
e
ññ% &
.
ññ& '
Type
ññ' +
)
ññ+ ,
.
ññ, -
HasMaxLength
ññ- 9
(
ññ9 :
$num
ññ: <
)
ññ< =
;
ññ= >
entity
òò 
.
òò 
HasOne
òò 
(
òò 
d
òò 
=>
òò  "
d
òò# $
.
òò$ %
Request
òò% ,
)
òò, -
.
ôô 
WithMany
ôô 
(
ôô 
p
ôô 
=>
ôô  "
p
ôô# $
.
ôô$ %*
ValuationComparableEvidences
ôô% A
)
ôôA B
.
öö 
HasForeignKey
öö "
(
öö" #
d
öö# $
=>
öö% '
d
öö( )
.
öö) *
	RequestId
öö* 3
)
öö3 4
.
õõ 
HasConstraintName
õõ &
(
õõ& '
$str
õõ' X
)
õõX Y
;
õõY Z
}
úú 
)
úú 
;
úú 
modelBuilder
ûû 
.
ûû 
Entity
ûû 
<
ûû  
ValuationInvoice
ûû  0
>
ûû0 1
(
ûû1 2
entity
ûû2 8
=>
ûû9 ;
{
üü 
entity
†† 
.
†† 
ToTable
†† 
(
†† 
$str
†† 1
,
††1 2
$str
††3 8
)
††8 9
;
††9 :
entity
¢¢ 
.
¢¢ 
Property
¢¢ 
(
¢¢  
e
¢¢  !
=>
¢¢" $
e
¢¢% &
.
¢¢& '
AccountBankName
¢¢' 6
)
¢¢6 7
.
££ 
HasMaxLength
££ !
(
££! "
$num
££" %
)
££% &
.
§§ 
	IsUnicode
§§ 
(
§§ 
false
§§ $
)
§§$ %
;
§§% &
entity
¶¶ 
.
¶¶ 
Property
¶¶ 
(
¶¶  
e
¶¶  !
=>
¶¶" $
e
¶¶% &
.
¶¶& '
AccountHolderName
¶¶' 8
)
¶¶8 9
.
ßß 
HasMaxLength
ßß !
(
ßß! "
$num
ßß" %
)
ßß% &
.
®® 
	IsUnicode
®® 
(
®® 
false
®® $
)
®®$ %
;
®®% &
entity
™™ 
.
™™ 
Property
™™ 
(
™™  
e
™™  !
=>
™™" $
e
™™% &
.
™™& '
Amount
™™' -
)
™™- .
.
™™. /
HasColumnType
™™/ <
(
™™< =
$str
™™= M
)
™™M N
;
™™N O
entity
¨¨ 
.
¨¨ 
Property
¨¨ 
(
¨¨  
e
¨¨  !
=>
¨¨" $
e
¨¨% &
.
¨¨& '
Balance
¨¨' .
)
¨¨. /
.
¨¨/ 0
HasColumnType
¨¨0 =
(
¨¨= >
$str
¨¨> N
)
¨¨N O
;
¨¨O P
entity
ÆÆ 
.
ÆÆ 
Property
ÆÆ 
(
ÆÆ  
e
ÆÆ  !
=>
ÆÆ" $
e
ÆÆ% &
.
ÆÆ& '
CardBankName
ÆÆ' 3
)
ÆÆ3 4
.
ØØ 
HasMaxLength
ØØ !
(
ØØ! "
$num
ØØ" %
)
ØØ% &
.
∞∞ 
	IsUnicode
∞∞ 
(
∞∞ 
false
∞∞ $
)
∞∞$ %
;
∞∞% &
entity
≤≤ 
.
≤≤ 
Property
≤≤ 
(
≤≤  
e
≤≤  !
=>
≤≤" $
e
≤≤% &
.
≤≤& '
CardHolderName
≤≤' 5
)
≤≤5 6
.
≥≥ 
HasMaxLength
≥≥ !
(
≥≥! "
$num
≥≥" %
)
≥≥% &
.
¥¥ 
	IsUnicode
¥¥ 
(
¥¥ 
false
¥¥ $
)
¥¥$ %
;
¥¥% &
entity
∂∂ 
.
∂∂ 
Property
∂∂ 
(
∂∂  
e
∂∂  !
=>
∂∂" $
e
∂∂% &
.
∂∂& '

CardNumber
∂∂' 1
)
∂∂1 2
.
∑∑ 
HasMaxLength
∑∑ !
(
∑∑! "
$num
∑∑" %
)
∑∑% &
.
∏∏ 
	IsUnicode
∏∏ 
(
∏∏ 
false
∏∏ $
)
∏∏$ %
;
∏∏% &
entity
∫∫ 
.
∫∫ 
Property
∫∫ 
(
∫∫  
e
∫∫  !
=>
∫∫" $
e
∫∫% &
.
∫∫& '
CheckBankName
∫∫' 4
)
∫∫4 5
.
ªª 
HasMaxLength
ªª !
(
ªª! "
$num
ªª" %
)
ªª% &
.
ºº 
	IsUnicode
ºº 
(
ºº 
false
ºº $
)
ºº$ %
;
ºº% &
entity
ææ 
.
ææ 
Property
ææ 
(
ææ  
e
ææ  !
=>
ææ" $
e
ææ% &
.
ææ& '
	CheckDate
ææ' 0
)
ææ0 1
.
ææ1 2
HasColumnType
ææ2 ?
(
ææ? @
$str
ææ@ F
)
ææF G
;
ææG H
entity
¿¿ 
.
¿¿ 
Property
¿¿ 
(
¿¿  
e
¿¿  !
=>
¿¿" $
e
¿¿% &
.
¿¿& '

CheckNumer
¿¿' 1
)
¿¿1 2
.
¡¡ 
HasMaxLength
¡¡ !
(
¡¡! "
$num
¡¡" %
)
¡¡% &
.
¬¬ 
	IsUnicode
¬¬ 
(
¬¬ 
false
¬¬ $
)
¬¬$ %
;
¬¬% &
entity
ƒƒ 
.
ƒƒ 
Property
ƒƒ 
(
ƒƒ  
e
ƒƒ  !
=>
ƒƒ" $
e
ƒƒ% &
.
ƒƒ& ' 
ChequeRecievedDate
ƒƒ' 9
)
ƒƒ9 :
.
ƒƒ: ;
HasColumnType
ƒƒ; H
(
ƒƒH I
$str
ƒƒI O
)
ƒƒO P
;
ƒƒP Q
entity
∆∆ 
.
∆∆ 
Property
∆∆ 
(
∆∆  
e
∆∆  !
=>
∆∆" $
e
∆∆% &
.
∆∆& '
CreatedDate
∆∆' 2
)
∆∆2 3
.
∆∆3 4
HasColumnType
∆∆4 A
(
∆∆A B
$str
∆∆B L
)
∆∆L M
;
∆∆M N
entity
»» 
.
»» 
Property
»» 
(
»»  
e
»»  !
=>
»»" $
e
»»% &
.
»»& '

ExpireDate
»»' 1
)
»»1 2
.
»»2 3
HasColumnType
»»3 @
(
»»@ A
$str
»»A G
)
»»G H
;
»»H I
entity
   
.
   
Property
   
(
    
e
    !
=>
  " $
e
  % &
.
  & '
ModifiedDate
  ' 3
)
  3 4
.
  4 5
HasColumnType
  5 B
(
  B C
$str
  C M
)
  M N
;
  N O
entity
ÃÃ 
.
ÃÃ 
Property
ÃÃ 
(
ÃÃ  
e
ÃÃ  !
=>
ÃÃ" $
e
ÃÃ% &
.
ÃÃ& '
Note
ÃÃ' +
)
ÃÃ+ ,
.
ÃÃ, -
	IsUnicode
ÃÃ- 6
(
ÃÃ6 7
false
ÃÃ7 <
)
ÃÃ< =
;
ÃÃ= >
entity
ŒŒ 
.
ŒŒ 
Property
ŒŒ 
(
ŒŒ  
e
ŒŒ  !
=>
ŒŒ" $
e
ŒŒ% &
.
ŒŒ& '
ReferenceNo
ŒŒ' 2
)
ŒŒ2 3
.
œœ 
HasMaxLength
œœ !
(
œœ! "
$num
œœ" %
)
œœ% &
.
–– 
	IsUnicode
–– 
(
–– 
false
–– $
)
––$ %
.
—— 
HasColumnName
—— "
(
——" #
$str
——# 0
)
——0 1
;
——1 2
entity
”” 
.
”” 
Property
”” 
(
””  
e
””  !
=>
””" $
e
””% &
.
””& '
TransactionDate
””' 6
)
””6 7
.
””7 8
HasColumnType
””8 E
(
””E F
$str
””F L
)
””L M
;
””M N
entity
’’ 
.
’’ 
Property
’’ 
(
’’  
e
’’  !
=>
’’" $
e
’’% &
.
’’& '
TransactionId
’’' 4
)
’’4 5
.
÷÷ 
HasMaxLength
÷÷ !
(
÷÷! "
$num
÷÷" %
)
÷÷% &
.
◊◊ 
	IsUnicode
◊◊ 
(
◊◊ 
false
◊◊ $
)
◊◊$ %
;
◊◊% &
entity
ŸŸ 
.
ŸŸ 
HasOne
ŸŸ 
(
ŸŸ 
d
ŸŸ 
=>
ŸŸ  "
d
ŸŸ# $
.
ŸŸ$ %
ValuationRequest
ŸŸ% 5
)
ŸŸ5 6
.
⁄⁄ 
WithMany
⁄⁄ 
(
⁄⁄ 
p
⁄⁄ 
=>
⁄⁄  "
p
⁄⁄# $
.
⁄⁄$ %
ValuationInvoices
⁄⁄% 6
)
⁄⁄6 7
.
€€ 
HasForeignKey
€€ "
(
€€" #
d
€€# $
=>
€€% '
d
€€( )
.
€€) * 
ValuationRequestId
€€* <
)
€€< =
.
‹‹ 
OnDelete
‹‹ 
(
‹‹ 
DeleteBehavior
‹‹ ,
.
‹‹, -
ClientSetNull
‹‹- :
)
‹‹: ;
.
›› 
HasConstraintName
›› &
(
››& '
$str
››' G
)
››G H
;
››H I
}
ﬁﬁ 
)
ﬁﬁ 
;
ﬁﬁ 
modelBuilder
‡‡ 
.
‡‡ 
Entity
‡‡ 
<
‡‡  
ValuationPayment
‡‡  0
>
‡‡0 1
(
‡‡1 2
entity
‡‡2 8
=>
‡‡9 ;
{
·· 
entity
‚‚ 
.
‚‚ 
ToTable
‚‚ 
(
‚‚ 
$str
‚‚ 1
,
‚‚1 2
$str
‚‚3 8
)
‚‚8 9
;
‚‚9 :
entity
‰‰ 
.
‰‰ 
Property
‰‰ 
(
‰‰  
e
‰‰  !
=>
‰‰" $
e
‰‰% &
.
‰‰& '
AccountBankName
‰‰' 6
)
‰‰6 7
.
ÂÂ 
HasMaxLength
ÂÂ !
(
ÂÂ! "
$num
ÂÂ" %
)
ÂÂ% &
.
ÊÊ 
	IsUnicode
ÊÊ 
(
ÊÊ 
false
ÊÊ $
)
ÊÊ$ %
;
ÊÊ% &
entity
ËË 
.
ËË 
Property
ËË 
(
ËË  
e
ËË  !
=>
ËË" $
e
ËË% &
.
ËË& '
AccountHolderName
ËË' 8
)
ËË8 9
.
ÈÈ 
HasMaxLength
ÈÈ !
(
ÈÈ! "
$num
ÈÈ" %
)
ÈÈ% &
.
ÍÍ 
	IsUnicode
ÍÍ 
(
ÍÍ 
false
ÍÍ $
)
ÍÍ$ %
;
ÍÍ% &
entity
ÏÏ 
.
ÏÏ 
Property
ÏÏ 
(
ÏÏ  
e
ÏÏ  !
=>
ÏÏ" $
e
ÏÏ% &
.
ÏÏ& '
Amount
ÏÏ' -
)
ÏÏ- .
.
ÏÏ. /
HasColumnType
ÏÏ/ <
(
ÏÏ< =
$str
ÏÏ= M
)
ÏÏM N
;
ÏÏN O
entity
ÓÓ 
.
ÓÓ 
Property
ÓÓ 
(
ÓÓ  
e
ÓÓ  !
=>
ÓÓ" $
e
ÓÓ% &
.
ÓÓ& '
Balance
ÓÓ' .
)
ÓÓ. /
.
ÓÓ/ 0
HasColumnType
ÓÓ0 =
(
ÓÓ= >
$str
ÓÓ> N
)
ÓÓN O
;
ÓÓO P
entity
 
.
 
Property
 
(
  
e
  !
=>
" $
e
% &
.
& '
CardBankName
' 3
)
3 4
.
ÒÒ 
HasMaxLength
ÒÒ !
(
ÒÒ! "
$num
ÒÒ" %
)
ÒÒ% &
.
ÚÚ 
	IsUnicode
ÚÚ 
(
ÚÚ 
false
ÚÚ $
)
ÚÚ$ %
;
ÚÚ% &
entity
ÙÙ 
.
ÙÙ 
Property
ÙÙ 
(
ÙÙ  
e
ÙÙ  !
=>
ÙÙ" $
e
ÙÙ% &
.
ÙÙ& '
CardHolderName
ÙÙ' 5
)
ÙÙ5 6
.
ıı 
HasMaxLength
ıı !
(
ıı! "
$num
ıı" %
)
ıı% &
.
ˆˆ 
	IsUnicode
ˆˆ 
(
ˆˆ 
false
ˆˆ $
)
ˆˆ$ %
;
ˆˆ% &
entity
¯¯ 
.
¯¯ 
Property
¯¯ 
(
¯¯  
e
¯¯  !
=>
¯¯" $
e
¯¯% &
.
¯¯& '

CardNumber
¯¯' 1
)
¯¯1 2
.
˘˘ 
HasMaxLength
˘˘ !
(
˘˘! "
$num
˘˘" %
)
˘˘% &
.
˙˙ 
	IsUnicode
˙˙ 
(
˙˙ 
false
˙˙ $
)
˙˙$ %
;
˙˙% &
entity
¸¸ 
.
¸¸ 
Property
¸¸ 
(
¸¸  
e
¸¸  !
=>
¸¸" $
e
¸¸% &
.
¸¸& '
CheckBankName
¸¸' 4
)
¸¸4 5
.
˝˝ 
HasMaxLength
˝˝ !
(
˝˝! "
$num
˝˝" %
)
˝˝% &
.
˛˛ 
	IsUnicode
˛˛ 
(
˛˛ 
false
˛˛ $
)
˛˛$ %
;
˛˛% &
entity
ÄÄ 
.
ÄÄ 
Property
ÄÄ 
(
ÄÄ  
e
ÄÄ  !
=>
ÄÄ" $
e
ÄÄ% &
.
ÄÄ& '
	CheckDate
ÄÄ' 0
)
ÄÄ0 1
.
ÄÄ1 2
HasColumnType
ÄÄ2 ?
(
ÄÄ? @
$str
ÄÄ@ F
)
ÄÄF G
;
ÄÄG H
entity
ÇÇ 
.
ÇÇ 
Property
ÇÇ 
(
ÇÇ  
e
ÇÇ  !
=>
ÇÇ" $
e
ÇÇ% &
.
ÇÇ& '

CheckNumer
ÇÇ' 1
)
ÇÇ1 2
.
ÉÉ 
HasMaxLength
ÉÉ !
(
ÉÉ! "
$num
ÉÉ" %
)
ÉÉ% &
.
ÑÑ 
	IsUnicode
ÑÑ 
(
ÑÑ 
false
ÑÑ $
)
ÑÑ$ %
;
ÑÑ% &
entity
ÜÜ 
.
ÜÜ 
Property
ÜÜ 
(
ÜÜ  
e
ÜÜ  !
=>
ÜÜ" $
e
ÜÜ% &
.
ÜÜ& ' 
ChequeRecievedDate
ÜÜ' 9
)
ÜÜ9 :
.
ÜÜ: ;
HasColumnType
ÜÜ; H
(
ÜÜH I
$str
ÜÜI O
)
ÜÜO P
;
ÜÜP Q
entity
àà 
.
àà 
Property
àà 
(
àà  
e
àà  !
=>
àà" $
e
àà% &
.
àà& '
CreatedDate
àà' 2
)
àà2 3
.
àà3 4
HasColumnType
àà4 A
(
ààA B
$str
ààB L
)
ààL M
;
ààM N
entity
ää 
.
ää 
Property
ää 
(
ää  
e
ää  !
=>
ää" $
e
ää% &
.
ää& '

ExpireDate
ää' 1
)
ää1 2
.
ää2 3
HasColumnType
ää3 @
(
ää@ A
$str
ääA G
)
ääG H
;
ääH I
entity
åå 
.
åå 
Property
åå 
(
åå  
e
åå  !
=>
åå" $
e
åå% &
.
åå& '
ModifiedDate
åå' 3
)
åå3 4
.
åå4 5
HasColumnType
åå5 B
(
ååB C
$str
ååC M
)
ååM N
;
ååN O
entity
éé 
.
éé 
Property
éé 
(
éé  
e
éé  !
=>
éé" $
e
éé% &
.
éé& '
Note
éé' +
)
éé+ ,
.
éé, -
	IsUnicode
éé- 6
(
éé6 7
false
éé7 <
)
éé< =
;
éé= >
entity
êê 
.
êê 
Property
êê 
(
êê  
e
êê  !
=>
êê" $
e
êê% &
.
êê& '
ReferenceNo
êê' 2
)
êê2 3
.
ëë 
HasMaxLength
ëë !
(
ëë! "
$num
ëë" %
)
ëë% &
.
íí 
	IsUnicode
íí 
(
íí 
false
íí $
)
íí$ %
.
ìì 
HasColumnName
ìì "
(
ìì" #
$str
ìì# 0
)
ìì0 1
;
ìì1 2
entity
ïï 
.
ïï 
Property
ïï 
(
ïï  
e
ïï  !
=>
ïï" $
e
ïï% &
.
ïï& '
TransactionDate
ïï' 6
)
ïï6 7
.
ïï7 8
HasColumnType
ïï8 E
(
ïïE F
$str
ïïF L
)
ïïL M
;
ïïM N
entity
óó 
.
óó 
Property
óó 
(
óó  
e
óó  !
=>
óó" $
e
óó% &
.
óó& '
TransactionId
óó' 4
)
óó4 5
.
òò 
HasMaxLength
òò !
(
òò! "
$num
òò" %
)
òò% &
.
ôô 
	IsUnicode
ôô 
(
ôô 
false
ôô $
)
ôô$ %
;
ôô% &
entity
õõ 
.
õõ 
HasOne
õõ 
(
õõ 
d
õõ 
=>
õõ  "
d
õõ# $
.
õõ$ %
ValuationRequest
õõ% 5
)
õõ5 6
.
úú 
WithMany
úú 
(
úú 
p
úú 
=>
úú  "
p
úú# $
.
úú$ %%
InverseValuationRequest
úú% <
)
úú< =
.
ùù 
HasForeignKey
ùù "
(
ùù" #
d
ùù# $
=>
ùù% '
d
ùù( )
.
ùù) * 
ValuationRequestId
ùù* <
)
ùù< =
.
ûû 
OnDelete
ûû 
(
ûû 
DeleteBehavior
ûû ,
.
ûû, -
ClientSetNull
ûû- :
)
ûû: ;
.
üü 
HasConstraintName
üü &
(
üü& '
$str
üü' G
)
üüG H
;
üüH I
}
†† 
)
†† 
;
†† 
modelBuilder
¢¢ 
.
¢¢ 
Entity
¢¢ 
<
¢¢  %
ValuationPaymentInvoice
¢¢  7
>
¢¢7 8
(
¢¢8 9
entity
¢¢9 ?
=>
¢¢@ B
{
££ 
entity
§§ 
.
§§ 
ToTable
§§ 
(
§§ 
$str
§§ 8
,
§§8 9
$str
§§: ?
)
§§? @
;
§§@ A
entity
¶¶ 
.
¶¶ 
Property
¶¶ 
(
¶¶  
e
¶¶  !
=>
¶¶" $
e
¶¶% &
.
¶¶& '
Amount
¶¶' -
)
¶¶- .
.
¶¶. /
HasColumnType
¶¶/ <
(
¶¶< =
$str
¶¶= M
)
¶¶M N
;
¶¶N O
entity
®® 
.
®® 
Property
®® 
(
®®  
e
®®  !
=>
®®" $
e
®®% &
.
®®& '
Balance
®®' .
)
®®. /
.
®®/ 0
HasColumnType
®®0 =
(
®®= >
$str
®®> N
)
®®N O
;
®®O P
entity
™™ 
.
™™ 
Property
™™ 
(
™™  
e
™™  !
=>
™™" $
e
™™% &
.
™™& '
CreatedDate
™™' 2
)
™™2 3
.
™™3 4
HasColumnType
™™4 A
(
™™A B
$str
™™B L
)
™™L M
;
™™M N
entity
¨¨ 
.
¨¨ 
Property
¨¨ 
(
¨¨  
e
¨¨  !
=>
¨¨" $
e
¨¨% &
.
¨¨& '
	InvoiceNo
¨¨' 0
)
¨¨0 1
.
≠≠ 
HasMaxLength
≠≠ !
(
≠≠! "
$num
≠≠" %
)
≠≠% &
.
ÆÆ 
	IsUnicode
ÆÆ 
(
ÆÆ 
false
ÆÆ $
)
ÆÆ$ %
;
ÆÆ% &
entity
∞∞ 
.
∞∞ 
Property
∞∞ 
(
∞∞  
e
∞∞  !
=>
∞∞" $
e
∞∞% &
.
∞∞& '
ModifiedDate
∞∞' 3
)
∞∞3 4
.
∞∞4 5
HasColumnType
∞∞5 B
(
∞∞B C
$str
∞∞C M
)
∞∞M N
;
∞∞N O
entity
≤≤ 
.
≤≤ 
Property
≤≤ 
(
≤≤  
e
≤≤  !
=>
≤≤" $
e
≤≤% &
.
≤≤& '
Note
≤≤' +
)
≤≤+ ,
.
≤≤, -
	IsUnicode
≤≤- 6
(
≤≤6 7
false
≤≤7 <
)
≤≤< =
;
≤≤= >
entity
¥¥ 
.
¥¥ 
Property
¥¥ 
(
¥¥  
e
¥¥  !
=>
¥¥" $
e
¥¥% &
.
¥¥& '
ReferenceNo
¥¥' 2
)
¥¥2 3
.
µµ 
HasMaxLength
µµ !
(
µµ! "
$num
µµ" %
)
µµ% &
.
∂∂ 
	IsUnicode
∂∂ 
(
∂∂ 
false
∂∂ $
)
∂∂$ %
.
∑∑ 
HasColumnName
∑∑ "
(
∑∑" #
$str
∑∑# 0
)
∑∑0 1
;
∑∑1 2
entity
ππ 
.
ππ 
Property
ππ 
(
ππ  
e
ππ  !
=>
ππ" $
e
ππ% &
.
ππ& '
TransactionDate
ππ' 6
)
ππ6 7
.
ππ7 8
HasColumnType
ππ8 E
(
ππE F
$str
ππF L
)
ππL M
;
ππM N
entity
ªª 
.
ªª 
HasOne
ªª 
(
ªª 
d
ªª 
=>
ªª  "
d
ªª# $
.
ªª$ %
ValuationRequest
ªª% 5
)
ªª5 6
.
ºº 
WithMany
ºº 
(
ºº 
p
ºº 
=>
ºº  "
p
ºº# $
.
ºº$ %%
InverseValuationRequest
ºº% <
)
ºº< =
.
ΩΩ 
HasForeignKey
ΩΩ "
(
ΩΩ" #
d
ΩΩ# $
=>
ΩΩ% '
d
ΩΩ( )
.
ΩΩ) * 
ValuationRequestId
ΩΩ* <
)
ΩΩ< =
.
ææ 
OnDelete
ææ 
(
ææ 
DeleteBehavior
ææ ,
.
ææ, -
ClientSetNull
ææ- :
)
ææ: ;
.
øø 
HasConstraintName
øø &
(
øø& '
$str
øø' G
)
øøG H
;
øøH I
}
¿¿ 
)
¿¿ 
;
¿¿ 
modelBuilder
¬¬ 
.
¬¬ 
Entity
¬¬ 
<
¬¬  (
ValuationPaymentInvoiceMap
¬¬  :
>
¬¬: ;
(
¬¬; <
entity
¬¬< B
=>
¬¬C E
{
√√ 
entity
ƒƒ 
.
ƒƒ 
ToTable
ƒƒ 
(
ƒƒ 
$str
ƒƒ ;
,
ƒƒ; <
$str
ƒƒ= B
)
ƒƒB C
;
ƒƒC D
entity
∆∆ 
.
∆∆ 
Property
∆∆ 
(
∆∆  
e
∆∆  !
=>
∆∆" $
e
∆∆% &
.
∆∆& '
CreatedDate
∆∆' 2
)
∆∆2 3
.
∆∆3 4
HasColumnType
∆∆4 A
(
∆∆A B
$str
∆∆B L
)
∆∆L M
;
∆∆M N
entity
»» 
.
»» 
Property
»» 
(
»»  
e
»»  !
=>
»»" $
e
»»% &
.
»»& '
ModifiedDate
»»' 3
)
»»3 4
.
»»4 5
HasColumnType
»»5 B
(
»»B C
$str
»»C M
)
»»M N
;
»»N O
entity
   
.
   
Property
   
(
    
e
    !
=>
  " $
e
  % &
.
  & '
Note
  ' +
)
  + ,
.
  , -
	IsUnicode
  - 6
(
  6 7
false
  7 <
)
  < =
;
  = >
entity
ÃÃ 
.
ÃÃ 
HasOne
ÃÃ 
(
ÃÃ 
d
ÃÃ 
=>
ÃÃ  "
d
ÃÃ# $
.
ÃÃ$ %
Invoice
ÃÃ% ,
)
ÃÃ, -
.
ÕÕ 
WithMany
ÕÕ 
(
ÕÕ 
p
ÕÕ 
=>
ÕÕ  "
p
ÕÕ# $
.
ÕÕ$ %)
ValuationPaymentInvoiceMaps
ÕÕ% @
)
ÕÕ@ A
.
ŒŒ 
HasForeignKey
ŒŒ "
(
ŒŒ" #
d
ŒŒ# $
=>
ŒŒ% '
d
ŒŒ( )
.
ŒŒ) *
	InvoiceId
ŒŒ* 3
)
ŒŒ3 4
.
œœ 
OnDelete
œœ 
(
œœ 
DeleteBehavior
œœ ,
.
œœ, -
ClientSetNull
œœ- :
)
œœ: ;
.
–– 
HasConstraintName
–– &
(
––& '
$str
––' G
)
––G H
;
––H I
entity
““ 
.
““ 
HasOne
““ 
(
““ 
d
““ 
=>
““  "
d
““# $
.
““$ %
PaymentInvoice
““% 3
)
““3 4
.
”” 
WithMany
”” 
(
”” 
p
”” 
=>
””  "
p
””# $
.
””$ %)
ValuationPaymentInvoiceMaps
””% @
)
””@ A
.
‘‘ 
HasForeignKey
‘‘ "
(
‘‘" #
d
‘‘# $
=>
‘‘% '
d
‘‘( )
.
‘‘) *
PaymentInvoiceId
‘‘* :
)
‘‘: ;
.
’’ 
OnDelete
’’ 
(
’’ 
DeleteBehavior
’’ ,
.
’’, -
ClientSetNull
’’- :
)
’’: ;
.
÷÷ 
HasConstraintName
÷÷ &
(
÷÷& '
$str
÷÷' G
)
÷÷G H
;
÷÷H I
}
◊◊ 
)
◊◊ 
;
◊◊ 
modelBuilder
ŸŸ 
.
ŸŸ 
Entity
ŸŸ 
<
ŸŸ   
ValuationQuotation
ŸŸ  2
>
ŸŸ2 3
(
ŸŸ3 4
entity
ŸŸ4 :
=>
ŸŸ; =
{
⁄⁄ 
entity
€€ 
.
€€ 
ToTable
€€ 
(
€€ 
$str
€€ 3
,
€€3 4
$str
€€5 :
)
€€: ;
;
€€; <
entity
›› 
.
›› 
Property
›› 
(
››  
e
››  !
=>
››" $
e
››% &
.
››& '
CreatedDate
››' 2
)
››2 3
.
››3 4
HasColumnType
››4 A
(
››A B
$str
››B L
)
››L M
;
››M N
entity
ﬂﬂ 
.
ﬂﬂ 
Property
ﬂﬂ 
(
ﬂﬂ  
e
ﬂﬂ  !
=>
ﬂﬂ" $
e
ﬂﬂ% &
.
ﬂﬂ& '
Discount
ﬂﬂ' /
)
ﬂﬂ/ 0
.
ﬂﬂ0 1
HasColumnType
ﬂﬂ1 >
(
ﬂﬂ> ?
$str
ﬂﬂ? O
)
ﬂﬂO P
;
ﬂﬂP Q
entity
·· 
.
·· 
Property
·· 
(
··  
e
··  !
=>
··" $
e
··% &
.
··& '
InstructorCharges
··' 8
)
··8 9
.
··9 :
HasColumnType
··: G
(
··G H
$str
··H X
)
··X Y
;
··Y Z
entity
„„ 
.
„„ 
Property
„„ 
(
„„  
e
„„  !
=>
„„" $
e
„„% &
.
„„& '
ModifiedDate
„„' 3
)
„„3 4
.
„„4 5
HasColumnType
„„5 B
(
„„B C
$str
„„C M
)
„„M N
;
„„N O
entity
ÂÂ 
.
ÂÂ 
Property
ÂÂ 
(
ÂÂ  
e
ÂÂ  !
=>
ÂÂ" $
e
ÂÂ% &
.
ÂÂ& '
Note
ÂÂ' +
)
ÂÂ+ ,
.
ÂÂ, -
	IsUnicode
ÂÂ- 6
(
ÂÂ6 7
false
ÂÂ7 <
)
ÂÂ< =
;
ÂÂ= >
entity
ÁÁ 
.
ÁÁ 
Property
ÁÁ 
(
ÁÁ  
e
ÁÁ  !
=>
ÁÁ" $
e
ÁÁ% &
.
ÁÁ& '
OtherCharges
ÁÁ' 3
)
ÁÁ3 4
.
ÁÁ4 5
HasColumnType
ÁÁ5 B
(
ÁÁB C
$str
ÁÁC S
)
ÁÁS T
;
ÁÁT U
entity
ÈÈ 
.
ÈÈ 
Property
ÈÈ 
(
ÈÈ  
e
ÈÈ  !
=>
ÈÈ" $
e
ÈÈ% &
.
ÈÈ& '
ReferenceNo
ÈÈ' 2
)
ÈÈ2 3
.
ÍÍ 
HasMaxLength
ÍÍ !
(
ÍÍ! "
$num
ÍÍ" %
)
ÍÍ% &
.
ÎÎ 
	IsUnicode
ÎÎ 
(
ÎÎ 
false
ÎÎ $
)
ÎÎ$ %
.
ÏÏ 
HasColumnName
ÏÏ "
(
ÏÏ" #
$str
ÏÏ# 0
)
ÏÏ0 1
;
ÏÏ1 2
entity
ÓÓ 
.
ÓÓ 
Property
ÓÓ 
(
ÓÓ  
e
ÓÓ  !
=>
ÓÓ" $
e
ÓÓ% &
.
ÓÓ& '
TotalFee
ÓÓ' /
)
ÓÓ/ 0
.
ÓÓ0 1
HasColumnType
ÓÓ1 >
(
ÓÓ> ?
$str
ÓÓ? O
)
ÓÓO P
;
ÓÓP Q
entity
 
.
 
Property
 
(
  
e
  !
=>
" $
e
% &
.
& '
ValuationFee
' 3
)
3 4
.
4 5
HasColumnType
5 B
(
B C
$str
C S
)
S T
;
T U
entity
ÚÚ 
.
ÚÚ 
Property
ÚÚ 
(
ÚÚ  
e
ÚÚ  !
=>
ÚÚ" $
e
ÚÚ% &
.
ÚÚ& '
Vat
ÚÚ' *
)
ÚÚ* +
.
ÛÛ 
HasColumnType
ÛÛ "
(
ÛÛ" #
$str
ÛÛ# 3
)
ÛÛ3 4
.
ÙÙ 
HasColumnName
ÙÙ "
(
ÙÙ" #
$str
ÙÙ# (
)
ÙÙ( )
;
ÙÙ) *
entity
ˆˆ 
.
ˆˆ 
HasOne
ˆˆ 
(
ˆˆ 
d
ˆˆ 
=>
ˆˆ  "
d
ˆˆ# $
.
ˆˆ$ %
ValuationRequest
ˆˆ% 5
)
ˆˆ5 6
.
˜˜ 
WithMany
˜˜ 
(
˜˜ 
p
˜˜ 
=>
˜˜  "
p
˜˜# $
.
˜˜$ %!
ValuationQuotations
˜˜% 8
)
˜˜8 9
.
¯¯ 
HasForeignKey
¯¯ "
(
¯¯" #
d
¯¯# $
=>
¯¯% '
d
¯¯( )
.
¯¯) * 
ValuationRequestId
¯¯* <
)
¯¯< =
.
˘˘ 
OnDelete
˘˘ 
(
˘˘ 
DeleteBehavior
˘˘ ,
.
˘˘, -
ClientSetNull
˘˘- :
)
˘˘: ;
.
˙˙ 
HasConstraintName
˙˙ &
(
˙˙& '
$str
˙˙' G
)
˙˙G H
;
˙˙H I
}
˚˚ 
)
˚˚ 
;
˚˚ 
modelBuilder
˝˝ 
.
˝˝ 
Entity
˝˝ 
<
˝˝  
ValuationRequest
˝˝  0
>
˝˝0 1
(
˝˝1 2
entity
˝˝2 8
=>
˝˝9 ;
{
˛˛ 
entity
ˇˇ 
.
ˇˇ 
ToTable
ˇˇ 
(
ˇˇ 
$str
ˇˇ 1
,
ˇˇ1 2
$str
ˇˇ3 8
)
ˇˇ8 9
;
ˇˇ9 :
entity
ÅÅ 
.
ÅÅ 
Property
ÅÅ 
(
ÅÅ  
e
ÅÅ  !
=>
ÅÅ" $
e
ÅÅ% &
.
ÅÅ& '
ApproverComment
ÅÅ' 6
)
ÅÅ6 7
.
ÇÇ 
HasMaxLength
ÇÇ !
(
ÇÇ! "
$num
ÇÇ" %
)
ÇÇ% &
.
ÉÉ 
	IsUnicode
ÉÉ 
(
ÉÉ 
false
ÉÉ $
)
ÉÉ$ %
;
ÉÉ% &
entity
ÖÖ 
.
ÖÖ 
Property
ÖÖ 
(
ÖÖ  
e
ÖÖ  !
=>
ÖÖ" $
e
ÖÖ% &
.
ÖÖ& ' 
ApproverUpdateDate
ÖÖ' 9
)
ÖÖ9 :
.
ÖÖ: ;
HasColumnType
ÖÖ; H
(
ÖÖH I
$str
ÖÖI S
)
ÖÖS T
;
ÖÖT U
entity
áá 
.
áá 
Property
áá 
(
áá  
e
áá  !
=>
áá" $
e
áá% &
.
áá& '
AssignRemark
áá' 3
)
áá3 4
.
àà 
HasMaxLength
àà !
(
àà! "
$num
àà" %
)
àà% &
.
ââ 
	IsUnicode
ââ 
(
ââ 
false
ââ $
)
ââ$ %
;
ââ% &
entity
ãã 
.
ãã 
Property
ãã 
(
ãã  
e
ãã  !
=>
ãã" $
e
ãã% &
.
ãã& '
CreatedDate
ãã' 2
)
ãã2 3
.
ãã3 4
HasColumnType
ãã4 A
(
ããA B
$str
ããB L
)
ããL M
;
ããM N
entity
çç 
.
çç 
Property
çç 
(
çç  
e
çç  !
=>
çç" $
e
çç% &
.
çç& '
ModifiedDate
çç' 3
)
çç3 4
.
çç4 5
HasColumnType
çç5 B
(
ççB C
$str
ççC M
)
ççM N
;
ççN O
entity
èè 
.
èè 
Property
èè 
(
èè  
e
èè  !
=>
èè" $
e
èè% &
.
èè& '
OtherReferenceNo
èè' 7
)
èè7 8
.
êê 
HasMaxLength
êê !
(
êê! "
$num
êê" %
)
êê% &
.
ëë 
	IsUnicode
ëë 
(
ëë 
false
ëë $
)
ëë$ %
.
íí 
HasColumnName
íí "
(
íí" #
$str
íí# 5
)
íí5 6
;
íí6 7
entity
îî 
.
îî 
Property
îî 
(
îî  
e
îî  !
=>
îî" $
e
îî% &
.
îî& '
ReferenceNo
îî' 2
)
îî2 3
.
ïï 
HasMaxLength
ïï !
(
ïï! "
$num
ïï" %
)
ïï% &
.
ññ 
	IsUnicode
ññ 
(
ññ 
false
ññ $
)
ññ$ %
.
óó 
HasColumnName
óó "
(
óó" #
$str
óó# 0
)
óó0 1
;
óó1 2
entity
ôô 
.
ôô 
Property
ôô 
(
ôô  
e
ôô  !
=>
ôô" $
e
ôô% &
.
ôô& '
StatusComment
ôô' 4
)
ôô4 5
.
öö 
HasMaxLength
öö !
(
öö! "
$num
öö" %
)
öö% &
.
õõ 
	IsUnicode
õõ 
(
õõ 
false
õõ $
)
õõ$ %
;
õõ% &
entity
ùù 
.
ùù 
Property
ùù 
(
ùù  
e
ùù  !
=>
ùù" $
e
ùù% &
.
ùù& '
ValuationDate
ùù' 4
)
ùù4 5
.
ùù5 6
HasColumnType
ùù6 C
(
ùùC D
$str
ùùD J
)
ùùJ K
;
ùùK L
entity
üü 
.
üü 
Property
üü 
(
üü  
e
üü  !
=>
üü" $
e
üü% &
.
üü& '
ValuerComment
üü' 4
)
üü4 5
.
†† 
HasMaxLength
†† !
(
††! "
$num
††" %
)
††% &
.
°° 
	IsUnicode
°° 
(
°° 
false
°° $
)
°°$ %
;
°°% &
entity
££ 
.
££ 
Property
££ 
(
££  
e
££  !
=>
££" $
e
££% &
.
££& '
ValuerUpdateDate
££' 7
)
££7 8
.
££8 9
HasColumnType
££9 F
(
££F G
$str
££G Q
)
££Q R
;
££R S
entity
•• 
.
•• 
HasOne
•• 
(
•• 
d
•• 
=>
••  "
d
••# $
.
••$ %
Approver
••% -
)
••- .
.
¶¶ 
WithMany
¶¶ 
(
¶¶ 
p
¶¶ 
=>
¶¶  "
p
¶¶# $
.
¶¶$ %
ValuationRequests
¶¶% 6
)
¶¶6 7
.
ßß 
HasForeignKey
ßß "
(
ßß" #
d
ßß# $
=>
ßß% '
d
ßß( )
.
ßß) *

ApproverId
ßß* 4
)
ßß4 5
.
®® 
HasConstraintName
®® &
(
®®& '
$str
®®' G
)
®®G H
;
®®H I
entity
™™ 
.
™™ 
HasOne
™™ 
(
™™ 
d
™™ 
=>
™™  "
d
™™# $
.
™™$ %
Client
™™% +
)
™™+ ,
.
´´ 
WithMany
´´ 
(
´´ 
p
´´ 
=>
´´  "
p
´´# $
.
´´$ %
ValuationRequests
´´% 6
)
´´6 7
.
¨¨ 
HasForeignKey
¨¨ "
(
¨¨" #
d
¨¨# $
=>
¨¨% '
d
¨¨( )
.
¨¨) *
ClientId
¨¨* 2
)
¨¨2 3
.
≠≠ 
OnDelete
≠≠ 
(
≠≠ 
DeleteBehavior
≠≠ ,
.
≠≠, -
ClientSetNull
≠≠- :
)
≠≠: ;
.
ÆÆ 
HasConstraintName
ÆÆ &
(
ÆÆ& '
$str
ÆÆ' G
)
ÆÆG H
;
ÆÆH I
entity
∞∞ 
.
∞∞ 
HasOne
∞∞ 
(
∞∞ 
d
∞∞ 
=>
∞∞  "
d
∞∞# $
.
∞∞$ %
Property
∞∞% -
)
∞∞- .
.
±± 
WithMany
±± 
(
±± 
p
±± 
=>
±±  "
p
±±# $
.
±±$ %
ValuationRequests
±±% 6
)
±±6 7
.
≤≤ 
HasForeignKey
≤≤ "
(
≤≤" #
d
≤≤# $
=>
≤≤% '
d
≤≤( )
.
≤≤) *

PropertyId
≤≤* 4
)
≤≤4 5
.
≥≥ 
OnDelete
≥≥ 
(
≥≥ 
DeleteBehavior
≥≥ ,
.
≥≥, -
ClientSetNull
≥≥- :
)
≥≥: ;
.
¥¥ 
HasConstraintName
¥¥ &
(
¥¥& '
$str
¥¥' G
)
¥¥G H
;
¥¥H I
entity
∂∂ 
.
∂∂ 
HasOne
∂∂ 
(
∂∂ 
d
∂∂ 
=>
∂∂  "
d
∂∂# $
.
∂∂$ %
Status
∂∂% +
)
∂∂+ ,
.
∑∑ 
WithMany
∑∑ 
(
∑∑ 
p
∑∑ 
=>
∑∑  "
p
∑∑# $
.
∑∑$ %
ValuationRequests
∑∑% 6
)
∑∑6 7
.
∏∏ 
HasForeignKey
∏∏ "
(
∏∏" #
d
∏∏# $
=>
∏∏% '
d
∏∏( )
.
∏∏) *
StatusId
∏∏* 2
)
∏∏2 3
.
ππ 
OnDelete
ππ 
(
ππ 
DeleteBehavior
ππ ,
.
ππ, -
ClientSetNull
ππ- :
)
ππ: ;
.
∫∫ 
HasConstraintName
∫∫ &
(
∫∫& '
$str
∫∫' G
)
∫∫G H
;
∫∫H I
}
ªª 
)
ªª 
;
ªª 
modelBuilder
ΩΩ 
.
ΩΩ 
Entity
ΩΩ 
<
ΩΩ  +
ValuationRequestApproverLevel
ΩΩ  =
>
ΩΩ= >
(
ΩΩ> ?
entity
ΩΩ? E
=>
ΩΩF H
{
ææ 
entity
øø 
.
øø 
ToTable
øø 
(
øø 
$str
øø >
,
øø> ?
$str
øø@ E
)
øøE F
;
øøF G
entity
¡¡ 
.
¡¡ 
Property
¡¡ 
(
¡¡  
e
¡¡  !
=>
¡¡" $
e
¡¡% &
.
¡¡& '
ApproverComment
¡¡' 6
)
¡¡6 7
.
¬¬ 
HasMaxLength
¬¬ !
(
¬¬! "
$num
¬¬" %
)
¬¬% &
.
√√ 
	IsUnicode
√√ 
(
√√ 
false
√√ $
)
√√$ %
;
√√% &
entity
≈≈ 
.
≈≈ 
Property
≈≈ 
(
≈≈  
e
≈≈  !
=>
≈≈" $
e
≈≈% &
.
≈≈& '
CreatedDate
≈≈' 2
)
≈≈2 3
.
≈≈3 4
HasColumnType
≈≈4 A
(
≈≈A B
$str
≈≈B L
)
≈≈L M
;
≈≈M N
entity
«« 
.
«« 
Property
«« 
(
««  
e
««  !
=>
««" $
e
««% &
.
««& '
ModifiedDate
««' 3
)
««3 4
.
««4 5
HasColumnType
««5 B
(
««B C
$str
««C M
)
««M N
;
««N O
entity
…… 
.
…… 
HasOne
…… 
(
…… 
d
…… 
=>
……  "
d
……# $
.
……$ %
ValuationRequest
……% 5
)
……5 6
.
   
WithMany
   
(
   
p
   
=>
    "
p
  # $
.
  $ %,
ValuationRequestApproverLevels
  % C
)
  C D
.
ÀÀ 
HasForeignKey
ÀÀ "
(
ÀÀ" #
d
ÀÀ# $
=>
ÀÀ% '
d
ÀÀ( )
.
ÀÀ) * 
ValuationRequestId
ÀÀ* <
)
ÀÀ< =
.
ÃÃ 
OnDelete
ÃÃ 
(
ÃÃ 
DeleteBehavior
ÃÃ ,
.
ÃÃ, -
ClientSetNull
ÃÃ- :
)
ÃÃ: ;
.
ÕÕ 
HasConstraintName
ÕÕ &
(
ÕÕ& '
$str
ÕÕ' G
)
ÕÕG H
;
ÕÕH I
}
ŒŒ 
)
ŒŒ 
;
ŒŒ 
modelBuilder
–– 
.
–– 
Entity
–– 
<
––  +
ValuationRequestStatusHistory
––  =
>
––= >
(
––> ?
entity
––? E
=>
––F H
{
—— 
entity
““ 
.
““ 
ToTable
““ 
(
““ 
$str
““ >
,
““> ?
$str
““@ E
)
““E F
;
““F G
entity
‘‘ 
.
‘‘ 
Property
‘‘ 
(
‘‘  
e
‘‘  !
=>
‘‘" $
e
‘‘% &
.
‘‘& '
CreatedDate
‘‘' 2
)
‘‘2 3
.
‘‘3 4
HasColumnType
‘‘4 A
(
‘‘A B
$str
‘‘B L
)
‘‘L M
;
‘‘M N
entity
÷÷ 
.
÷÷ 
Property
÷÷ 
(
÷÷  
e
÷÷  !
=>
÷÷" $
e
÷÷% &
.
÷÷& '
StatusComment
÷÷' 4
)
÷÷4 5
.
◊◊ 
HasMaxLength
◊◊ !
(
◊◊! "
$num
◊◊" %
)
◊◊% &
.
ÿÿ 
	IsUnicode
ÿÿ 
(
ÿÿ 
false
ÿÿ $
)
ÿÿ$ %
;
ÿÿ% &
}
ŸŸ 
)
ŸŸ 
;
ŸŸ 
modelBuilder
€€ 
.
€€ 
Entity
€€ 
<
€€  &
ValuationSiteDescription
€€  8
>
€€8 9
(
€€9 :
entity
€€: @
=>
€€A C
{
‹‹ 
entity
›› 
.
›› 
ToTable
›› 
(
›› 
$str
›› 9
,
››9 :
$str
››; @
)
››@ A
;
››A B
entity
ﬂﬂ 
.
ﬂﬂ 
Property
ﬂﬂ 
(
ﬂﬂ  
e
ﬂﬂ  !
=>
ﬂﬂ" $
e
ﬂﬂ% &
.
ﬂﬂ& '
AdditionComment
ﬂﬂ' 6
)
ﬂﬂ6 7
.
‡‡ 
HasMaxLength
‡‡ !
(
‡‡! "
$num
‡‡" %
)
‡‡% &
.
·· 
	IsUnicode
·· 
(
·· 
false
·· $
)
··$ %
;
··% &
entity
„„ 
.
„„ 
Property
„„ 
(
„„  
e
„„  !
=>
„„" $
e
„„% &
.
„„& '
AdditionalNotes
„„' 6
)
„„6 7
.
‰‰ 
HasMaxLength
‰‰ !
(
‰‰! "
$num
‰‰" %
)
‰‰% &
.
ÂÂ 
	IsUnicode
ÂÂ 
(
ÂÂ 
false
ÂÂ $
)
ÂÂ$ %
;
ÂÂ% &
entity
ÁÁ 
.
ÁÁ 
Property
ÁÁ 
(
ÁÁ  
e
ÁÁ  !
=>
ÁÁ" $
e
ÁÁ% &
.
ÁÁ& '
CreatedDate
ÁÁ' 2
)
ÁÁ2 3
.
ÁÁ3 4
HasColumnType
ÁÁ4 A
(
ÁÁA B
$str
ÁÁB L
)
ÁÁL M
;
ÁÁM N
entity
ÈÈ 
.
ÈÈ 
Property
ÈÈ 
(
ÈÈ  
e
ÈÈ  !
=>
ÈÈ" $
e
ÈÈ% &
.
ÈÈ& '
ExternalArea
ÈÈ' 3
)
ÈÈ3 4
.
ÈÈ4 5
HasColumnType
ÈÈ5 B
(
ÈÈB C
$str
ÈÈC S
)
ÈÈS T
;
ÈÈT U
entity
ÎÎ 
.
ÎÎ 
Property
ÎÎ 
(
ÎÎ  
e
ÎÎ  !
=>
ÎÎ" $
e
ÎÎ% &
.
ÎÎ& '
InternalArea
ÎÎ' 3
)
ÎÎ3 4
.
ÎÎ4 5
HasColumnType
ÎÎ5 B
(
ÎÎB C
$str
ÎÎC S
)
ÎÎS T
;
ÎÎT U
entity
ÌÌ 
.
ÌÌ 
Property
ÌÌ 
(
ÌÌ  
e
ÌÌ  !
=>
ÌÌ" $
e
ÌÌ% &
.
ÌÌ& '
Location
ÌÌ' /
)
ÌÌ/ 0
.
ÓÓ 
HasMaxLength
ÓÓ !
(
ÓÓ! "
$num
ÓÓ" %
)
ÓÓ% &
.
ÔÔ 
	IsUnicode
ÔÔ 
(
ÔÔ 
false
ÔÔ $
)
ÔÔ$ %
;
ÔÔ% &
entity
ÒÒ 
.
ÒÒ 
Property
ÒÒ 
(
ÒÒ  
e
ÒÒ  !
=>
ÒÒ" $
e
ÒÒ% &
.
ÒÒ& '
ModifiedDate
ÒÒ' 3
)
ÒÒ3 4
.
ÒÒ4 5
HasColumnType
ÒÒ5 B
(
ÒÒB C
$str
ÒÒC M
)
ÒÒM N
;
ÒÒN O
entity
ÛÛ 
.
ÛÛ 
Property
ÛÛ 
(
ÛÛ  
e
ÛÛ  !
=>
ÛÛ" $
e
ÛÛ% &
.
ÛÛ& '
Others
ÛÛ' -
)
ÛÛ- .
.
ÙÙ 
HasMaxLength
ÙÙ !
(
ÙÙ! "
$num
ÙÙ" %
)
ÙÙ% &
.
ıı 
	IsUnicode
ıı 
(
ıı 
false
ıı $
)
ıı$ %
;
ıı% &
entity
˜˜ 
.
˜˜ 
Property
˜˜ 
(
˜˜  
e
˜˜  !
=>
˜˜" $
e
˜˜% &
.
˜˜& '
PropertyCondition
˜˜' 8
)
˜˜8 9
.
¯¯ 
HasMaxLength
¯¯ !
(
¯¯! "
$num
¯¯" %
)
¯¯% &
.
˘˘ 
	IsUnicode
˘˘ 
(
˘˘ 
false
˘˘ $
)
˘˘$ %
;
˘˘% &
entity
˚˚ 
.
˚˚ 
Property
˚˚ 
(
˚˚  
e
˚˚  !
=>
˚˚" $
e
˚˚% &
.
˚˚& '
Storage
˚˚' .
)
˚˚. /
.
¸¸ 
HasMaxLength
¸¸ !
(
¸¸! "
$num
¸¸" %
)
¸¸% &
.
˝˝ 
	IsUnicode
˝˝ 
(
˝˝ 
false
˝˝ $
)
˝˝$ %
;
˝˝% &
entity
ˇˇ 
.
ˇˇ 
HasOne
ˇˇ 
(
ˇˇ 
d
ˇˇ 
=>
ˇˇ  "
d
ˇˇ# $
.
ˇˇ$ %
ValuationRequest
ˇˇ% 5
)
ˇˇ5 6
.
ÄÄ 
WithMany
ÄÄ 
(
ÄÄ 
p
ÄÄ 
=>
ÄÄ  "
p
ÄÄ# $
.
ÄÄ$ %'
ValuationSiteDescriptions
ÄÄ% >
)
ÄÄ> ?
.
ÅÅ 
HasForeignKey
ÅÅ "
(
ÅÅ" #
d
ÅÅ# $
=>
ÅÅ% '
d
ÅÅ( )
.
ÅÅ) * 
ValuationRequestId
ÅÅ* <
)
ÅÅ< =
.
ÇÇ 
OnDelete
ÇÇ 
(
ÇÇ 
DeleteBehavior
ÇÇ ,
.
ÇÇ, -
ClientSetNull
ÇÇ- :
)
ÇÇ: ;
.
ÉÉ 
HasConstraintName
ÉÉ &
(
ÉÉ& '
$str
ÉÉ' U
)
ÉÉU V
;
ÉÉV W
}
ÑÑ 
)
ÑÑ 
;
ÑÑ 
modelBuilder
ÜÜ 
.
ÜÜ 
Entity
ÜÜ 
<
ÜÜ  
VwClient
ÜÜ  (
>
ÜÜ( )
(
ÜÜ) *
entity
ÜÜ* 0
=>
ÜÜ1 3
{
áá 
entity
àà 
.
àà 
HasNoKey
àà 
(
àà  
)
àà  !
;
àà! "
entity
ää 
.
ää 
ToView
ää 
(
ää 
$str
ää )
,
ää) *
$str
ää+ 0
)
ää0 1
;
ää1 2
entity
åå 
.
åå 
Property
åå 
(
åå  
e
åå  !
=>
åå" $
e
åå% &
.
åå& '

ClientName
åå' 1
)
åå1 2
.
çç 
HasMaxLength
çç !
(
çç! "
$num
çç" %
)
çç% &
.
éé 
	IsUnicode
éé 
(
éé 
false
éé $
)
éé$ %
;
éé% &
entity
êê 
.
êê 
Property
êê 
(
êê  
e
êê  !
=>
êê" $
e
êê% &
.
êê& '

ClientType
êê' 1
)
êê1 2
.
ëë 
HasMaxLength
ëë !
(
ëë! "
$num
ëë" $
)
ëë$ %
.
íí 
	IsUnicode
íí 
(
íí 
false
íí $
)
íí$ %
;
íí% &
entity
îî 
.
îî 
Property
îî 
(
îî  
e
îî  !
=>
îî" $
e
îî% &
.
îî& '
Company
îî' .
)
îî. /
.
ïï 
HasMaxLength
ïï !
(
ïï! "
$num
ïï" %
)
ïï% &
.
ññ 
	IsUnicode
ññ 
(
ññ 
false
ññ $
)
ññ$ %
;
ññ% &
entity
òò 
.
òò 
Property
òò 
(
òò  
e
òò  !
=>
òò" $
e
òò% &
.
òò& '
CreatedDate
òò' 2
)
òò2 3
.
òò3 4
HasColumnType
òò4 A
(
òòA B
$str
òòB L
)
òòL M
;
òòM N
entity
öö 
.
öö 
Property
öö 
(
öö  
e
öö  !
=>
öö" $
e
öö% &
.
öö& '

Dictionary
öö' 1
)
öö1 2
.
õõ 
HasMaxLength
õõ !
(
õõ! "
$num
õõ" %
)
õõ% &
.
úú 
	IsUnicode
úú 
(
úú 
false
úú $
)
úú$ %
;
úú% &
entity
ûû 
.
ûû 
Property
ûû 
(
ûû  
e
ûû  !
=>
ûû" $
e
ûû% &
.
ûû& '
DictionaryCode
ûû' 5
)
ûû5 6
.
üü 
HasMaxLength
üü !
(
üü! "
$num
üü" %
)
üü% &
.
†† 
	IsUnicode
†† 
(
†† 
false
†† $
)
††$ %
;
††% &
entity
¢¢ 
.
¢¢ 
Property
¢¢ 
(
¢¢  
e
¢¢  !
=>
¢¢" $
e
¢¢% &
.
¢¢& '
	FirstName
¢¢' 0
)
¢¢0 1
.
££ 
HasMaxLength
££ !
(
££! "
$num
££" %
)
££% &
.
§§ 
	IsUnicode
§§ 
(
§§ 
false
§§ $
)
§§$ %
;
§§% &
entity
¶¶ 
.
¶¶ 
Property
¶¶ 
(
¶¶  
e
¶¶  !
=>
¶¶" $
e
¶¶% &
.
¶¶& '
LastName
¶¶' /
)
¶¶/ 0
.
ßß 
HasMaxLength
ßß !
(
ßß! "
$num
ßß" %
)
ßß% &
.
®® 
	IsUnicode
®® 
(
®® 
false
®® $
)
®®$ %
;
®®% &
entity
™™ 
.
™™ 
Property
™™ 
(
™™  
e
™™  !
=>
™™" $
e
™™% &
.
™™& '
LicenseNumber
™™' 4
)
™™4 5
.
´´ 
HasMaxLength
´´ !
(
´´! "
$num
´´" %
)
´´% &
.
¨¨ 
	IsUnicode
¨¨ 
(
¨¨ 
false
¨¨ $
)
¨¨$ %
;
¨¨% &
entity
ÆÆ 
.
ÆÆ 
Property
ÆÆ 
(
ÆÆ  
e
ÆÆ  !
=>
ÆÆ" $
e
ÆÆ% &
.
ÆÆ& '
Logo
ÆÆ' +
)
ÆÆ+ ,
.
ØØ 
HasMaxLength
ØØ !
(
ØØ! "
$num
ØØ" %
)
ØØ% &
.
∞∞ 
	IsUnicode
∞∞ 
(
∞∞ 
false
∞∞ $
)
∞∞$ %
;
∞∞% &
entity
≤≤ 
.
≤≤ 
Property
≤≤ 
(
≤≤  
e
≤≤  !
=>
≤≤" $
e
≤≤% &
.
≤≤& '

MiddleName
≤≤' 1
)
≤≤1 2
.
≥≥ 
HasMaxLength
≥≥ !
(
≥≥! "
$num
≥≥" %
)
≥≥% &
.
¥¥ 
	IsUnicode
¥¥ 
(
¥¥ 
false
¥¥ $
)
¥¥$ %
;
¥¥% &
entity
∂∂ 
.
∂∂ 
Property
∂∂ 
(
∂∂  
e
∂∂  !
=>
∂∂" $
e
∂∂% &
.
∂∂& '
ModifiedDate
∂∂' 3
)
∂∂3 4
.
∂∂4 5
HasColumnType
∂∂5 B
(
∂∂B C
$str
∂∂C M
)
∂∂M N
;
∂∂N O
entity
∏∏ 
.
∏∏ 
Property
∏∏ 
(
∏∏  
e
∏∏  !
=>
∏∏" $
e
∏∏% &
.
∏∏& '
TrnexpiryDate
∏∏' 4
)
∏∏4 5
.
ππ 
HasColumnType
ππ "
(
ππ" #
$str
ππ# )
)
ππ) *
.
∫∫ 
HasColumnName
∫∫ "
(
∫∫" #
$str
∫∫# 2
)
∫∫2 3
;
∫∫3 4
entity
ºº 
.
ºº 
Property
ºº 
(
ºº  
e
ºº  !
=>
ºº" $
e
ºº% &
.
ºº& '
	Trnnumber
ºº' 0
)
ºº0 1
.
ΩΩ 
HasMaxLength
ΩΩ !
(
ΩΩ! "
$num
ΩΩ" %
)
ΩΩ% &
.
ææ 
	IsUnicode
ææ 
(
ææ 
false
ææ $
)
ææ$ %
.
øø 
HasColumnName
øø "
(
øø" #
$str
øø# .
)
øø. /
;
øø/ 0
}
¿¿ 
)
¿¿ 
;
¿¿ 
modelBuilder
¬¬ 
.
¬¬ 
Entity
¬¬ 
<
¬¬  
VwDictonaryChild
¬¬  0
>
¬¬0 1
(
¬¬1 2
entity
¬¬2 8
=>
¬¬9 ;
{
√√ 
entity
ƒƒ 
.
ƒƒ 
HasNoKey
ƒƒ 
(
ƒƒ  
)
ƒƒ  !
;
ƒƒ! "
entity
∆∆ 
.
∆∆ 
ToView
∆∆ 
(
∆∆ 
$str
∆∆ 1
,
∆∆1 2
$str
∆∆3 8
)
∆∆8 9
;
∆∆9 :
entity
»» 
.
»» 
Property
»» 
(
»»  
e
»»  !
=>
»»" $
e
»»% &
.
»»& '
CreatedDate
»»' 2
)
»»2 3
.
»»3 4
HasColumnType
»»4 A
(
»»A B
$str
»»B L
)
»»L M
;
»»M N
entity
   
.
   
Property
   
(
    
e
    !
=>
  " $
e
  % &
.
  & '
Description
  ' 2
)
  2 3
.
ÀÀ 
HasMaxLength
ÀÀ !
(
ÀÀ! "
$num
ÀÀ" %
)
ÀÀ% &
.
ÃÃ 
	IsUnicode
ÃÃ 
(
ÃÃ 
false
ÃÃ $
)
ÃÃ$ %
;
ÃÃ% &
entity
ŒŒ 
.
ŒŒ 
Property
ŒŒ 
(
ŒŒ  
e
ŒŒ  !
=>
ŒŒ" $
e
ŒŒ% &
.
ŒŒ& '
DetailDescription
ŒŒ' 8
)
ŒŒ8 9
.
œœ 
HasMaxLength
œœ !
(
œœ! "
$num
œœ" $
)
œœ$ %
.
–– 
	IsUnicode
–– 
(
–– 
false
–– $
)
––$ %
;
––% &
entity
““ 
.
““ 
Property
““ 
(
““  
e
““  !
=>
““" $
e
““% &
.
““& '
DictionaryCode
““' 5
)
““5 6
.
”” 
HasMaxLength
”” !
(
””! "
$num
””" %
)
””% &
.
‘‘ 
	IsUnicode
‘‘ 
(
‘‘ 
false
‘‘ $
)
‘‘$ %
;
‘‘% &
entity
÷÷ 
.
÷÷ 
Property
÷÷ 
(
÷÷  
e
÷÷  !
=>
÷÷" $
e
÷÷% &
.
÷÷& '
ModifiedDate
÷÷' 3
)
÷÷3 4
.
÷÷4 5
HasColumnType
÷÷5 B
(
÷÷B C
$str
÷÷C M
)
÷÷M N
;
÷÷N O
}
◊◊ 
)
◊◊ 
;
◊◊ 
modelBuilder
ŸŸ 
.
ŸŸ 
Entity
ŸŸ 
<
ŸŸ  

VwProperty
ŸŸ  *
>
ŸŸ* +
(
ŸŸ+ ,
entity
ŸŸ, 2
=>
ŸŸ3 5
{
⁄⁄ 
entity
€€ 
.
€€ 
HasNoKey
€€ 
(
€€  
)
€€  !
;
€€! "
entity
›› 
.
›› 
ToView
›› 
(
›› 
$str
›› +
,
››+ ,
$str
››- 2
)
››2 3
;
››3 4
entity
ﬂﬂ 
.
ﬂﬂ 
Property
ﬂﬂ 
(
ﬂﬂ  
e
ﬂﬂ  !
=>
ﬂﬂ" $
e
ﬂﬂ% &
.
ﬂﬂ& '
AdditionalUnits
ﬂﬂ' 6
)
ﬂﬂ6 7
.
‡‡ 
HasMaxLength
‡‡ !
(
‡‡! "
$num
‡‡" %
)
‡‡% &
.
·· 
	IsUnicode
·· 
(
·· 
false
·· $
)
··$ %
;
··% &
entity
„„ 
.
„„ 
Property
„„ 
(
„„  
e
„„  !
=>
„„" $
e
„„% &
.
„„& '
	Amenities
„„' 0
)
„„0 1
.
‰‰ 
HasMaxLength
‰‰ !
(
‰‰! "
$num
‰‰" %
)
‰‰% &
.
ÂÂ 
	IsUnicode
ÂÂ 
(
ÂÂ 
false
ÂÂ $
)
ÂÂ$ %
;
ÂÂ% &
entity
ÁÁ 
.
ÁÁ 
Property
ÁÁ 
(
ÁÁ  
e
ÁÁ  !
=>
ÁÁ" $
e
ÁÁ% &
.
ÁÁ& '
BuildUpAreaSqFt
ÁÁ' 6
)
ÁÁ6 7
.
ÁÁ7 8
HasColumnType
ÁÁ8 E
(
ÁÁE F
$str
ÁÁF V
)
ÁÁV W
;
ÁÁW X
entity
ÈÈ 
.
ÈÈ 
Property
ÈÈ 
(
ÈÈ  
e
ÈÈ  !
=>
ÈÈ" $
e
ÈÈ% &
.
ÈÈ& '
BuildUpAreaSqMtr
ÈÈ' 7
)
ÈÈ7 8
.
ÈÈ8 9
HasColumnType
ÈÈ9 F
(
ÈÈF G
$str
ÈÈG W
)
ÈÈW X
;
ÈÈX Y
entity
ÎÎ 
.
ÎÎ 
Property
ÎÎ 
(
ÎÎ  
e
ÎÎ  !
=>
ÎÎ" $
e
ÎÎ% &
.
ÎÎ& '
CreatedDate
ÎÎ' 2
)
ÎÎ2 3
.
ÎÎ3 4
HasColumnType
ÎÎ4 A
(
ÎÎA B
$str
ÎÎB L
)
ÎÎL M
;
ÎÎM N
entity
ÌÌ 
.
ÌÌ 
Property
ÌÌ 
(
ÌÌ  
e
ÌÌ  !
=>
ÌÌ" $
e
ÌÌ% &
.
ÌÌ& '
Description
ÌÌ' 2
)
ÌÌ2 3
.
ÓÓ 
HasMaxLength
ÓÓ !
(
ÓÓ! "
$num
ÓÓ" %
)
ÓÓ% &
.
ÔÔ 
	IsUnicode
ÔÔ 
(
ÔÔ 
false
ÔÔ $
)
ÔÔ$ %
;
ÔÔ% &
entity
ÒÒ 
.
ÒÒ 
Property
ÒÒ 
(
ÒÒ  
e
ÒÒ  !
=>
ÒÒ" $
e
ÒÒ% &
.
ÒÒ& '
	Furnished
ÒÒ' 0
)
ÒÒ0 1
.
ÚÚ 
HasMaxLength
ÚÚ !
(
ÚÚ! "
$num
ÚÚ" $
)
ÚÚ$ %
.
ÛÛ 
	IsUnicode
ÛÛ 
(
ÛÛ 
false
ÛÛ $
)
ÛÛ$ %
;
ÛÛ% &
entity
ıı 
.
ıı 
Property
ıı 
(
ıı  
e
ıı  !
=>
ıı" $
e
ıı% &
.
ıı& '
ModifiedDate
ıı' 3
)
ıı3 4
.
ıı4 5
HasColumnType
ıı5 B
(
ııB C
$str
ııC M
)
ııM N
;
ııN O
entity
˜˜ 
.
˜˜ 
Property
˜˜ 
(
˜˜  
e
˜˜  !
=>
˜˜" $
e
˜˜% &
.
˜˜& '
OwnershipType
˜˜' 4
)
˜˜4 5
.
¯¯ 
HasMaxLength
¯¯ !
(
¯¯! "
$num
¯¯" $
)
¯¯$ %
.
˘˘ 
	IsUnicode
˘˘ 
(
˘˘ 
false
˘˘ $
)
˘˘$ %
;
˘˘% &
entity
˚˚ 
.
˚˚ 
Property
˚˚ 
(
˚˚  
e
˚˚  !
=>
˚˚" $
e
˚˚% &
.
˚˚& '
Parking
˚˚' .
)
˚˚. /
.
¸¸ 
HasMaxLength
¸¸ !
(
¸¸! "
$num
¸¸" $
)
¸¸$ %
.
˝˝ 
	IsUnicode
˝˝ 
(
˝˝ 
false
˝˝ $
)
˝˝$ %
;
˝˝% &
entity
ˇˇ 
.
ˇˇ 
Property
ˇˇ 
(
ˇˇ  
e
ˇˇ  !
=>
ˇˇ" $
e
ˇˇ% &
.
ˇˇ& '
ParkingBayNo
ˇˇ' 3
)
ˇˇ3 4
.
ÄÄ 
HasMaxLength
ÄÄ !
(
ÄÄ! "
$num
ÄÄ" %
)
ÄÄ% &
.
ÅÅ 
	IsUnicode
ÅÅ 
(
ÅÅ 
false
ÅÅ $
)
ÅÅ$ %
;
ÅÅ% &
entity
ÉÉ 
.
ÉÉ 
Property
ÉÉ 
(
ÉÉ  
e
ÉÉ  !
=>
ÉÉ" $
e
ÉÉ% &
.
ÉÉ& '
PropertyName
ÉÉ' 3
)
ÉÉ3 4
.
ÑÑ 
HasMaxLength
ÑÑ !
(
ÑÑ! "
$num
ÑÑ" %
)
ÑÑ% &
.
ÖÖ 
	IsUnicode
ÖÖ 
(
ÖÖ 
false
ÖÖ $
)
ÖÖ$ %
;
ÖÖ% &
entity
áá 
.
áá 
Property
áá 
(
áá  
e
áá  !
=>
áá" $
e
áá% &
.
áá& '
PropertySubType
áá' 6
)
áá6 7
.
àà 
HasMaxLength
àà !
(
àà! "
$num
àà" %
)
àà% &
.
ââ 
	IsUnicode
ââ 
(
ââ 
false
ââ $
)
ââ$ %
;
ââ% &
entity
ãã 
.
ãã 
Property
ãã 
(
ãã  
e
ãã  !
=>
ãã" $
e
ãã% &
.
ãã& '
PropertyType
ãã' 3
)
ãã3 4
.
åå 
HasMaxLength
åå !
(
åå! "
$num
åå" %
)
åå% &
.
çç 
	IsUnicode
çç 
(
çç 
false
çç $
)
çç$ %
;
çç% &
entity
èè 
.
èè 
Property
èè 
(
èè  
e
èè  !
=>
èè" $
e
èè% &
.
èè& '

UnitNumber
èè' 1
)
èè1 2
.
êê 
HasMaxLength
êê !
(
êê! "
$num
êê" %
)
êê% &
.
ëë 
	IsUnicode
ëë 
(
ëë 
false
ëë $
)
ëë$ %
;
ëë% &
entity
ìì 
.
ìì 
Property
ìì 
(
ìì  
e
ìì  !
=>
ìì" $
e
ìì% &
.
ìì& '
UnitType
ìì' /
)
ìì/ 0
.
îî 
HasMaxLength
îî !
(
îî! "
$num
îî" $
)
îî$ %
.
ïï 
	IsUnicode
ïï 
(
ïï 
false
ïï $
)
ïï$ %
;
ïï% &
entity
óó 
.
óó 
Property
óó 
(
óó  
e
óó  !
=>
óó" $
e
óó% &
.
óó& '
ValuationPurpose
óó' 7
)
óó7 8
.
òò 
HasMaxLength
òò !
(
òò! "
$num
òò" %
)
òò% &
.
ôô 
	IsUnicode
ôô 
(
ôô 
false
ôô $
)
ôô$ %
;
ôô% &
}
öö 
)
öö 
;
öö 
modelBuilder
úú 
.
úú 
Entity
úú 
<
úú   
VwPropertyLocation
úú  2
>
úú2 3
(
úú3 4
entity
úú4 :
=>
úú; =
{
ùù 
entity
ûû 
.
ûû 
HasNoKey
ûû 
(
ûû  
)
ûû  !
;
ûû! "
entity
†† 
.
†† 
ToView
†† 
(
†† 
$str
†† 4
,
††4 5
$str
††6 ;
)
††; <
;
††< =
entity
¢¢ 
.
¢¢ 
Property
¢¢ 
(
¢¢  
e
¢¢  !
=>
¢¢" $
e
¢¢% &
.
¢¢& '
Address1
¢¢' /
)
¢¢/ 0
.
££ 
HasMaxLength
££ !
(
££! "
$num
££" %
)
££% &
.
§§ 
	IsUnicode
§§ 
(
§§ 
false
§§ $
)
§§$ %
;
§§% &
entity
¶¶ 
.
¶¶ 
Property
¶¶ 
(
¶¶  
e
¶¶  !
=>
¶¶" $
e
¶¶% &
.
¶¶& '
Address2
¶¶' /
)
¶¶/ 0
.
ßß 
HasMaxLength
ßß !
(
ßß! "
$num
ßß" %
)
ßß% &
.
®® 
	IsUnicode
®® 
(
®® 
false
®® $
)
®®$ %
;
®®% &
entity
™™ 
.
™™ 
Property
™™ 
(
™™  
e
™™  !
=>
™™" $
e
™™% &
.
™™& '
BuildingProject
™™' 6
)
™™6 7
.
´´ 
HasMaxLength
´´ !
(
´´! "
$num
´´" %
)
´´% &
.
¨¨ 
	IsUnicode
¨¨ 
(
¨¨ 
false
¨¨ $
)
¨¨$ %
;
¨¨% &
entity
ÆÆ 
.
ÆÆ 
Property
ÆÆ 
(
ÆÆ  
e
ÆÆ  !
=>
ÆÆ" $
e
ÆÆ% &
.
ÆÆ& '
CityName
ÆÆ' /
)
ÆÆ/ 0
.
ØØ 
HasMaxLength
ØØ !
(
ØØ! "
$num
ØØ" %
)
ØØ% &
.
∞∞ 
	IsUnicode
∞∞ 
(
∞∞ 
false
∞∞ $
)
∞∞$ %
;
∞∞% &
entity
≤≤ 
.
≤≤ 
Property
≤≤ 
(
≤≤  
e
≤≤  !
=>
≤≤" $
e
≤≤% &
.
≤≤& '
CountryName
≤≤' 2
)
≤≤2 3
.
≥≥ 
HasMaxLength
≥≥ !
(
≥≥! "
$num
≥≥" %
)
≥≥% &
.
¥¥ 
	IsUnicode
¥¥ 
(
¥¥ 
false
¥¥ $
)
¥¥$ %
;
¥¥% &
entity
∂∂ 
.
∂∂ 
Property
∂∂ 
(
∂∂  
e
∂∂  !
=>
∂∂" $
e
∂∂% &
.
∂∂& '
CreatedDate
∂∂' 2
)
∂∂2 3
.
∂∂3 4
HasColumnType
∂∂4 A
(
∂∂A B
$str
∂∂B L
)
∂∂L M
;
∂∂M N
entity
∏∏ 
.
∏∏ 
Property
∏∏ 
(
∏∏  
e
∏∏  !
=>
∏∏" $
e
∏∏% &
.
∏∏& '
Landmark
∏∏' /
)
∏∏/ 0
.
ππ 
HasMaxLength
ππ !
(
ππ! "
$num
ππ" %
)
ππ% &
.
∫∫ 
	IsUnicode
∫∫ 
(
∫∫ 
false
∫∫ $
)
∫∫$ %
;
∫∫% &
entity
ºº 
.
ºº 
Property
ºº 
(
ºº  
e
ºº  !
=>
ºº" $
e
ºº% &
.
ºº& '
Latitude
ºº' /
)
ºº/ 0
.
ΩΩ 
HasMaxLength
ΩΩ !
(
ΩΩ! "
$num
ΩΩ" $
)
ΩΩ$ %
.
ææ 
	IsUnicode
ææ 
(
ææ 
false
ææ $
)
ææ$ %
;
ææ% &
entity
¿¿ 
.
¿¿ 
Property
¿¿ 
(
¿¿  
e
¿¿  !
=>
¿¿" $
e
¿¿% &
.
¿¿& '
	Longitude
¿¿' 0
)
¿¿0 1
.
¡¡ 
HasMaxLength
¡¡ !
(
¡¡! "
$num
¡¡" $
)
¡¡$ %
.
¬¬ 
	IsUnicode
¬¬ 
(
¬¬ 
false
¬¬ $
)
¬¬$ %
;
¬¬% &
entity
ƒƒ 
.
ƒƒ 
Property
ƒƒ 
(
ƒƒ  
e
ƒƒ  !
=>
ƒƒ" $
e
ƒƒ% &
.
ƒƒ& '
ModifiedDate
ƒƒ' 3
)
ƒƒ3 4
.
ƒƒ4 5
HasColumnType
ƒƒ5 B
(
ƒƒB C
$str
ƒƒC M
)
ƒƒM N
;
ƒƒN O
entity
∆∆ 
.
∆∆ 
Property
∆∆ 
(
∆∆  
e
∆∆  !
=>
∆∆" $
e
∆∆% &
.
∆∆& '
Pincode
∆∆' .
)
∆∆. /
.
«« 
HasMaxLength
«« !
(
««! "
$num
««" $
)
««$ %
.
»» 
	IsUnicode
»» 
(
»» 
false
»» $
)
»»$ %
;
»»% &
entity
   
.
   
Property
   
(
    
e
    !
=>
  " $
e
  % &
.
  & '
PropertyName
  ' 3
)
  3 4
.
ÀÀ 
HasMaxLength
ÀÀ !
(
ÀÀ! "
$num
ÀÀ" %
)
ÀÀ% &
.
ÃÃ 
	IsUnicode
ÃÃ 
(
ÃÃ 
false
ÃÃ $
)
ÃÃ$ %
;
ÃÃ% &
entity
ŒŒ 
.
ŒŒ 
Property
ŒŒ 
(
ŒŒ  
e
ŒŒ  !
=>
ŒŒ" $
e
ŒŒ% &
.
ŒŒ& '
	StateName
ŒŒ' 0
)
ŒŒ0 1
.
œœ 
HasMaxLength
œœ !
(
œœ! "
$num
œœ" %
)
œœ% &
.
–– 
	IsUnicode
–– 
(
–– 
false
–– $
)
––$ %
;
––% &
entity
““ 
.
““ 
Property
““ 
(
““  
e
““  !
=>
““" $
e
““% &
.
““& '
TotalAddress
““' 3
)
““3 4
.
”” 
HasMaxLength
”” !
(
””! "
$num
””" &
)
””& '
.
‘‘ 
	IsUnicode
‘‘ 
(
‘‘ 
false
‘‘ $
)
‘‘$ %
;
‘‘% &
entity
÷÷ 
.
÷÷ 
Property
÷÷ 
(
÷÷  
e
÷÷  !
=>
÷÷" $
e
÷÷% &
.
÷÷& '
Zone
÷÷' +
)
÷÷+ ,
.
◊◊ 
HasMaxLength
◊◊ !
(
◊◊! "
$num
◊◊" %
)
◊◊% &
.
ÿÿ 
	IsUnicode
ÿÿ 
(
ÿÿ 
false
ÿÿ $
)
ÿÿ$ %
;
ÿÿ% &
}
ŸŸ 
)
ŸŸ 
;
ŸŸ 
modelBuilder
€€ 
.
€€ 
Entity
€€ 
<
€€  
VwUser
€€  &
>
€€& '
(
€€' (
entity
€€( .
=>
€€/ 1
{
‹‹ 
entity
›› 
.
›› 
HasNoKey
›› 
(
››  
)
››  !
;
››! "
entity
ﬂﬂ 
.
ﬂﬂ 
ToView
ﬂﬂ 
(
ﬂﬂ 
$str
ﬂﬂ '
,
ﬂﬂ' (
$str
ﬂﬂ) .
)
ﬂﬂ. /
;
ﬂﬂ/ 0
entity
·· 
.
·· 
Property
·· 
(
··  
e
··  !
=>
··" $
e
··% &
.
··& '
ApproverLevel
··' 4
)
··4 5
.
‚‚ 
HasMaxLength
‚‚ !
(
‚‚! "
$num
‚‚" %
)
‚‚% &
.
„„ 
	IsUnicode
„„ 
(
„„ 
false
„„ $
)
„„$ %
;
„„% &
entity
ÂÂ 
.
ÂÂ 
Property
ÂÂ 
(
ÂÂ  
e
ÂÂ  !
=>
ÂÂ" $
e
ÂÂ% &
.
ÂÂ& '
CompanyName
ÂÂ' 2
)
ÂÂ2 3
.
ÊÊ 
HasMaxLength
ÊÊ !
(
ÊÊ! "
$num
ÊÊ" %
)
ÊÊ% &
.
ÁÁ 
	IsUnicode
ÁÁ 
(
ÁÁ 
false
ÁÁ $
)
ÁÁ$ %
;
ÁÁ% &
entity
ÈÈ 
.
ÈÈ 
Property
ÈÈ 
(
ÈÈ  
e
ÈÈ  !
=>
ÈÈ" $
e
ÈÈ% &
.
ÈÈ& '
CreatedDate
ÈÈ' 2
)
ÈÈ2 3
.
ÈÈ3 4
HasColumnType
ÈÈ4 A
(
ÈÈA B
$str
ÈÈB L
)
ÈÈL M
;
ÈÈM N
entity
ÎÎ 
.
ÎÎ 
Property
ÎÎ 
(
ÎÎ  
e
ÎÎ  !
=>
ÎÎ" $
e
ÎÎ% &
.
ÎÎ& '
DateOfBirth
ÎÎ' 2
)
ÎÎ2 3
.
ÎÎ3 4
HasColumnType
ÎÎ4 A
(
ÎÎA B
$str
ÎÎB H
)
ÎÎH I
;
ÎÎI J
entity
ÌÌ 
.
ÌÌ 
Property
ÌÌ 
(
ÌÌ  
e
ÌÌ  !
=>
ÌÌ" $
e
ÌÌ% &
.
ÌÌ& '

Department
ÌÌ' 1
)
ÌÌ1 2
.
ÓÓ 
HasMaxLength
ÓÓ !
(
ÓÓ! "
$num
ÓÓ" $
)
ÓÓ$ %
.
ÔÔ 
	IsUnicode
ÔÔ 
(
ÔÔ 
false
ÔÔ $
)
ÔÔ$ %
;
ÔÔ% &
entity
ÒÒ 
.
ÒÒ 
Property
ÒÒ 
(
ÒÒ  
e
ÒÒ  !
=>
ÒÒ" $
e
ÒÒ% &
.
ÒÒ& '
Designation
ÒÒ' 2
)
ÒÒ2 3
.
ÚÚ 
HasMaxLength
ÚÚ !
(
ÚÚ! "
$num
ÚÚ" $
)
ÚÚ$ %
.
ÛÛ 
	IsUnicode
ÛÛ 
(
ÛÛ 
false
ÛÛ $
)
ÛÛ$ %
;
ÛÛ% &
entity
ıı 
.
ıı 
Property
ıı 
(
ıı  
e
ıı  !
=>
ıı" $
e
ıı% &
.
ıı& '
Email
ıı' ,
)
ıı, -
.
ˆˆ 
HasMaxLength
ˆˆ !
(
ˆˆ! "
$num
ˆˆ" %
)
ˆˆ% &
.
˜˜ 
	IsUnicode
˜˜ 
(
˜˜ 
false
˜˜ $
)
˜˜$ %
;
˜˜% &
entity
˘˘ 
.
˘˘ 
Property
˘˘ 
(
˘˘  
e
˘˘  !
=>
˘˘" $
e
˘˘% &
.
˘˘& '
	FirstName
˘˘' 0
)
˘˘0 1
.
˙˙ 
HasMaxLength
˙˙ !
(
˙˙! "
$num
˙˙" %
)
˙˙% &
.
˚˚ 
	IsUnicode
˚˚ 
(
˚˚ 
false
˚˚ $
)
˚˚$ %
;
˚˚% &
entity
˝˝ 
.
˝˝ 
Property
˝˝ 
(
˝˝  
e
˝˝  !
=>
˝˝" $
e
˝˝% &
.
˝˝& '$
ForgotPasswordDateTime
˝˝' =
)
˝˝= >
.
˝˝> ?
HasColumnType
˝˝? L
(
˝˝L M
$str
˝˝M W
)
˝˝W X
;
˝˝X Y
entity
ˇˇ 
.
ˇˇ 
Property
ˇˇ 
(
ˇˇ  
e
ˇˇ  !
=>
ˇˇ" $
e
ˇˇ% &
.
ˇˇ& '!
ForgotPasswordToken
ˇˇ' :
)
ˇˇ: ;
.
ÄÄ 
HasMaxLength
ÄÄ !
(
ÄÄ! "
$num
ÄÄ" %
)
ÄÄ% &
.
ÅÅ 
	IsUnicode
ÅÅ 
(
ÅÅ 
false
ÅÅ $
)
ÅÅ$ %
;
ÅÅ% &
entity
ÉÉ 
.
ÉÉ 
Property
ÉÉ 
(
ÉÉ  
e
ÉÉ  !
=>
ÉÉ" $
e
ÉÉ% &
.
ÉÉ& '
Gender
ÉÉ' -
)
ÉÉ- .
.
ÑÑ 
HasMaxLength
ÑÑ !
(
ÑÑ! "
$num
ÑÑ" $
)
ÑÑ$ %
.
ÖÖ 
	IsUnicode
ÖÖ 
(
ÖÖ 
false
ÖÖ $
)
ÖÖ$ %
;
ÖÖ% &
entity
áá 
.
áá 
Property
áá 
(
áá  
e
áá  !
=>
áá" $
e
áá% &
.
áá& '
LastName
áá' /
)
áá/ 0
.
àà 
HasMaxLength
àà !
(
àà! "
$num
àà" %
)
àà% &
.
ââ 
	IsUnicode
ââ 
(
ââ 
false
ââ $
)
ââ$ %
;
ââ% &
entity
ãã 
.
ãã 
Property
ãã 
(
ãã  
e
ãã  !
=>
ãã" $
e
ãã% &
.
ãã& '
	LicenseNo
ãã' 0
)
ãã0 1
.
åå 
HasMaxLength
åå !
(
åå! "
$num
åå" %
)
åå% &
.
çç 
	IsUnicode
çç 
(
çç 
false
çç $
)
çç$ %
;
çç% &
entity
èè 
.
èè 
Property
èè 
(
èè  
e
èè  !
=>
èè" $
e
èè% &
.
èè& '

MiddleName
èè' 1
)
èè1 2
.
êê 
HasMaxLength
êê !
(
êê! "
$num
êê" %
)
êê% &
.
ëë 
	IsUnicode
ëë 
(
ëë 
false
ëë $
)
ëë$ %
;
ëë% &
entity
ìì 
.
ìì 
Property
ìì 
(
ìì  
e
ìì  !
=>
ìì" $
e
ìì% &
.
ìì& '
ModifiedDate
ìì' 3
)
ìì3 4
.
ìì4 5
HasColumnType
ìì5 B
(
ììB C
$str
ììC M
)
ììM N
;
ììN O
entity
ïï 
.
ïï 
Property
ïï 
(
ïï  
e
ïï  !
=>
ïï" $
e
ïï% &
.
ïï& '
ResourceType
ïï' 3
)
ïï3 4
.
ññ 
HasMaxLength
ññ !
(
ññ! "
$num
ññ" $
)
ññ$ %
.
óó 
	IsUnicode
óó 
(
óó 
false
óó $
)
óó$ %
;
óó% &
entity
ôô 
.
ôô 
Property
ôô 
(
ôô  
e
ôô  !
=>
ôô" $
e
ôô% &
.
ôô& '
RoleName
ôô' /
)
ôô/ 0
.
ôô0 1
HasMaxLength
ôô1 =
(
ôô= >
$num
ôô> @
)
ôô@ A
;
ôôA B
entity
õõ 
.
õõ 
Property
õõ 
(
õõ  
e
õõ  !
=>
õõ" $
e
õõ% &
.
õõ& '
UserName
õõ' /
)
õõ/ 0
.
úú 
HasMaxLength
úú !
(
úú! "
$num
úú" %
)
úú% &
.
ùù 
	IsUnicode
ùù 
(
ùù 
false
ùù $
)
ùù$ %
;
ùù% &
}
ûû 
)
ûû 
;
ûû 
modelBuilder
†† 
.
†† 
Entity
†† 
<
††   
VwValuationRequest
††  2
>
††2 3
(
††3 4
entity
††4 :
=>
††; =
{
°° 
entity
¢¢ 
.
¢¢ 
HasNoKey
¢¢ 
(
¢¢  
)
¢¢  !
;
¢¢! "
entity
§§ 
.
§§ 
ToView
§§ 
(
§§ 
$str
§§ 3
,
§§3 4
$str
§§5 :
)
§§: ;
;
§§; <
entity
¶¶ 
.
¶¶ 
Property
¶¶ 
(
¶¶  
e
¶¶  !
=>
¶¶" $
e
¶¶% &
.
¶¶& '
ApproverComment
¶¶' 6
)
¶¶6 7
.
ßß 
HasMaxLength
ßß !
(
ßß! "
$num
ßß" %
)
ßß% &
.
®® 
	IsUnicode
®® 
(
®® 
false
®® $
)
®®$ %
;
®®% &
entity
™™ 
.
™™ 
Property
™™ 
(
™™  
e
™™  !
=>
™™" $
e
™™% &
.
™™& ' 
ApproverUpdateDate
™™' 9
)
™™9 :
.
™™: ;
HasColumnType
™™; H
(
™™H I
$str
™™I S
)
™™S T
;
™™T U
entity
¨¨ 
.
¨¨ 
Property
¨¨ 
(
¨¨  
e
¨¨  !
=>
¨¨" $
e
¨¨% &
.
¨¨& '
AssignRemark
¨¨' 3
)
¨¨3 4
.
≠≠ 
HasMaxLength
≠≠ !
(
≠≠! "
$num
≠≠" %
)
≠≠% &
.
ÆÆ 
	IsUnicode
ÆÆ 
(
ÆÆ 
false
ÆÆ $
)
ÆÆ$ %
;
ÆÆ% &
entity
∞∞ 
.
∞∞ 
Property
∞∞ 
(
∞∞  
e
∞∞  !
=>
∞∞" $
e
∞∞% &
.
∞∞& '
BackGroundColor
∞∞' 6
)
∞∞6 7
.
∞∞7 8
HasMaxLength
∞∞8 D
(
∞∞D E
$num
∞∞E G
)
∞∞G H
;
∞∞H I
entity
≤≤ 
.
≤≤ 
Property
≤≤ 
(
≤≤  
e
≤≤  !
=>
≤≤" $
e
≤≤% &
.
≤≤& '
	ColorCode
≤≤' 0
)
≤≤0 1
.
≥≥ 
HasMaxLength
≥≥ !
(
≥≥! "
$num
≥≥" %
)
≥≥% &
.
¥¥ 
	IsUnicode
¥¥ 
(
¥¥ 
false
¥¥ $
)
¥¥$ %
;
¥¥% &
entity
∂∂ 
.
∂∂ 
Property
∂∂ 
(
∂∂  
e
∂∂  !
=>
∂∂" $
e
∂∂% &
.
∂∂& '
CreatedDate
∂∂' 2
)
∂∂2 3
.
∂∂3 4
HasColumnType
∂∂4 A
(
∂∂A B
$str
∂∂B L
)
∂∂L M
;
∂∂M N
entity
∏∏ 
.
∏∏ 
Property
∏∏ 
(
∏∏  
e
∏∏  !
=>
∏∏" $
e
∏∏% &
.
∏∏& '
ModifiedDate
∏∏' 3
)
∏∏3 4
.
∏∏4 5
HasColumnType
∏∏5 B
(
∏∏B C
$str
∏∏C M
)
∏∏M N
;
∏∏N O
entity
∫∫ 
.
∫∫ 
Property
∫∫ 
(
∫∫  
e
∫∫  !
=>
∫∫" $
e
∫∫% &
.
∫∫& '
OtherReferenceNo
∫∫' 7
)
∫∫7 8
.
ªª 
HasMaxLength
ªª !
(
ªª! "
$num
ªª" %
)
ªª% &
.
ºº 
	IsUnicode
ºº 
(
ºº 
false
ºº $
)
ºº$ %
.
ΩΩ 
HasColumnName
ΩΩ "
(
ΩΩ" #
$str
ΩΩ# 5
)
ΩΩ5 6
;
ΩΩ6 7
entity
øø 
.
øø 
Property
øø 
(
øø  
e
øø  !
=>
øø" $
e
øø% &
.
øø& '
ReferenceNo
øø' 2
)
øø2 3
.
¿¿ 
HasMaxLength
¿¿ !
(
¿¿! "
$num
¿¿" %
)
¿¿% &
.
¡¡ 
	IsUnicode
¡¡ 
(
¡¡ 
false
¡¡ $
)
¡¡$ %
.
¬¬ 
HasColumnName
¬¬ "
(
¬¬" #
$str
¬¬# 0
)
¬¬0 1
;
¬¬1 2
entity
ƒƒ 
.
ƒƒ 
Property
ƒƒ 
(
ƒƒ  
e
ƒƒ  !
=>
ƒƒ" $
e
ƒƒ% &
.
ƒƒ& '

StatusCode
ƒƒ' 1
)
ƒƒ1 2
.
≈≈ 
HasMaxLength
≈≈ !
(
≈≈! "
$num
≈≈" %
)
≈≈% &
.
∆∆ 
	IsUnicode
∆∆ 
(
∆∆ 
false
∆∆ $
)
∆∆$ %
;
∆∆% &
entity
»» 
.
»» 
Property
»» 
(
»»  
e
»»  !
=>
»»" $
e
»»% &
.
»»& '
StatusComment
»»' 4
)
»»4 5
.
…… 
HasMaxLength
…… !
(
……! "
$num
……" %
)
……% &
.
   
	IsUnicode
   
(
   
false
   $
)
  $ %
;
  % &
entity
ÃÃ 
.
ÃÃ 
Property
ÃÃ 
(
ÃÃ  
e
ÃÃ  !
=>
ÃÃ" $
e
ÃÃ% &
.
ÃÃ& '

StatusName
ÃÃ' 1
)
ÃÃ1 2
.
ÕÕ 
HasMaxLength
ÕÕ !
(
ÕÕ! "
$num
ÕÕ" %
)
ÕÕ% &
.
ŒŒ 
	IsUnicode
ŒŒ 
(
ŒŒ 
false
ŒŒ $
)
ŒŒ$ %
;
ŒŒ% &
entity
–– 
.
–– 
Property
–– 
(
––  
e
––  !
=>
––" $
e
––% &
.
––& '
ValuationDate
––' 4
)
––4 5
.
––5 6
HasColumnType
––6 C
(
––C D
$str
––D J
)
––J K
;
––K L
entity
““ 
.
““ 
Property
““ 
(
““  
e
““  !
=>
““" $
e
““% &
.
““& '
ValuerComment
““' 4
)
““4 5
.
”” 
HasMaxLength
”” !
(
””! "
$num
””" %
)
””% &
.
‘‘ 
	IsUnicode
‘‘ 
(
‘‘ 
false
‘‘ $
)
‘‘$ %
;
‘‘% &
entity
÷÷ 
.
÷÷ 
Property
÷÷ 
(
÷÷  
e
÷÷  !
=>
÷÷" $
e
÷÷% &
.
÷÷& '
ValuerUpdateDate
÷÷' 7
)
÷÷7 8
.
÷÷8 9
HasColumnType
÷÷9 F
(
÷÷F G
$str
÷÷G Q
)
÷÷Q R
;
÷÷R S
}
◊◊ 
)
◊◊ 
;
◊◊ 
modelBuilder
ŸŸ 
.
ŸŸ 
Entity
ŸŸ 
<
ŸŸ  &
VwValuationRequestDetail
ŸŸ  8
>
ŸŸ8 9
(
ŸŸ9 :
entity
ŸŸ: @
=>
ŸŸA C
{
⁄⁄ 
entity
€€ 
.
€€ 
HasNoKey
€€ 
(
€€  
)
€€  !
;
€€! "
entity
›› 
.
›› 
ToView
›› 
(
›› 
$str
›› :
,
››: ;
$str
››< A
)
››A B
;
››B C
entity
ﬂﬂ 
.
ﬂﬂ 
Property
ﬂﬂ 
(
ﬂﬂ  
e
ﬂﬂ  !
=>
ﬂﬂ" $
e
ﬂﬂ% &
.
ﬂﬂ& '
Approver
ﬂﬂ' /
)
ﬂﬂ/ 0
.
‡‡ 
HasMaxLength
‡‡ !
(
‡‡! "
$num
‡‡" %
)
‡‡% &
.
·· 
	IsUnicode
·· 
(
·· 
false
·· $
)
··$ %
;
··% &
entity
„„ 
.
„„ 
Property
„„ 
(
„„  
e
„„  !
=>
„„" $
e
„„% &
.
„„& '
ApproverComment
„„' 6
)
„„6 7
.
‰‰ 
HasMaxLength
‰‰ !
(
‰‰! "
$num
‰‰" %
)
‰‰% &
.
ÂÂ 
	IsUnicode
ÂÂ 
(
ÂÂ 
false
ÂÂ $
)
ÂÂ$ %
;
ÂÂ% &
entity
ÁÁ 
.
ÁÁ 
Property
ÁÁ 
(
ÁÁ  
e
ÁÁ  !
=>
ÁÁ" $
e
ÁÁ% &
.
ÁÁ& ' 
ApproverUpdateDate
ÁÁ' 9
)
ÁÁ9 :
.
ÁÁ: ;
HasColumnType
ÁÁ; H
(
ÁÁH I
$str
ÁÁI S
)
ÁÁS T
;
ÁÁT U
entity
ÈÈ 
.
ÈÈ 
Property
ÈÈ 
(
ÈÈ  
e
ÈÈ  !
=>
ÈÈ" $
e
ÈÈ% &
.
ÈÈ& '
AssignRemark
ÈÈ' 3
)
ÈÈ3 4
.
ÍÍ 
HasMaxLength
ÍÍ !
(
ÍÍ! "
$num
ÍÍ" %
)
ÍÍ% &
.
ÎÎ 
	IsUnicode
ÎÎ 
(
ÎÎ 
false
ÎÎ $
)
ÎÎ$ %
;
ÎÎ% &
entity
ÌÌ 
.
ÌÌ 
Property
ÌÌ 
(
ÌÌ  
e
ÌÌ  !
=>
ÌÌ" $
e
ÌÌ% &
.
ÌÌ& '
BackGroundColor
ÌÌ' 6
)
ÌÌ6 7
.
ÌÌ7 8
HasMaxLength
ÌÌ8 D
(
ÌÌD E
$num
ÌÌE G
)
ÌÌG H
;
ÌÌH I
entity
ÔÔ 
.
ÔÔ 
Property
ÔÔ 
(
ÔÔ  
e
ÔÔ  !
=>
ÔÔ" $
e
ÔÔ% &
.
ÔÔ& '

ClientName
ÔÔ' 1
)
ÔÔ1 2
.
 
HasMaxLength
 !
(
! "
$num
" %
)
% &
.
ÒÒ 
	IsUnicode
ÒÒ 
(
ÒÒ 
false
ÒÒ $
)
ÒÒ$ %
;
ÒÒ% &
entity
ÛÛ 
.
ÛÛ 
Property
ÛÛ 
(
ÛÛ  
e
ÛÛ  !
=>
ÛÛ" $
e
ÛÛ% &
.
ÛÛ& '

ClientType
ÛÛ' 1
)
ÛÛ1 2
.
ÙÙ 
HasMaxLength
ÙÙ !
(
ÙÙ! "
$num
ÙÙ" $
)
ÙÙ$ %
.
ıı 
	IsUnicode
ıı 
(
ıı 
false
ıı $
)
ıı$ %
;
ıı% &
entity
˜˜ 
.
˜˜ 
Property
˜˜ 
(
˜˜  
e
˜˜  !
=>
˜˜" $
e
˜˜% &
.
˜˜& '
	ColorCode
˜˜' 0
)
˜˜0 1
.
¯¯ 
HasMaxLength
¯¯ !
(
¯¯! "
$num
¯¯" %
)
¯¯% &
.
˘˘ 
	IsUnicode
˘˘ 
(
˘˘ 
false
˘˘ $
)
˘˘$ %
;
˘˘% &
entity
˚˚ 
.
˚˚ 
Property
˚˚ 
(
˚˚  
e
˚˚  !
=>
˚˚" $
e
˚˚% &
.
˚˚& '
CreatedDate
˚˚' 2
)
˚˚2 3
.
˚˚3 4
HasColumnType
˚˚4 A
(
˚˚A B
$str
˚˚B L
)
˚˚L M
;
˚˚M N
entity
˝˝ 
.
˝˝ 
Property
˝˝ 
(
˝˝  
e
˝˝  !
=>
˝˝" $
e
˝˝% &
.
˝˝& '
MethodOfValuation
˝˝' 8
)
˝˝8 9
.
˛˛ 
HasMaxLength
˛˛ !
(
˛˛! "
$num
˛˛" $
)
˛˛$ %
.
ˇˇ 
	IsUnicode
ˇˇ 
(
ˇˇ 
false
ˇˇ $
)
ˇˇ$ %
;
ˇˇ% &
entity
ÅÅ 
.
ÅÅ 
Property
ÅÅ 
(
ÅÅ  
e
ÅÅ  !
=>
ÅÅ" $
e
ÅÅ% &
.
ÅÅ& '
ModifiedDate
ÅÅ' 3
)
ÅÅ3 4
.
ÅÅ4 5
HasColumnType
ÅÅ5 B
(
ÅÅB C
$str
ÅÅC M
)
ÅÅM N
;
ÅÅN O
entity
ÉÉ 
.
ÉÉ 
Property
ÉÉ 
(
ÉÉ  
e
ÉÉ  !
=>
ÉÉ" $
e
ÉÉ% &
.
ÉÉ& '
OtherReferenceNo
ÉÉ' 7
)
ÉÉ7 8
.
ÑÑ 
HasMaxLength
ÑÑ !
(
ÑÑ! "
$num
ÑÑ" %
)
ÑÑ% &
.
ÖÖ 
	IsUnicode
ÖÖ 
(
ÖÖ 
false
ÖÖ $
)
ÖÖ$ %
.
ÜÜ 
HasColumnName
ÜÜ "
(
ÜÜ" #
$str
ÜÜ# 5
)
ÜÜ5 6
;
ÜÜ6 7
entity
àà 
.
àà 
Property
àà 
(
àà  
e
àà  !
=>
àà" $
e
àà% &
.
àà& '
PropertyName
àà' 3
)
àà3 4
.
ââ 
HasMaxLength
ââ !
(
ââ! "
$num
ââ" %
)
ââ% &
.
ää 
	IsUnicode
ää 
(
ää 
false
ää $
)
ää$ %
;
ää% &
entity
åå 
.
åå 
Property
åå 
(
åå  
e
åå  !
=>
åå" $
e
åå% &
.
åå& '
PropertySubType
åå' 6
)
åå6 7
.
çç 
HasMaxLength
çç !
(
çç! "
$num
çç" %
)
çç% &
.
éé 
	IsUnicode
éé 
(
éé 
false
éé $
)
éé$ %
;
éé% &
entity
êê 
.
êê 
Property
êê 
(
êê  
e
êê  !
=>
êê" $
e
êê% &
.
êê& '
PropertyType
êê' 3
)
êê3 4
.
ëë 
HasMaxLength
ëë !
(
ëë! "
$num
ëë" %
)
ëë% &
.
íí 
	IsUnicode
íí 
(
íí 
false
íí $
)
íí$ %
;
íí% &
entity
îî 
.
îî 
Property
îî 
(
îî  
e
îî  !
=>
îî" $
e
îî% &
.
îî& '
ReferenceNo
îî' 2
)
îî2 3
.
ïï 
HasMaxLength
ïï !
(
ïï! "
$num
ïï" %
)
ïï% &
.
ññ 
	IsUnicode
ññ 
(
ññ 
false
ññ $
)
ññ$ %
.
óó 
HasColumnName
óó "
(
óó" #
$str
óó# 0
)
óó0 1
;
óó1 2
entity
ôô 
.
ôô 
Property
ôô 
(
ôô  
e
ôô  !
=>
ôô" $
e
ôô% &
.
ôô& '
	Requestor
ôô' 0
)
ôô0 1
.
öö 
HasMaxLength
öö !
(
öö! "
$num
öö" %
)
öö% &
.
õõ 
	IsUnicode
õõ 
(
õõ 
false
õõ $
)
õõ$ %
;
õõ% &
entity
ùù 
.
ùù 
Property
ùù 
(
ùù  
e
ùù  !
=>
ùù" $
e
ùù% &
.
ùù& '

StatusCode
ùù' 1
)
ùù1 2
.
ûû 
HasMaxLength
ûû !
(
ûû! "
$num
ûû" %
)
ûû% &
.
üü 
	IsUnicode
üü 
(
üü 
false
üü $
)
üü$ %
;
üü% &
entity
°° 
.
°° 
Property
°° 
(
°°  
e
°°  !
=>
°°" $
e
°°% &
.
°°& '
StatusComment
°°' 4
)
°°4 5
.
¢¢ 
HasMaxLength
¢¢ !
(
¢¢! "
$num
¢¢" %
)
¢¢% &
.
££ 
	IsUnicode
££ 
(
££ 
false
££ $
)
££$ %
;
££% &
entity
•• 
.
•• 
Property
•• 
(
••  
e
••  !
=>
••" $
e
••% &
.
••& '

StatusName
••' 1
)
••1 2
.
¶¶ 
HasMaxLength
¶¶ !
(
¶¶! "
$num
¶¶" %
)
¶¶% &
.
ßß 
	IsUnicode
ßß 
(
ßß 
false
ßß $
)
ßß$ %
;
ßß% &
entity
©© 
.
©© 
Property
©© 
(
©©  
e
©©  !
=>
©©" $
e
©©% &
.
©©& '
ValuationDate
©©' 4
)
©©4 5
.
©©5 6
HasColumnType
©©6 C
(
©©C D
$str
©©D J
)
©©J K
;
©©K L
entity
´´ 
.
´´ 
Property
´´ 
(
´´  
e
´´  !
=>
´´" $
e
´´% &
.
´´& '
ValuationPurpose
´´' 7
)
´´7 8
.
¨¨ 
HasMaxLength
¨¨ !
(
¨¨! "
$num
¨¨" %
)
¨¨% &
.
≠≠ 
	IsUnicode
≠≠ 
(
≠≠ 
false
≠≠ $
)
≠≠$ %
;
≠≠% &
entity
ØØ 
.
ØØ 
Property
ØØ 
(
ØØ  
e
ØØ  !
=>
ØØ" $
e
ØØ% &
.
ØØ& '
Valuer
ØØ' -
)
ØØ- .
.
∞∞ 
HasMaxLength
∞∞ !
(
∞∞! "
$num
∞∞" %
)
∞∞% &
.
±± 
	IsUnicode
±± 
(
±± 
false
±± $
)
±±$ %
;
±±% &
entity
≥≥ 
.
≥≥ 
Property
≥≥ 
(
≥≥  
e
≥≥  !
=>
≥≥" $
e
≥≥% &
.
≥≥& '
ValuerComment
≥≥' 4
)
≥≥4 5
.
¥¥ 
HasMaxLength
¥¥ !
(
¥¥! "
$num
¥¥" %
)
¥¥% &
.
µµ 
	IsUnicode
µµ 
(
µµ 
false
µµ $
)
µµ$ %
;
µµ% &
entity
∑∑ 
.
∑∑ 
Property
∑∑ 
(
∑∑  
e
∑∑  !
=>
∑∑" $
e
∑∑% &
.
∑∑& '
ValuerUpdateDate
∑∑' 7
)
∑∑7 8
.
∑∑8 9
HasColumnType
∑∑9 F
(
∑∑F G
$str
∑∑G Q
)
∑∑Q R
;
∑∑R S
}
∏∏ 
)
∏∏ 
;
∏∏ $
OnModelCreatingPartial
∫∫ "
(
∫∫" #
modelBuilder
∫∫# /
)
∫∫/ 0
;
∫∫0 1
}
ªª 	
partial
ΩΩ 
void
ΩΩ $
OnModelCreatingPartial
ΩΩ +
(
ΩΩ+ ,
ModelBuilder
ΩΩ, 8
modelBuilder
ΩΩ9 E
)
ΩΩE F
;
ΩΩF G
}
ææ 
}øø ¯
CD:\EltizamLive\Eltizam.Data.DataAccess\Entity\ComparableEvidence.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
ComparableEvidence +
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
?		 
	RequestId		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
public

 
string

 
?

 
Type

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
public 
int 
? 
Size 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
? 
Remarks 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
decimal 
? 
RateSqFt  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
decimal 
? 
Price 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 
AddtionalComments (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
ValuationRequest '
?' (
Request) 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
} 
} ∂
GD:\EltizamLive\Eltizam.Data.DataAccess\Entity\DboMasterValuationType.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class "
DboMasterValuationType /
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
ValuationType		 #
{		$ %
get		& )
;		) *
set		+ .
;		. /
}		0 1
=		2 3
null		4 8
!		8 9
;		9 :
public

 
int

 
IsActive

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} …
;D:\EltizamLive\Eltizam.Data.DataAccess\Entity\Dictionary.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 

Dictionary #
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
Type		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
=		) *
null		+ /
!		/ 0
;		0 1
public

 
string

 
Name

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
=

) *
null

+ /
!

/ 0
;

0 1
public 
int 
? 
	SortOrder 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
} 
}  
@D:\EltizamLive\Eltizam.Data.DataAccess\Entity\EmailLogHistory.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
EmailLogHistory (
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
FromAddress		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
=		0 1
null		2 6
!		6 7
;		7 8
public

 
string

 
Subject

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
=

, -
null

. 2
!

2 3
;

3 4
public 
string 
	ToAddress 
{  !
get" %
;% &
set' *
;* +
}, -
=. /
null0 4
!4 5
;5 6
public 
string 
? 
	Ccaddress  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 

BccAddress !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Body 
{ 
get  
;  !
set" %
;% &
}' (
=) *
null+ /
!/ 0
;0 1
public 
bool 
? 
IsSent 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
EmailResponse $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
} 
} Á%
>D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterAddress.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterAddress &
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
?		 

TableKeyId		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public

 
string

 
?

 
	TableName

  
{

! "
get

# &
;

& '
set

( +
;

+ ,
}

- .
public 
string 
Address1 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
null/ 3
!3 4
;4 5
public 
string 
? 
Address2 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Address3 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
PinNo 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
Landmark 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 
? 
	CountryId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 
StateId 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
? 
CityId 
{ 
get  
;  !
set" %
;% &
}' (
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
AlternatePhone %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
string 
? 
Email 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
AlternateEmail %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
string 
? 
Phone 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
Landlinephone $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
AlternatePhoneExt (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
string 
? 
PhoneExt 
{  !
get" %
;% &
set' *
;* +
}, -
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public   
string   
?   
Zone   
{   
get   !
;  ! "
set  # &
;  & '
}  ( )
public"" 
virtual"" 

MasterCity"" !
?""! "
City""# '
{""( )
get""* -
;""- .
set""/ 2
;""2 3
}""4 5
}## 
}$$ º
>D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterAmenity.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterAmenity &
{ 
public 
MasterAmenity 
( 
) 
{		 	#
MasterPropertyAmenities

 #
=

$ %
new

& )
HashSet

* 1
<

1 2!
MasterPropertyAmenity

2 G
>

G H
(

H I
)

I J
;

J K
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
AmenityName !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
null2 6
!6 7
;7 8
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
Icon 
{ 
get !
;! "
set# &
;& '
}( )
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
ICollection "
<" #!
MasterPropertyAmenity# 8
>8 9#
MasterPropertyAmenities: Q
{R S
getT W
;W X
setY \
;\ ]
}^ _
} 
} ›
?D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterAuditLog.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterAuditLog '
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
?		 

TableKeyId		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public

 
string

 
?

 
	TableName

  
{

! "
get

# &
;

& '
set

( +
;

+ ,
}

- .
public 
int 
? 
ParentTableKeyId $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
string 
? 
ParentTableName &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
? 

ActionType !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 
Log 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
} ÿ
;D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterCity.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 

MasterCity #
{ 
public 

MasterCity 
( 
) 
{		 	
MasterAddresses

 
=

 
new

 !
HashSet

" )
<

) *
MasterAddress

* 7
>

7 8
(

8 9
)

9 :
;

: ;
MasterLocations 
= 
new !
HashSet" )
<) *
MasterLocation* 8
>8 9
(9 :
): ;
;; <
MasterUserAddresses 
=  !
new" %
HashSet& -
<- .
MasterUserAddress. ?
>? @
(@ A
)A B
;B C
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
int 
	CountryId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
StateId 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
? 
CityName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Stdcode 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
? 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
ICollection "
<" #
MasterAddress# 0
>0 1
MasterAddresses2 A
{B C
getD G
;G H
setI L
;L M
}N O
public 
virtual 
ICollection "
<" #
MasterLocation# 1
>1 2
MasterLocations3 B
{C D
getE H
;H I
setJ M
;M N
}O P
public 
virtual 
ICollection "
<" #
MasterUserAddress# 4
>4 5
MasterUserAddresses6 I
{J K
getL O
;O P
setQ T
;T U
}V W
} 
} £$
=D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterClient.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterClient %
{ 
public 
MasterClient 
( 
) 
{		 	 
MasterClientContacts

  
=

! "
new

# &
HashSet

' .
<

. /
MasterClientContact

/ B
>

B C
(

C D
)

D E
;

E F
ValuationRequests 
= 
new  #
HashSet$ +
<+ ,
ValuationRequest, <
>< =
(= >
)> ?
;? @
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
? 
	FirstName  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 

MiddleName !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 
LastName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 

ClientName !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
? 
ClientTypeId  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
Company 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
	Trnnumber  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DateTime 
? 
TrnexpiryDate &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
? 
LicenseNumber $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 
Logo 
{ 
get !
;! "
set# &
;& '
}( )
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
? 
ProfileAttachmentId '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public!! 
virtual!! "
MasterDictionaryDetail!! -
?!!- .

ClientType!!/ 9
{!!: ;
get!!< ?
;!!? @
set!!A D
;!!D E
}!!F G
public"" 
virtual"" 
ICollection"" "
<""" #
MasterClientContact""# 6
>""6 7 
MasterClientContacts""8 L
{""M N
get""O R
;""R S
set""T W
;""W X
}""Y Z
public## 
virtual## 
ICollection## "
<##" #
ValuationRequest### 3
>##3 4
ValuationRequests##5 F
{##G H
get##I L
;##L M
set##N Q
;##Q R
}##S T
}$$ 
}%% ˆ
DD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterClientContact.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterClientContact ,
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
ClientId		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
public

 
string

 
?

 
ContactPerson

 $
{

% &
get

' *
;

* +
set

, /
;

/ 0
}

1 2
public 
string 
? 

Department !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 
Designation "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 
Email 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
PhoneNumber "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 

CreateDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
MasterClient #
Client$ *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
=9 :
null; ?
!? @
;@ A
} 
} ·
AD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterClientType.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterClientType )
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 

ClientType		  
{		! "
get		# &
;		& '
set		( +
;		+ ,
}		- .
=		/ 0
null		1 5
!		5 6
;		6 7
public

 
bool

 
?

 
IsActive

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} Õ
=D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterConfig.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterConfig %
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
?		 
	PageNumer		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
public

 
int

 
?

 
PageSize

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
int 
? 
OrderBy 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
? 
ReverseOrder  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} €
>D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterContact.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterContact &
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
?		 

TableKeyId		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public

 
string

 
?

 
	TableName

  
{

! "
get

# &
;

& '
set

( +
;

+ ,
}

- .
public 
string 
? 
ContactPersonName (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
int 
? 
DepartmentId  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
? 
DesignationId !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 
Email 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
Mobile 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 
Status 
{ 
get  
;  !
set" %
;% &
}' (
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
	MobileExt  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ç
>D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterCountry.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterCountry &
{ 
public 
MasterCountry 
( 
) 
{		 	
MasterLocations

 
=

 
new

 !
HashSet

" )
<

) *
MasterLocation

* 8
>

8 9
(

9 :
)

: ;
;

; <
MasterStates 
= 
new 
HashSet &
<& '
MasterState' 2
>2 3
(3 4
)4 5
;5 6
MasterUserAddresses 
=  !
new" %
HashSet& -
<- .
MasterUserAddress. ?
>? @
(@ A
)A B
;B C
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
CountryName !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
null2 6
!6 7
;7 8
public 
string 
? 
CountryCode "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 
IsdcountryCode %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
ICollection "
<" #
MasterLocation# 1
>1 2
MasterLocations3 B
{C D
getE H
;H I
setJ M
;M N
}O P
public 
virtual 
ICollection "
<" #
MasterState# .
>. /
MasterStates0 <
{= >
get? B
;B C
setD G
;G H
}I J
public 
virtual 
ICollection "
<" #
MasterUserAddress# 4
>4 5
MasterUserAddresses6 I
{J K
getL O
;O P
setQ T
;T U
}V W
} 
} Î
?D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterCurrency.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterCurrency '
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
CurrencyName		 "
{		# $
get		% (
;		( )
set		* -
;		- .
}		/ 0
=		1 2
null		3 7
!		7 8
;		8 9
public

 
decimal

 
?

 
CurrencyValue

 %
{

& '
get

( +
;

+ ,
set

- 0
;

0 1
}

2 3
public 
string 
? 
CurrencyCode #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
decimal 
? 
ExchangeRate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
StateId 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
? 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ∂
AD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterDepartment.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterDepartment )
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 

Department		  
{		! "
get		# &
;		& '
set		( +
;		+ ,
}		- .
=		/ 0
null		1 5
!		5 6
;		6 7
public

 
int

 
?

 
IsActive

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} π
BD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterDesignation.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterDesignation *
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
Designation		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
=		0 1
null		2 6
!		6 7
;		7 8
public

 
int

 
?

 
IsActive

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ƒ
AD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterDictionary.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterDictionary )
{ 
public 
MasterDictionary 
(  
)  !
{		 	#
MasterDictionaryDetails

 #
=

$ %
new

& )
HashSet

* 1
<

1 2"
MasterDictionaryDetail

2 H
>

H I
(

I J
)

J K
;

K L
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
? 
Description "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
Sort 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
? 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
DictionaryCode %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
ICollection "
<" #"
MasterDictionaryDetail# 9
>9 :#
MasterDictionaryDetails; R
{S T
getU X
;X Y
setZ ]
;] ^
}_ `
} 
} “&
GD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterDictionaryDetail.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class "
MasterDictionaryDetail /
{ 
public "
MasterDictionaryDetail %
(% &
)& '
{		 	
MasterClients

 
=

 
new

 
HashSet

  '
<

' (
MasterClient

( 4
>

4 5
(

5 6
)

6 7
;

7 8$
MasterPropertyFurnisheds $
=% &
new' *
HashSet+ 2
<2 3
MasterProperty3 A
>A B
(B C
)C D
;D E(
MasterPropertyOwnershipTypes (
=) *
new+ .
HashSet/ 6
<6 7
MasterProperty7 E
>E F
(F G
)G H
;H I#
MasterPropertyUnitTypes #
=$ %
new& )
HashSet* 1
<1 2
MasterProperty2 @
>@ A
(A B
)B C
;C D!
MasterUserDepartments !
=" #
new$ '
HashSet( /
</ 0

MasterUser0 :
>: ;
(; <
)< =
;= >"
MasterUserDesignations "
=# $
new% (
HashSet) 0
<0 1

MasterUser1 ;
>; <
(< =
)= >
;> ?
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
int 
DictionaryId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
null2 6
!6 7
;7 8
public 
int 
? 
Sort 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
? 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
MasterDictionary '

Dictionary( 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
=A B
nullC G
!G H
;H I
public 
virtual 
ICollection "
<" #
MasterClient# /
>/ 0
MasterClients1 >
{? @
getA D
;D E
setF I
;I J
}K L
public 
virtual 
ICollection "
<" #
MasterProperty# 1
>1 2$
MasterPropertyFurnisheds3 K
{L M
getN Q
;Q R
setS V
;V W
}X Y
public 
virtual 
ICollection "
<" #
MasterProperty# 1
>1 2(
MasterPropertyOwnershipTypes3 O
{P Q
getR U
;U V
setW Z
;Z [
}\ ]
public   
virtual   
ICollection   "
<  " #
MasterProperty  # 1
>  1 2#
MasterPropertyUnitTypes  3 J
{  K L
get  M P
;  P Q
set  R U
;  U V
}  W X
public!! 
virtual!! 
ICollection!! "
<!!" #

MasterUser!!# -
>!!- .!
MasterUserDepartments!!/ D
{!!E F
get!!G J
;!!J K
set!!L O
;!!O P
}!!Q R
public"" 
virtual"" 
ICollection"" "
<""" #

MasterUser""# -
>""- ."
MasterUserDesignations""/ E
{""F G
get""H K
;""K L
set""M P
;""P Q
}""R S
}## 
}$$ ˜
?D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterDocument.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterDocument '
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 

TableKeyId		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
public

 
string

 
?

 
	TableName

  
{

! "
get

# &
;

& '
set

( +
;

+ ,
}

- .
public 
string 
? 
DocumentName #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
FileName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
FileType 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
FilePath 
{  !
get" %
;% &
set' *
;* +
}, -
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} Å
@D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterException.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterException (
{ 
public 
long 
ExceptionId 
{  !
get" %
;% &
set' *
;* +
}, -
public		 
string		 
?		 
Message		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public

 
string

 
?

 
Source

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
public 
string 
? 
InnerException %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
string 
? 
StrackTrace "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} ’
?D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterLocation.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterLocation '
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
?		 
LocationName		 #
{		$ %
get		& )
;		) *
set		+ .
;		. /
}		0 1
public

 
int

 
	CountryId

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
int 
StateId 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
CityId 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
? 
Sector 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 
Status 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
? 
Latitude 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
	Longitude  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
? 
HomeCurrencyId "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
ForeignCurrencyId %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 

MasterCity !
City" &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
=5 6
null7 ;
!; <
;< =
public 
virtual 
MasterCountry $
Country% ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
=; <
null= A
!A B
;B C
public 
virtual 
MasterState "
State# (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
=7 8
null9 =
!= >
;> ?
} 
} ÷
=D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterModule.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterModule %
{ 
public 
int 
ModuleId 
{ 
get !
;! "
set# &
;& '
}( )
public		 
string		 
?		 

ModuleName		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
public

 
bool

 
?

 
IsActive

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
ModifyBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 

ModifyDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
ControlName "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	SortOrder 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 
Icon 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
ViewName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
	HoverIcon  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
} Ö
CD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterNotification.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterNotification +
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
?		 
ValuationRequestId		 &
{		' (
get		) ,
;		, -
set		. 1
;		1 2
}		3 4
public

 
int

 
?

 
StatusId

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
string 
? 
Subject 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
ToEmails 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Body 
{ 
get !
;! "
set# &
;& '
}( )
public 
DateTime 
? 
SentDatetime %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
bool 
IsEmailSent 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 
ReadBy 
{ 
get  
;  !
set" %
;% &
}' (
public 
DateTime 
? 
ReadDate !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
virtual 
ValuationRequest '
?' (
ValuationRequest) 9
{: ;
get< ?
;? @
setA D
;D E
}F G
} 
} ø
DD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterOwnershipType.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterOwnershipType ,
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
OwnershipType		 #
{		$ %
get		& )
;		) *
set		+ .
;		. /
}		0 1
=		2 3
null		4 8
!		8 9
;		9 :
public

 
int

 
?

 
IsActive

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ß2
?D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterProperty.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterProperty '
{ 
public 
MasterProperty 
( 
) 
{		 	#
MasterPropertyAmenities

 #
=

$ %
new

& )
HashSet

* 1
<

1 2!
MasterPropertyAmenity

2 G
>

G H
(

H I
)

I J
;

J K#
MasterPropertyLocations #
=$ %
new& )
HashSet* 1
<1 2"
MasterPropertyLocation2 H
>H I
(I J
)J K
;K L
ValuationRequests 
= 
new  #
HashSet$ +
<+ ,
ValuationRequest, <
>< =
(= >
)> ?
;? @
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
? 
PropertyName #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 
PropertyTypeId "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
PropertySubTypeId %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 
OwnershipTypeId #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 

UnitTypeId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
AdditionalUnits &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
? 
FurnishedId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
ValuationPurpose '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
decimal 
? 
BuildUpAreaSqFt '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
decimal 
? 
BuildUpAreaSqMtr (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
int 
? 
AgeOfConstruction %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 
Parking 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
ParkingBayNo #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
Description "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 
	Amenities  
{! "
get# &
;& '
set( +
;+ ,
}- .
public   
DateTime   
?   
CreatedDate   $
{  % &
get  ' *
;  * +
set  , /
;  / 0
}  1 2
public!! 
int!! 
?!! 
	CreatedBy!! 
{!! 
get!!  #
;!!# $
set!!% (
;!!( )
}!!* +
public"" 
DateTime"" 
?"" 
ModifiedDate"" %
{""& '
get""( +
;""+ ,
set""- 0
;""0 1
}""2 3
public## 
int## 
?## 

ModifiedBy## 
{##  
get##! $
;##$ %
set##& )
;##) *
}##+ ,
public$$ 
bool$$ 
?$$ 
	IsDeleted$$ 
{$$  
get$$! $
;$$$ %
set$$& )
;$$) *
}$$+ ,
public%% 
string%% 
?%% 

UnitNumber%% !
{%%" #
get%%$ '
;%%' (
set%%) ,
;%%, -
}%%. /
public'' 
virtual'' "
MasterDictionaryDetail'' -
?''- .
	Furnished''/ 8
{''9 :
get''; >
;''> ?
set''@ C
;''C D
}''E F
public(( 
virtual(( "
MasterDictionaryDetail(( -
?((- .
OwnershipType((/ <
{((= >
get((? B
;((B C
set((D G
;((G H
}((I J
public)) 
virtual)) "
MasterDictionaryDetail)) -
?))- .
UnitType))/ 7
{))8 9
get)): =
;))= >
set))? B
;))B C
}))D E
public** 
virtual** 
ICollection** "
<**" #!
MasterPropertyAmenity**# 8
>**8 9#
MasterPropertyAmenities**: Q
{**R S
get**T W
;**W X
set**Y \
;**\ ]
}**^ _
public++ 
virtual++ 
ICollection++ "
<++" #"
MasterPropertyLocation++# 9
>++9 :#
MasterPropertyLocations++; R
{++S T
get++U X
;++X Y
set++Z ]
;++] ^
}++_ `
public,, 
virtual,, 
ICollection,, "
<,," #
ValuationRequest,,# 3
>,,3 4
ValuationRequests,,5 F
{,,G H
get,,I L
;,,L M
set,,N Q
;,,Q R
},,S T
}-- 
}.. ﬂ
FD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterPropertyAmenity.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class !
MasterPropertyAmenity .
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
	AmenityId		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public

 
int

 

PropertyId

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
? 
PropertyTypeId "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
MasterAmenity $
Amenity% ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
=; <
null= A
!A B
;B C
public 
virtual 
MasterProperty %
Property& .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
== >
null? C
!C D
;D E
} 
} ú
ED:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterPropertyDetail.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class  
MasterPropertyDetail -
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 

PropertyId		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
public

 
int

 
?

 
	CountryId

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
public 
int 
? 
Stated 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
? 
CityId 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
? 
Zone 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
BuildingProject &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
? 
Latitude 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
	Longitude  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
Address1 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Address2 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Pincode 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
Landmark 
{  !
get" %
;% &
set' *
;* +
}, -
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
MasterProperty %
Property& .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
== >
null? C
!C D
;D E
} 
} À
GD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterPropertyLocation.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class "
MasterPropertyLocation /
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 

PropertyId		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
public

 
int

 
?

 
	CountryId

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
public 
int 
? 
StateId 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
? 
CityId 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
? 
Zone 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
BuildingProject &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
? 
Latitude 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
	Longitude  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
Address1 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Address2 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Pincode 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
Landmark 
{  !
get" %
;% &
set' *
;* +
}, -
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
MasterProperty %
Property& .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
== >
null? C
!C D
;D E
} 
} Ó
FD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterPropertySubType.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class !
MasterPropertySubType .
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
PropertySubType		 %
{		& '
get		( +
;		+ ,
set		- 0
;		0 1
}		2 3
=		4 5
null		6 :
!		: ;
;		; <
public

 
bool

 
?

 
IsActive

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
? 
PropertyTypeId "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
MasterPropertyType )
?) *
PropertyType+ 7
{8 9
get: =
;= >
set? B
;B C
}D E
} 
} £
CD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterPropertyType.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterPropertyType +
{ 
public 
MasterPropertyType !
(! "
)" #
{		 	"
MasterPropertySubTypes

 "
=

# $
new

% (
HashSet

) 0
<

0 1!
MasterPropertySubType

1 F
>

F G
(

G H
)

H I
;

I J
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
PropertyType "
{# $
get% (
;( )
set* -
;- .
}/ 0
=1 2
null3 7
!7 8
;8 9
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
ICollection "
<" #!
MasterPropertySubType# 8
>8 9"
MasterPropertySubTypes: P
{Q R
getS V
;V W
setX [
;[ \
}] ^
} 
} ê
DD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterQualification.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterQualification ,
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 

TableKeyId		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
public

 
string

 
	TableName

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
=

. /
null

0 4
!

4 5
;

5 6
public 
string 
Qualification #
{$ %
get& )
;) *
set+ .
;. /
}0 1
=2 3
null4 8
!8 9
;9 :
public 
string 
? 
Subject 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
	Institute  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
Grade 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
YearOfInstitute &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
? 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} Ê
CD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterResourceType.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterResourceType +
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
ResourceType		 "
{		# $
get		% (
;		( )
set		* -
;		- .
}		/ 0
=		1 2
null		3 7
!		7 8
;		8 9
public

 
int

 
?

 
IsActive

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ”
;D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterRole.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 

MasterRole #
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
?		 
RoleName		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
bool

 
?

 
IsActive

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
? 
DeletedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
} Å
KD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterRoleModulePermission.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class &
MasterRoleModulePermission 3
{ 
public 
int 
RoleModuleId 
{  !
get" %
;% &
set' *
;* +
}, -
public		 
int		 
?		 
RoleId		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
int

 
?

 
ModuleId

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
int 
? 
SubModuleId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
bool 
? 
View 
{ 
get 
;  
set! $
;$ %
}& '
public 
bool 
? 
Add 
{ 
get 
; 
set  #
;# $
}% &
public 
bool 
? 
Edit 
{ 
get 
;  
set! $
;$ %
}& '
public 
bool 
? 
Delete 
{ 
get !
;! "
set# &
;& '
}( )
public 
bool 
? 
Approve 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
ModifyBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 

ModifyDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
} é
<D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterState.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterState $
{ 
public 
MasterState 
( 
) 
{		 	
MasterLocations

 
=

 
new

 !
HashSet

" )
<

) *
MasterLocation

* 8
>

8 9
(

9 :
)

: ;
;

; <
MasterUserAddresses 
=  !
new" %
HashSet& -
<- .
MasterUserAddress. ?
>? @
(@ A
)A B
;B C
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
int 
	CountryId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
	StateName  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
	StateCode  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
? 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
MasterCountry $
Country% ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
=; <
null= A
!A B
;B C
public 
virtual 
ICollection "
<" #
MasterLocation# 1
>1 2
MasterLocations3 B
{C D
getE H
;H I
setJ M
;M N
}O P
public 
virtual 
ICollection "
<" #
MasterUserAddress# 4
>4 5
MasterUserAddresses6 I
{J K
getL O
;O P
setQ T
;T U
}V W
} 
} „
@D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterSubModule.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterSubModule (
{ 
public 
int 
SubModuleId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public		 
int		 
?		 
ModuleId		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public

 
string

 
?

 
SubModuleName

 $
{

% &
get

' *
;

* +
set

, /
;

/ 0
}

1 2
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
ModifyBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 

ModifyDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
ControlName "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} √7
;D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterUser.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 

MasterUser #
{ 
public 

MasterUser 
( 
) 
{		 	
MasterUserAddresses

 
=

  !
new

" %
HashSet

& -
<

- .
MasterUserAddress

. ?
>

? @
(

@ A
)

A B
;

B C
MasterUserContacts 
=  
new! $
HashSet% ,
<, -
MasterUserContact- >
>> ?
(? @
)@ A
;A B
ValuationRequests 
= 
new  #
HashSet$ +
<+ ,
ValuationRequest, <
>< =
(= >
)> ?
;? @
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
	FirstName 
{  !
get" %
;% &
set' *
;* +
}, -
=. /
null0 4
!4 5
;5 6
public 
string 
? 

MiddleName !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 
LastName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
DateTime 
? 
DateOfBirth $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
DepartmentId  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
? 
DesignationId !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 
	LicenseNo  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
? 
	CompanyId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 

ResourceId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
null/ 3
!3 4
;4 5
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
CompanyName "
{# $
get% (
;( )
set* -
;- .
}/ 0
public   
string   
?   
Email   
{   
get   "
;  " #
set  $ '
;  ' (
}  ) *
public!! 
int!! 
?!! 
RoleId!! 
{!! 
get!!  
;!!  !
set!!" %
;!!% &
}!!' (
public"" 
DateTime"" 
?"" "
ForgotPasswordDateTime"" /
{""0 1
get""2 5
;""5 6
set""7 :
;"": ;
}""< =
public## 
string## 
?## 
ForgotPasswordToken## *
{##+ ,
get##- 0
;##0 1
set##2 5
;##5 6
}##7 8
public$$ 
int$$ 
?$$ 
	ReportsTo$$ 
{$$ 
get$$  #
;$$# $
set$$% (
;$$( )
}$$* +
public%% 
int%% 
?%% 

UserTypeId%% 
{%%  
get%%! $
;%%$ %
set%%& )
;%%) *
}%%+ ,
public&& 
string&& 
?&& 
UserName&& 
{&&  !
get&&" %
;&&% &
set&&' *
;&&* +
}&&, -
public'' 
int'' 
?'' 
ProfileAttachmentId'' '
{''( )
get''* -
;''- .
set''/ 2
;''2 3
}''4 5
public(( 
bool(( 
?(( 
	IsDeleted(( 
{((  
get((! $
;(($ %
set((& )
;(() *
}((+ ,
public)) 
int)) 
?)) 
ApproverLevelId)) #
{))$ %
get))& )
;))) *
set))+ .
;)). /
}))0 1
public** 
int** 
?** 
GenderId** 
{** 
get** "
;**" #
set**$ '
;**' (
}**) *
public-- 
virtual-- "
MasterDictionaryDetail-- -
?--- .

Department--/ 9
{--: ;
get--< ?
;--? @
set--A D
;--D E
}--F G
public.. 
virtual.. "
MasterDictionaryDetail.. -
?..- .
Designation../ :
{..; <
get..= @
;..@ A
set..B E
;..E F
}..G H
public// 
virtual// 
ICollection// "
<//" #
MasterUserAddress//# 4
>//4 5
MasterUserAddresses//6 I
{//J K
get//L O
;//O P
set//Q T
;//T U
}//V W
public00 
virtual00 
ICollection00 "
<00" #
MasterUserContact00# 4
>004 5
MasterUserContacts006 H
{00I J
get00K N
;00N O
set00P S
;00S T
}00U V
public11 
virtual11 
ICollection11 "
<11" #
ValuationRequest11# 3
>113 4
ValuationRequests115 F
{11G H
get11I L
;11L M
set11N Q
;11Q R
}11S T
}22 
}33 ◊
BD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterUserAddress.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterUserAddress *
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
?		 
UserId		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
string

 
Address1

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
=

- .
null

/ 3
!

3 4
;

4 5
public 
string 
? 
Address2 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Address3 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
PinNo 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
	CountryId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
StateId 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
CityId 
{ 
get 
;  
set! $
;$ %
}& '
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 

MasterCity !
City" &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
=5 6
null7 ;
!; <
;< =
public 
virtual 
MasterCountry $
Country% ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
=; <
null= A
!A B
;B C
public 
virtual 
MasterState "
State# (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
=7 8
null9 =
!= >
;> ?
public 
virtual 

MasterUser !
?! "
User# '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
} 
} ∫
BD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterUserContact.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterUserContact *
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
?		 
UserId		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
string

 
?

 
Email

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
string 
? 
Mobile 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 
Status 
{ 
get  
;  !
set" %
;% &
}' (
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 

MasterUser !
?! "
User# '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
} 
} ¸
CD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterValuationFee.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterValuationFee +
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
?		 
PropertyTypeId		 "
{		# $
get		% (
;		( )
set		* -
;		- .
}		/ 0
public

 
int

 
?

 
PropertySubTypeId

 %
{

& '
get

( +
;

+ ,
set

- 0
;

0 1
}

2 3
public 
int 
? 
OwnershipTypeId #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
CarpetAreaInSqFt '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
string 
? 
CarpetAreaInSqMtr (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
int 
? 
ClientTypeId  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
? 
ValuationType !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
? 
ValuationFeeTypeId &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
decimal 
? 
ValuationFees %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
decimal 
? 
Vat 
{ 
get !
;! "
set# &
;& '
}( )
public 
decimal 
? 
OtherCharges $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
decimal 
? 
TotalValuationFees *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
decimal 
? 
FixedvaluationFees *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ¬
GD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterValuationFeeType.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class "
MasterValuationFeeType /
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
?		 
ValuationFeeType		 '
{		( )
get		* -
;		- .
set		/ 2
;		2 3
}		4 5
public

 
int

 
?

 
IsActive

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} µ
TD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterValuationRequestApproverLevel.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class /
#MasterValuationRequestApproverLevel <
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
Description		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
=		0 1
null		2 6
!		6 7
;		7 8
public

 
decimal

 

FromAmount

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
public 
decimal 
? 
ToAmount  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} ’
OD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterValuationRequestVendorDd.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class *
MasterValuationRequestVendorDd 7
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
Status		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
=		+ ,
null		- 1
!		1 2
;		2 3
public

 
string

 

StatusCode

  
{

! "
get

# &
;

& '
set

( +
;

+ ,
}

- .
=

/ 0
null

1 5
!

5 6
;

6 7
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 
Sort 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
? 
Group 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 
ModifyBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 

ModifyDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
	ColorCode  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
BackGroundColor &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
? 
Type 
{ 
get 
; 
set  #
;# $
}% &
} 
} Ó
FD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterValuationStatus.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class !
MasterValuationStatus .
{ 
public !
MasterValuationStatus $
($ %
)% &
{		 	
ValuationRequests

 
=

 
new

  #
HashSet

$ +
<

+ ,
ValuationRequest

, <
>

< =
(

= >
)

> ?
;

? @
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Status 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
null- 1
!1 2
;2 3
public 
string 

StatusCode  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
null1 5
!5 6
;6 7
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 
Sort 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
? 
Group 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 
ModifyBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 

ModifyDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
	ColorCode  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
BackGroundColor &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
? 
Type 
{ 
get 
; 
set  #
;# $
}% &
public 
virtual 
ICollection "
<" #
ValuationRequest# 3
>3 4
ValuationRequests5 F
{G H
getI L
;L M
setN Q
;Q R
}S T
} 
} ’
OD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterValuationStatus202401101.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class *
MasterValuationStatus202401101 7
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
Status		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
=		+ ,
null		- 1
!		1 2
;		2 3
public

 
string

 

StatusCode

  
{

! "
get

# &
;

& '
set

( +
;

+ ,
}

- .
=

/ 0
null

1 5
!

5 6
;

6 7
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 
Sort 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
? 
Group 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 
ModifyBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 

ModifyDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
	ColorCode  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
BackGroundColor &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
? 
Type 
{ 
get 
; 
set  #
;# $
}% &
} 
} ’
OD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterValuationStatus202401102.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class *
MasterValuationStatus202401102 7
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
Status		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
=		+ ,
null		- 1
!		1 2
;		2 3
public

 
string

 

StatusCode

  
{

! "
get

# &
;

& '
set

( +
;

+ ,
}

- .
=

/ 0
null

1 5
!

5 6
;

6 7
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 
Sort 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
? 
Group 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 
ModifyBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 

ModifyDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
	ColorCode  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
BackGroundColor &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
? 
Type 
{ 
get 
; 
set  #
;# $
}% &
} 
} ’
OD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterValuationStatus202401103.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class *
MasterValuationStatus202401103 7
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
Status		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
=		+ ,
null		- 1
!		1 2
;		2 3
public

 
string

 

StatusCode

  
{

! "
get

# &
;

& '
set

( +
;

+ ,
}

- .
=

/ 0
null

1 5
!

5 6
;

6 7
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 
Sort 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
? 
Group 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 
ModifyBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 

ModifyDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
	ColorCode  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
BackGroundColor &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
? 
Type 
{ 
get 
; 
set  #
;# $
}% &
} 
} «
HD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterValuationStatusDd.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class #
MasterValuationStatusDd 0
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
Status		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
=		+ ,
null		- 1
!		1 2
;		2 3
public

 
string

 

StatusCode

  
{

! "
get

# &
;

& '
set

( +
;

+ ,
}

- .
=

/ 0
null

1 5
!

5 6
;

6 7
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 
Sort 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
? 
Group 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 
ModifyBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 

ModifyDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
	ColorCode  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
BackGroundColor &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
? 
Type 
{ 
get 
; 
set  #
;# $
}% &
} 
} ·
DD:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterValuationType.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterValuationType ,
{ 
public 
MasterValuationType "
(" #
)# $
{		 	
MasterValuationFees

 
=

  !
new

" %
HashSet

& -
<

- .
MasterValuationFee

. @
>

@ A
(

A B
)

B C
;

C D
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
ValuationType #
{$ %
get& )
;) *
set+ .
;. /
}0 1
=2 3
null4 8
!8 9
;9 :
public 
int 
IsActive 
{ 
get !
;! "
set# &
;& '
}( )
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
ICollection "
<" #
MasterValuationFee# 5
>5 6
MasterValuationFees7 J
{K L
getM P
;P Q
setR U
;U V
}W X
} 
} –
=D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterVendor.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterVendor %
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 

VendorName		  
{		! "
get		# &
;		& '
set		( +
;		+ ,
}		- .
=		/ 0
null		1 5
!		5 6
;		6 7
public

 
string

 
?

 
CompanyName

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
public 
DateTime 
? 
EstimattionDate (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
string 
? 
BusinessType #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
CompanyDescription )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
bool 
? 
Status 
{ 
get !
;! "
set# &
;& '
}( )
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
? 
ProfileAttachmentId '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ‘
?D:\EltizamLive\Eltizam.Data.DataAccess\Entity\MasterVendorDd.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
MasterVendorDd '
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 

VendorName		  
{		! "
get		# &
;		& '
set		( +
;		+ ,
}		- .
=		/ 0
null		1 5
!		5 6
;		6 7
public

 
string

 
?

 
CompanyName

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
public 
DateTime 
? 
EstimattionDate (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
string 
? 
BusinessType #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
CompanyDescription )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
bool 
? 
Status 
{ 
get !
;! "
set# &
;& '
}( )
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
? 
ProfileAttachmentId '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ≠
ED:\EltizamLive\Eltizam.Data.DataAccess\Entity\Master_Qualification.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public		 

class		  
Master_Qualification		 %
{

 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
Qualification #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
Subject 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
	Institute 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
Grade 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
YearOfInstitute %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
IsActive 
{ 
get !
;! "
set# &
;& '
}( )
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
ModifiedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 

ModifiedBy 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} ç
@D:\EltizamLive\Eltizam.Data.DataAccess\Entity\SiteDescription.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
SiteDescription (
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
ValuationRequestId		 %
{		& '
get		( +
;		+ ,
set		- 0
;		0 1
}		2 3
public

 
string

 
?

 
Location

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 
decimal 
? 
InternalArea $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
decimal 
? 
ExternalArea $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
Floor 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
? 
Room 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
? 
Bedrooms 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
Storage 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
? 
Quantity 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
AdditionComment &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
? 
PropertyCondition (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
string 
? 
AdditionalNotes &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
? 
Others 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
ValuationRequest '
ValuationRequest( 8
{9 :
get; >
;> ?
set@ C
;C D
}E F
=G H
nullI M
!M N
;N O
} 
} Ã
7D:\EltizamLive\Eltizam.Data.DataAccess\Entity\Upload.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public		 

class		 
Upload		 
{

 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
FileName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
ContentType !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
FileType 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} õ
CD:\EltizamLive\Eltizam.Data.DataAccess\Entity\ValuationAssesment.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
ValuationAssesment +
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
?		 
	RequestId		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
public

 
decimal

 
?

 
MarketValue

 #
{

$ %
get

& )
;

) *
set

+ .
;

. /
}

0 1
public 
decimal 
? 

MarketRate "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
LifeOfBuilding "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
decimal 
?  
AnnualMaintainceCost ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
bool 
? 

Insuarance 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 
InsuranceDetails '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
ValuationRequest '
?' (
Request) 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
} 
} ä
LD:\EltizamLive\Eltizam.Data.DataAccess\Entity\ValuationComparableEvidence.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class '
ValuationComparableEvidence 4
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
?		 
	RequestId		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
public

 
string

 
?

 
Type

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
public 
int 
? 
Size 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
? 
Remarks 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
decimal 
? 
RateSqFt  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
decimal 
? 
Price 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 
AddtionalComments (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
ValuationRequest '
?' (
Request) 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
} 
} â+
AD:\EltizamLive\Eltizam.Data.DataAccess\Entity\ValuationInvoice.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
ValuationInvoice )
{ 
public 
ValuationInvoice 
(  
)  !
{		 	'
ValuationPaymentInvoiceMaps

 '
=

( )
new

* -
HashSet

. 5
<

5 6&
ValuationPaymentInvoiceMap

6 P
>

P Q
(

Q R
)

R S
;

S T
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
ReferenceNo !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
null2 6
!6 7
;7 8
public 
int 
ValuationRequestId %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
TransactionModeId $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
TransactionStatusId &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
decimal 
Amount 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 

CheckNumer !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 
CheckBankName $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
? 
	CheckDate "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 

CardNumber !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 
CardBankName #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
CardHolderName %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
DateTime 
? 

ExpireDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
AccountBankName &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
? 
AccountHolderName (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
string 
? 
Note 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public   
DateTime   
?   
ModifiedDate   %
{  & '
get  ( +
;  + ,
set  - 0
;  0 1
}  2 3
public!! 
decimal!! 
?!! 
Balance!! 
{!!  !
get!!" %
;!!% &
set!!' *
;!!* +
}!!, -
public"" 
DateTime"" 
?"" 
TransactionDate"" (
{"") *
get""+ .
;"". /
set""0 3
;""3 4
}""5 6
public## 
string## 
?## 
TransactionId## $
{##% &
get##' *
;##* +
set##, /
;##/ 0
}##1 2
public$$ 
DateTime$$ 
?$$ 
ChequeRecievedDate$$ +
{$$, -
get$$. 1
;$$1 2
set$$3 6
;$$6 7
}$$8 9
public%% 
bool%% 
?%% 
	IsDeleted%% 
{%%  
get%%! $
;%%$ %
set%%& )
;%%) *
}%%+ ,
public'' 
virtual'' 
ValuationRequest'' '
ValuationRequest''( 8
{''9 :
get''; >
;''> ?
set''@ C
;''C D
}''E F
=''G H
null''I M
!''M N
;''N O
public(( 
virtual(( 
ICollection(( "
<((" #&
ValuationPaymentInvoiceMap((# =
>((= >'
ValuationPaymentInvoiceMaps((? Z
{(([ \
get((] `
;((` a
set((b e
;((e f
}((g h
})) 
}** Å
BD:\EltizamLive\Eltizam.Data.DataAccess\Entity\ValuationInvoice1.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
ValuationInvoice1 *
{ 
public 
ValuationInvoice1  
(  !
)! "
{		 	#
InverseValuationRequest

 #
=

$ %
new

& )
HashSet

* 1
<

1 2
ValuationInvoice1

2 C
>

C D
(

D E
)

E F
;

F G!
ValuationInvoicesMaps !
=" #
new$ '
HashSet( /
</ 0 
ValuationInvoicesMap0 D
>D E
(E F
)F G
;G H
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
int 
ValuationRequestId %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
string 
	InvoiceNo 
{  !
get" %
;% &
set' *
;* +
}, -
=. /
null0 4
!4 5
;5 6
public 
int 
TransactionModeId $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
? 
TransactionDate (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
decimal 
Amount 
{ 
get  #
;# $
set% (
;( )
}* +
public 
decimal 
? 
Balance 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Note 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
ValuationInvoice1 (
ValuationRequest) 9
{: ;
get< ?
;? @
setA D
;D E
}F G
=H I
nullJ N
!N O
;O P
public 
virtual 
ICollection "
<" #
ValuationInvoice1# 4
>4 5#
InverseValuationRequest6 M
{N O
getP S
;S T
setU X
;X Y
}Z [
public 
virtual 
ICollection "
<" # 
ValuationInvoicesMap# 7
>7 8!
ValuationInvoicesMaps9 N
{O P
getQ T
;T U
setV Y
;Y Z
}[ \
} 
}   Õ
ED:\EltizamLive\Eltizam.Data.DataAccess\Entity\ValuationInvoicesMap.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class  
ValuationInvoicesMap -
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		  
ValuationQuotationId		 '
{		( )
get		* -
;		- .
set		/ 2
;		2 3
}		4 5
public

 
int

 &
ValuationReceivedInvoiceId

 -
{

. /
get

0 3
;

3 4
set

5 8
;

8 9
}

: ;
public 
string 
? 
Note 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
ValuationQuotation )
ValuationQuotation* <
{= >
get? B
;B C
setD G
;G H
}I J
=K L
nullM Q
!Q R
;R S
public 
virtual 
ValuationInvoice1 ($
ValuationReceivedInvoice) A
{B C
getD G
;G H
setI L
;L M
}N O
=P Q
nullR V
!V W
;W X
} 
} Ì*
AD:\EltizamLive\Eltizam.Data.DataAccess\Entity\ValuationPayment.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
ValuationPayment )
{ 
public 
ValuationPayment 
(  
)  !
{		 	#
InverseValuationRequest

 #
=

$ %
new

& )
HashSet

* 1
<

1 2
ValuationPayment

2 B
>

B C
(

C D
)

D E
;

E F
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
ReferenceNo !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
null2 6
!6 7
;7 8
public 
int 
ValuationRequestId %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
TransactionModeId $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
TransactionStatusId &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
decimal 
Amount 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 

CheckNumer !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 
CheckBankName $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
? 
	CheckDate "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 

CardNumber !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 
CardBankName #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
CardHolderName %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
DateTime 
? 

ExpireDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
AccountBankName &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
? 
AccountHolderName (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
string 
? 
Note 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public   
DateTime   
?   
ModifiedDate   %
{  & '
get  ( +
;  + ,
set  - 0
;  0 1
}  2 3
public!! 
decimal!! 
?!! 
Balance!! 
{!!  !
get!!" %
;!!% &
set!!' *
;!!* +
}!!, -
public"" 
DateTime"" 
?"" 
TransactionDate"" (
{"") *
get""+ .
;"". /
set""0 3
;""3 4
}""5 6
public## 
string## 
?## 
TransactionId## $
{##% &
get##' *
;##* +
set##, /
;##/ 0
}##1 2
public$$ 
DateTime$$ 
?$$ 
ChequeRecievedDate$$ +
{$$, -
get$$. 1
;$$1 2
set$$3 6
;$$6 7
}$$8 9
public%% 
bool%% 
?%% 
	IsDeleted%% 
{%%  
get%%! $
;%%$ %
set%%& )
;%%) *
}%%+ ,
public'' 
virtual'' 
ValuationPayment'' '
ValuationRequest''( 8
{''9 :
get''; >
;''> ?
set''@ C
;''C D
}''E F
=''G H
null''I M
!''M N
;''N O
public(( 
virtual(( 
ICollection(( "
<((" #
ValuationPayment((# 3
>((3 4#
InverseValuationRequest((5 L
{((M N
get((O R
;((R S
set((T W
;((W X
}((Y Z
})) 
}** â 
HD:\EltizamLive\Eltizam.Data.DataAccess\Entity\ValuationPaymentInvoice.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class #
ValuationPaymentInvoice 0
{ 
public #
ValuationPaymentInvoice &
(& '
)' (
{		 	#
InverseValuationRequest

 #
=

$ %
new

& )
HashSet

* 1
<

1 2#
ValuationPaymentInvoice

2 I
>

I J
(

J K
)

K L
;

L M'
ValuationPaymentInvoiceMaps '
=( )
new* -
HashSet. 5
<5 6&
ValuationPaymentInvoiceMap6 P
>P Q
(Q R
)R S
;S T
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
int 
ValuationRequestId %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
string 
	InvoiceNo 
{  !
get" %
;% &
set' *
;* +
}, -
=. /
null0 4
!4 5
;5 6
public 
int 
? 
TransactionModeId %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
DateTime 
? 
TransactionDate (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
decimal 
? 
Amount 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
decimal 
? 
Balance 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Note 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
ReferenceNo "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
virtual #
ValuationPaymentInvoice .
ValuationRequest/ ?
{@ A
getB E
;E F
setG J
;J K
}L M
=N O
nullP T
!T U
;U V
public 
virtual 
ICollection "
<" ##
ValuationPaymentInvoice# :
>: ;#
InverseValuationRequest< S
{T U
getV Y
;Y Z
set[ ^
;^ _
}` a
public 
virtual 
ICollection "
<" #&
ValuationPaymentInvoiceMap# =
>= >'
ValuationPaymentInvoiceMaps? Z
{[ \
get] `
;` a
setb e
;e f
}g h
}   
}!! ≥
KD:\EltizamLive\Eltizam.Data.DataAccess\Entity\ValuationPaymentInvoiceMap.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class &
ValuationPaymentInvoiceMap 3
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
	InvoiceId		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public

 
int

 
PaymentInvoiceId

 #
{

$ %
get

& )
;

) *
set

+ .
;

. /
}

0 1
public 
string 
? 
Note 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
ValuationInvoice '
Invoice( /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
=> ?
null@ D
!D E
;E F
public 
virtual #
ValuationPaymentInvoice .
PaymentInvoice/ =
{> ?
get@ C
;C D
setE H
;H I
}J K
=L M
nullN R
!R S
;S T
} 
} ˙
CD:\EltizamLive\Eltizam.Data.DataAccess\Entity\ValuationQuotation.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
ValuationQuotation +
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
ReferenceNo		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
=		0 1
null		2 6
!		6 7
;		7 8
public

 
int

 
ValuationRequestId

 %
{

& '
get

( +
;

+ ,
set

- 0
;

0 1
}

2 3
public 
int 
StatusId 
{ 
get !
;! "
set# &
;& '
}( )
public 
decimal 
ValuationFee #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
decimal 
Vat 
{ 
get  
;  !
set" %
;% &
}' (
public 
decimal 
? 
OtherCharges $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
decimal 
? 
InstructorCharges )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
decimal 
? 
Discount  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
decimal 
? 
TotalFee  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
Note 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
ValuationRequest '
ValuationRequest( 8
{9 :
get; >
;> ?
set@ C
;C D
}E F
=G H
nullI M
!M N
;N O
} 
} €
ID:\EltizamLive\Eltizam.Data.DataAccess\Entity\ValuationQuotationStatus.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class $
ValuationQuotationStatus 1
{ 
public $
ValuationQuotationStatus '
(' (
)( )
{		 	
ValuationQuotations

 
=

  !
new

" %
HashSet

& -
<

- .
ValuationQuotation

. @
>

@ A
(

A B
)

B C
;

C D
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 

StatusName  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
null1 5
!5 6
;6 7
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 
ModifyBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 

ModifyDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
virtual 
ICollection "
<" #
ValuationQuotation# 5
>5 6
ValuationQuotations7 J
{K L
getM P
;P Q
setR U
;U V
}W X
} 
} ÕH
AD:\EltizamLive\Eltizam.Data.DataAccess\Entity\ValuationRequest.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
ValuationRequest )
{ 
public 
ValuationRequest 
(  
)  !
{		 	
ComparableEvidences

 
=

  !
new

" %
HashSet

& -
<

- .
ComparableEvidence

. @
>

@ A
(

A B
)

B C
;

C D
MasterNotifications 
=  !
new" %
HashSet& -
<- .
MasterNotification. @
>@ A
(A B
)B C
;C D
SiteDescriptions 
= 
new "
HashSet# *
<* +
SiteDescription+ :
>: ;
(; <
)< =
;= >
ValuationAssesments 
=  !
new" %
HashSet& -
<- .
ValuationAssesment. @
>@ A
(A B
)B C
;C D(
ValuationComparableEvidences (
=) *
new+ .
HashSet/ 6
<6 7'
ValuationComparableEvidence7 R
>R S
(S T
)T U
;U V
ValuationInvoices 
= 
new  #
HashSet$ +
<+ ,
ValuationInvoice, <
>< =
(= >
)> ?
;? @
ValuationQuotations 
=  !
new" %
HashSet& -
<- .
ValuationQuotation. @
>@ A
(A B
)B C
;C D*
ValuationRequestApproverLevels *
=+ ,
new- 0
HashSet1 8
<8 9)
ValuationRequestApproverLevel9 V
>V W
(W X
)X Y
;Y Z%
ValuationSiteDescriptions %
=& '
new( +
HashSet, 3
<3 4$
ValuationSiteDescription4 L
>L M
(M N
)N O
;O P
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
ReferenceNo !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
null2 6
!6 7
;7 8
public 
string 
? 
OtherReferenceNo '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
int 
ValuationModeId "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DateTime 
? 
ValuationDate &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
? 
ValuationTimeFrame &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
ClientId 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 

PropertyId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
StatusId 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
? 

ApproverId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
ApproverComment &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public   
DateTime   
?   
ApproverUpdateDate   +
{  , -
get  . 1
;  1 2
set  3 6
;  6 7
}  8 9
public!! 
int!! 
	CreatedBy!! 
{!! 
get!! "
;!!" #
set!!$ '
;!!' (
}!!) *
public"" 
DateTime"" 
CreatedDate"" #
{""$ %
get""& )
;"") *
set""+ .
;"". /
}""0 1
public## 
int## 
?## 

ModifiedBy## 
{##  
get##! $
;##$ %
set##& )
;##) *
}##+ ,
public$$ 
DateTime$$ 
?$$ 
ModifiedDate$$ %
{$$& '
get$$( +
;$$+ ,
set$$- 0
;$$0 1
}$$2 3
public%% 
int%% 
?%% 
ValuerId%% 
{%% 
get%% "
;%%" #
set%%$ '
;%%' (
}%%) *
public&& 
string&& 
?&& 
ValuerComment&& $
{&&% &
get&&' *
;&&* +
set&&, /
;&&/ 0
}&&1 2
public'' 
DateTime'' 
?'' 
ValuerUpdateDate'' )
{''* +
get'', /
;''/ 0
set''1 4
;''4 5
}''6 7
public(( 
string(( 
?(( 
AssignRemark(( #
{(($ %
get((& )
;(() *
set((+ .
;((. /
}((0 1
public)) 
bool)) 
?)) 
	IsDeleted)) 
{))  
get))! $
;))$ %
set))& )
;))) *
}))+ ,
public** 
string** 
?** 
StatusComment** $
{**% &
get**' *
;*** +
set**, /
;**/ 0
}**1 2
public,, 
virtual,, 

MasterUser,, !
?,,! "
Approver,,# +
{,,, -
get,,. 1
;,,1 2
set,,3 6
;,,6 7
},,8 9
public-- 
virtual-- 
MasterClient-- #
Client--$ *
{--+ ,
get--- 0
;--0 1
set--2 5
;--5 6
}--7 8
=--9 :
null--; ?
!--? @
;--@ A
public.. 
virtual.. 
MasterProperty.. %
Property..& .
{../ 0
get..1 4
;..4 5
set..6 9
;..9 :
}..; <
=..= >
null..? C
!..C D
;..D E
public// 
virtual// !
MasterValuationStatus// ,
Status//- 3
{//4 5
get//6 9
;//9 :
set//; >
;//> ?
}//@ A
=//B C
null//D H
!//H I
;//I J
public00 
virtual00 
ICollection00 "
<00" #
ComparableEvidence00# 5
>005 6
ComparableEvidences007 J
{00K L
get00M P
;00P Q
set00R U
;00U V
}00W X
public11 
virtual11 
ICollection11 "
<11" #
MasterNotification11# 5
>115 6
MasterNotifications117 J
{11K L
get11M P
;11P Q
set11R U
;11U V
}11W X
public22 
virtual22 
ICollection22 "
<22" #
SiteDescription22# 2
>222 3
SiteDescriptions224 D
{22E F
get22G J
;22J K
set22L O
;22O P
}22Q R
public33 
virtual33 
ICollection33 "
<33" #
ValuationAssesment33# 5
>335 6
ValuationAssesments337 J
{33K L
get33M P
;33P Q
set33R U
;33U V
}33W X
public44 
virtual44 
ICollection44 "
<44" #'
ValuationComparableEvidence44# >
>44> ?(
ValuationComparableEvidences44@ \
{44] ^
get44_ b
;44b c
set44d g
;44g h
}44i j
public55 
virtual55 
ICollection55 "
<55" #
ValuationInvoice55# 3
>553 4
ValuationInvoices555 F
{55G H
get55I L
;55L M
set55N Q
;55Q R
}55S T
public66 
virtual66 
ICollection66 "
<66" #
ValuationQuotation66# 5
>665 6
ValuationQuotations667 J
{66K L
get66M P
;66P Q
set66R U
;66U V
}66W X
public77 
virtual77 
ICollection77 "
<77" #)
ValuationRequestApproverLevel77# @
>77@ A*
ValuationRequestApproverLevels77B `
{77a b
get77c f
;77f g
set77h k
;77k l
}77m n
public88 
virtual88 
ICollection88 "
<88" #$
ValuationSiteDescription88# ;
>88; <%
ValuationSiteDescriptions88= V
{88W X
get88Y \
;88\ ]
set88^ a
;88a b
}88c d
}99 
}:: 
BD:\EltizamLive\Eltizam.Data.DataAccess\Entity\ValuationRequest1.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
ValuationRequest1 *
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
ReferenceNo		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
=		0 1
null		2 6
!		6 7
;		7 8
public

 
string

 
?

 
OtherReferenceNo

 '
{

( )
get

* -
;

- .
set

/ 2
;

2 3
}

4 5
public 
int 
ValuationModeId "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DateTime 
? 
ValuationDate &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
? 
ValuationTimeFrame &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
ClientId 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 

PropertyId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
StatusId 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
? 

ApproverId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
ApproverComment &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DateTime 
? 
ApproverUpdateDate +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 
ValuerId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
ValuerComment $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
? 
ValuerUpdateDate )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
string 
? 
AssignRemark #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ≈
ND:\EltizamLive\Eltizam.Data.DataAccess\Entity\ValuationRequestApproverLevel.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class )
ValuationRequestApproverLevel 6
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
ValuationRequestId		 %
{		& '
get		( +
;		+ ,
set		- 0
;		0 1
}		2 3
public

 
int

 
?

  
ValuationQuotationId

 (
{

) *
get

+ .
;

. /
set

0 3
;

3 4
}

5 6
public 
int 
ApproverLevelId "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 

ApproverId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
? 
StatusId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
ApproverComment &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
virtual 
ValuationRequest '
ValuationRequest( 8
{9 :
get; >
;> ?
set@ C
;C D
}E F
=G H
nullI M
!M N
;N O
} 
} ´
GD:\EltizamLive\Eltizam.Data.DataAccess\Entity\ValuationRequestStatus.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class "
ValuationRequestStatus /
{ 
public "
ValuationRequestStatus %
(% &
)& '
{		 	
ValuationRequests

 
=

 
new

  #
HashSet

$ +
<

+ ,
ValuationRequest

, <
>

< =
(

= >
)

> ?
;

? @
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 

StatusName  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
null1 5
!5 6
;6 7
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 
ModifyBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 

ModifyDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
	ColorCode  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
BackGroundColor &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
virtual 
ICollection "
<" #
ValuationRequest# 3
>3 4
ValuationRequests5 F
{G H
getI L
;L M
setN Q
;Q R
}S T
} 
} Å
HD:\EltizamLive\Eltizam.Data.DataAccess\Entity\ValuationRequestStatus1.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class #
ValuationRequestStatus1 0
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 

StatusName		  
{		! "
get		# &
;		& '
set		( +
;		+ ,
}		- .
=		/ 0
null		1 5
!		5 6
;		6 7
public

 
bool

 
?

 
IsActive

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 
ModifyBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 

ModifyDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
	ColorCode  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
BackGroundColor &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
} 
} ¿

ND:\EltizamLive\Eltizam.Data.DataAccess\Entity\ValuationRequestStatusHistory.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class )
ValuationRequestStatusHistory 6
{ 
public 
long 
Id 
{ 
get 
; 
set !
;! "
}# $
public		 
int		 
StatusId		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
public

 
long

 
ValuationRequestId

 &
{

' (
get

) ,
;

, -
set

. 1
;

1 2
}

3 4
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
StatusComment $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
} ü
ID:\EltizamLive\Eltizam.Data.DataAccess\Entity\ValuationSiteDescription.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class $
ValuationSiteDescription 1
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
ValuationRequestId		 %
{		& '
get		( +
;		+ ,
set		- 0
;		0 1
}		2 3
public

 
string

 
?

 
Location

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 
decimal 
? 
InternalArea $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
decimal 
? 
ExternalArea $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
Floor 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
? 
Room 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
? 
Bedrooms 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
Storage 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
? 
Quantity 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
AdditionComment &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
? 
PropertyCondition (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
string 
? 
AdditionalNotes &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
? 
Others 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
virtual 
ValuationRequest '
ValuationRequest( 8
{9 :
get; >
;> ?
set@ C
;C D
}E F
=G H
nullI M
!M N
;N O
} 
} ö 
9D:\EltizamLive\Eltizam.Data.DataAccess\Entity\VwClient.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
VwClient !
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
?		 
	FirstName		  
{		! "
get		# &
;		& '
set		( +
;		+ ,
}		- .
public

 
string

 
?

 

MiddleName

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
public 
string 
? 
LastName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 

ClientName !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
? 
ClientTypeId  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
Company 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
	Trnnumber  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DateTime 
? 
TrnexpiryDate &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
? 
LicenseNumber $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 
Logo 
{ 
get !
;! "
set# &
;& '
}( )
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
? 
ProfileAttachmentId '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 

ClientType !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 
DictionaryCode %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 
DictionaryId  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 

Dictionary !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} É
AD:\EltizamLive\Eltizam.Data.DataAccess\Entity\VwDictonaryChild.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
VwDictonaryChild )
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
?		 
Description		 "
{		# $
get		% (
;		( )
set		* -
;		- .
}		/ 0
public

 
int

 
?

 
Sort

 
{

 
get

 
;

 
set

  #
;

# $
}

% &
public 
int 
? 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
DictionaryCode %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
DetailId 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
DetailDescription '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
=6 7
null8 <
!< =
;= >
} 
} œ(
;D:\EltizamLive\Eltizam.Data.DataAccess\Entity\VwProperty.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 

VwProperty #
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
?		 
PropertyName		 #
{		$ %
get		& )
;		) *
set		+ .
;		. /
}		0 1
public

 
int

 
?

 
PropertyTypeId

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
public 
int 
? 
PropertySubTypeId %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 
OwnershipTypeId #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 

UnitTypeId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
AdditionalUnits &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
? 
FurnishedId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
ValuationPurpose '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
decimal 
? 
BuildUpAreaSqFt '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
decimal 
? 
BuildUpAreaSqMtr (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
int 
? 
AgeOfConstruction %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 
Parking 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
ParkingBayNo #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
Description "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 
	Amenities  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 

UnitNumber !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 
PropertyType #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public   
string   
?   
PropertySubType   &
{  ' (
get  ) ,
;  , -
set  . 1
;  1 2
}  3 4
public!! 
string!! 
?!! 
OwnershipType!! $
{!!% &
get!!' *
;!!* +
set!!, /
;!!/ 0
}!!1 2
public"" 
string"" 
?"" 
	Furnished""  
{""! "
get""# &
;""& '
set""( +
;""+ ,
}""- .
public## 
string## 
?## 
UnitType## 
{##  !
get##" %
;##% &
set##' *
;##* +
}##, -
}$$ 
}%% Ã!
CD:\EltizamLive\Eltizam.Data.DataAccess\Entity\VwPropertyLocation.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
VwPropertyLocation +
{ 
public 
string 
? 
PropertyName #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public		 
string		 
?		 
TotalAddress		 #
{		$ %
get		& )
;		) *
set		+ .
;		. /
}		0 1
public

 
string

 
?

 
CityName

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 
string 
? 
	StateName  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
CountryName "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
int 
? 

PropertyId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
? 
	CountryId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 
StateId 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
? 
CityId 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
? 
Zone 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
BuildingProject &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
? 
Latitude 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
	Longitude  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
Address1 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Address2 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Pincode 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
Landmark 
{  !
get" %
;% &
set' *
;* +
}, -
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
}   ˇ1
7D:\EltizamLive\Eltizam.Data.DataAccess\Entity\VwUser.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
VwUser 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
	FirstName		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
=		. /
null		0 4
!		4 5
;		5 6
public

 
string

 
?

 

MiddleName

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
public 
string 
? 
LastName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
DateTime 
? 
DateOfBirth $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
DepartmentId  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
? 
DesignationId !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 
	LicenseNo  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
? 
	CompanyId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 
Password 
{ 
get "
;" #
set$ '
;' (
}) *
public 
bool 
? 
IsActive 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
CreatedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
CompanyName "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 
Email 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
? 
RoleId 
{ 
get  
;  !
set" %
;% &
}' (
public 
DateTime 
? "
ForgotPasswordDateTime /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
public 
string 
? 
ForgotPasswordToken *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
int 
? 
	ReportsTo 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 

UserTypeId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
UserName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 
? 
ProfileAttachmentId '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public   
bool   
?   
	IsDeleted   
{    
get  ! $
;  $ %
set  & )
;  ) *
}  + ,
public!! 
int!! 
?!! 
ApproverLevelId!! #
{!!$ %
get!!& )
;!!) *
set!!+ .
;!!. /
}!!0 1
public"" 
int"" 
?"" 
GenderId"" 
{"" 
get"" "
;""" #
set""$ '
;""' (
}"") *
public## 
string## 
?## 
RoleName## 
{##  !
get##" %
;##% &
set##' *
;##* +
}##, -
public$$ 
int$$ 
?$$ 

IsApprover$$ 
{$$  
get$$! $
;$$$ %
set$$& )
;$$) *
}$$+ ,
public%% 
int%% 
?%% 
IsValuer%% 
{%% 
get%% "
;%%" #
set%%$ '
;%%' (
}%%) *
public&& 
string&& 
?&& 

Department&& !
{&&" #
get&&$ '
;&&' (
set&&) ,
;&&, -
}&&. /
public'' 
string'' 
?'' 
Designation'' "
{''# $
get''% (
;''( )
set''* -
;''- .
}''/ 0
public(( 
string(( 
?(( 
Gender(( 
{(( 
get((  #
;((# $
set((% (
;((( )
}((* +
public)) 
string)) 
?)) 
ResourceType)) #
{))$ %
get))& )
;))) *
set))+ .
;)). /
}))0 1
public** 
string** 
?** 
ApproverLevel** $
{**% &
get**' *
;*** +
set**, /
;**/ 0
}**1 2
}++ 
},, £(
CD:\EltizamLive\Eltizam.Data.DataAccess\Entity\VwValuationRequest.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class 
VwValuationRequest +
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
ReferenceNo		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
=		0 1
null		2 6
!		6 7
;		7 8
public

 
string

 
?

 
OtherReferenceNo

 '
{

( )
get

* -
;

- .
set

/ 2
;

2 3
}

4 5
public 
int 
ValuationModeId "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DateTime 
? 
ValuationDate &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
? 
ValuationTimeFrame &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
ClientId 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 

PropertyId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
StatusId 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
? 

ApproverId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
ApproverComment &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DateTime 
? 
ApproverUpdateDate +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 
ValuerId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
ValuerComment $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
? 
ValuerUpdateDate )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
string 
? 
AssignRemark #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
StatusComment $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
string 
? 

StatusName !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 

StatusCode !
{" #
get$ '
;' (
set) ,
;, -
}. /
public   
int   
?   
Type   
{   
get   
;   
set    #
;  # $
}  % &
public!! 
int!! 
?!! 
Group!! 
{!! 
get!! 
;!!  
set!!! $
;!!$ %
}!!& '
public"" 
string"" 
?"" 
	ColorCode""  
{""! "
get""# &
;""& '
set""( +
;""+ ,
}""- .
public## 
string## 
?## 
BackGroundColor## &
{##' (
get##) ,
;##, -
set##. 1
;##1 2
}##3 4
}$$ 
}%% ﬂ8
ID:\EltizamLive\Eltizam.Data.DataAccess\Entity\VwValuationRequestDetail.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Entity" (
{ 
public 

partial 
class $
VwValuationRequestDetail 1
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
ReferenceNo		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
=		0 1
null		2 6
!		6 7
;		7 8
public

 
string

 
?

 
OtherReferenceNo

 '
{

( )
get

* -
;

- .
set

/ 2
;

2 3
}

4 5
public 
int 
ValuationModeId "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DateTime 
? 
ValuationDate &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
? 
ValuationTimeFrame &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
ClientId 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 

PropertyId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
StatusId 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
? 

ApproverId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
ApproverComment &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DateTime 
? 
ApproverUpdateDate +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
? 

ModifiedBy 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
? 
ModifiedDate %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
? 
ValuerId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
ValuerComment $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
? 
ValuerUpdateDate )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
string 
? 
AssignRemark #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
bool 
? 
	IsDeleted 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
StatusComment $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
string 
? 

StatusName !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 

StatusCode !
{" #
get$ '
;' (
set) ,
;, -
}. /
public   
int   
?   
Type   
{   
get   
;   
set    #
;  # $
}  % &
public!! 
int!! 
?!! 
Group!! 
{!! 
get!! 
;!!  
set!!! $
;!!$ %
}!!& '
public"" 
string"" 
?"" 
	ColorCode""  
{""! "
get""# &
;""& '
set""( +
;""+ ,
}""- .
public## 
string## 
?## 
BackGroundColor## &
{##' (
get##) ,
;##, -
set##. 1
;##1 2
}##3 4
public$$ 
string$$ 
?$$ 

ClientType$$ !
{$$" #
get$$$ '
;$$' (
set$$) ,
;$$, -
}$$. /
public%% 
string%% 
?%% 

ClientName%% !
{%%" #
get%%$ '
;%%' (
set%%) ,
;%%, -
}%%. /
public&& 
string&& 
?&& 
PropertyType&& #
{&&$ %
get&&& )
;&&) *
set&&+ .
;&&. /
}&&0 1
public'' 
string'' 
?'' 
PropertyName'' #
{''$ %
get''& )
;'') *
set''+ .
;''. /
}''0 1
public(( 
string(( 
?(( 
ValuationPurpose(( '
{((( )
get((* -
;((- .
set((/ 2
;((2 3
}((4 5
public)) 
string)) 
?)) 
MethodOfValuation)) (
{))) *
get))+ .
;)). /
set))0 3
;))3 4
}))5 6
public** 
string** 
?** 
	Requestor**  
{**! "
get**# &
;**& '
set**( +
;**+ ,
}**- .
public++ 
string++ 
?++ 
Valuer++ 
{++ 
get++  #
;++# $
set++% (
;++( )
}++* +
public,, 
string,, 
?,, 
Approver,, 
{,,  !
get,," %
;,,% &
set,,' *
;,,* +
},,, -
public-- 
int-- 
?-- 
PropertyTypeId-- "
{--# $
get--% (
;--( )
set--* -
;--- .
}--/ 0
public.. 
string.. 
?.. 
PropertySubType.. &
{..' (
get..) ,
;.., -
set... 1
;..1 2
}..3 4
public// 
int// 
?// 
PropertySubTypeId// %
{//& '
get//( +
;//+ ,
set//- 0
;//0 1
}//2 3
}00 
}11 „9
=D:\EltizamLive\Eltizam.Data.DataAccess\Helper\AppConstants.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Helper" (
{ 
public		 

class		 
AppConstants		 
{

 
public 
static 
string 
ConnectionStringkey 0
=1 2
$str3 T
;T U
public 
static 
string -
!msgLinkToResetpasswordSentOnEmail >
=? @
$strA j
;j k
public 
static 
string 
SomeErrorOccurred .
=/ 0
$str1 F
;F G
public 
static 
string -
!msgEmailAddressNotExistIndatabase >
=? @
$strA e
;e f
public 
static 
string (
msgPasswordResetSuccessfully 9
=: ;
$str< Y
;Y Z
public 
static 
string (
msgResetPasswordTokenExpired 9
=: ;
$str	< ñ
;
ñ ó
public 
static 
string 
msgInvalidLink +
=, -
$str. <
;< =
public 
static 
string 
AccessRestriction .
=/ 0
$str1 D
;D E
public 
static 
string 
Home !
=" #
$str$ *
;* +
public 
static 
string 
	TableName &
=' (
$str) 4
;4 5
public 
static 
string 
TableId $
=% &
$str' 0
;0 1
public 
static 
string 

TableKeyId '
=( )
$str* 6
;6 7
public 
static 
string 
NoRecordFound *
=+ ,
$str- >
;> ?
public 
static 
string 
InsertSuccess *
=+ ,
$str- I
;I J
public 
static 
string 
UpdateSuccess *
=+ ,
$str- H
;H I
public 
static 
string 
DeleteSuccess *
=+ ,
$str- H
;H I
public 
static 
string 

BadRequest '
=( )
$str* 7
;7 8
public 
static 
string 
ActionSuccess *
=+ ,
$str- M
;M N
public   
static   
string   
ActionFailed   )
=  * +
$str  , <
;  < =
public!! 
static!! 
string!!  
DuplicateRecordFound!! 1
=!!2 3
$str!!4 L
;!!L M
public## 
static## 
string## 
P_SearchText## )
=##, -
$str##. ;
;##; <
public$$ 
static$$ 
string$$ 
P_SortDirection$$ ,
=$$- .
$str$$/ ?
;$$? @
public%% 
static%% 
string%% 
P_SortColumn%% )
=%%- .
$str%%/ <
;%%< =
public&& 
static&& 
string&& 

P_PageSize&& '
=&&- .
$str&&/ :
;&&: ;
public'' 
static'' 
string'' 
P_CurrentPageNumber'' 0
=''1 2
$str''3 G
;''G H
public(( 
static(( 
string(( 
P_Id(( !
=((" #
$str(($ )
;(() *
public)) 
static)) 
string)) 
P_CreatedBy)) (
=))) *
$str))+ 7
;))7 8
public** 
static** 
string** 
P_RequestData** *
=**+ ,
$str**- ;
;**; <
public++ 
static++ 
string++ 
	CreatedBy++ &
=++' (
$str++) 4
;++4 5
public,, 
static,, 
string,, 

ModifiedBy,, '
=,,( )
$str,,* 6
;,,6 7
public-- 
static-- 
string-- 

MenusCache-- '
=--( )
$str--* 6
;--6 7
public.. 
static.. 
string.. 
NotificationsCache.. /
=..0 1
$str..2 E
;..E F
public// 
static// 
string// 
LogInUserId// (
=//) *
$str//+ 8
;//8 9
public11 
static11 
DateTime11 
DateTime11 '
=11( )
DateTime11* 2
.112 3
Now113 6
;116 7
public22 
static22 
string22 
DateFormat122 (
=22) *
DateTime22+ 3
.223 4
Now224 7
.227 8
ToString228 @
(22@ A
$str22A N
)22N O
;22O P
public33 
static33 
string33 
DateFormat233 (
=33) *
DateTime33+ 3
.333 4
Now334 7
.337 8
ToString338 @
(33@ A
$str33A I
)33I J
;33J K
public66 
static66 
string66 
ID_ValuationRequest66 0
=662 3
string664 :
.66: ;
Format66; A
(66A B
$str66B I
,66I J
DateFormat266K V
)66V W
;66W X
public77 
static77 
string77  
ID_QuotationsRequest77 1
=772 3
string774 :
.77: ;
Format77; A
(77A B
$str77B I
,77I J
DateFormat277K V
)77V W
;77W X
public88 
static88 
string88 
ID_InvoiceRequest88 .
=882 3
string884 :
.88: ;
Format88; A
(88A B
$str88B I
,88I J
DateFormat288K V
)88V W
;88W X
public99 
static99 
string99 
ID_PaymentRequest99 .
=992 3
string994 :
.99: ;
Format99; A
(99A B
$str99B I
,99I J
DateFormat299K V
)99V W
;99W X
public<< 
static<< 
string<<  
EmailSubject_Created<< 1
=<<2 3
$str<<4 O
;<<O P
public== 
static== 
string== &
EmailSubject_StatusChanged== 7
===8 9
$str==: \
;==\ ]
public>> 
static>> 
string>> )
EmailSubject_QuotationCreated>> :
=>>; <
$str>>= b
;>>b c
public?? 
static?? 
string?? '
EmailSubject_PaymentCreated?? 8
=??9 :
$str??; ^
;??^ _
}@@ 
publicBB 

classBB 
AppSettingsBB 
{CC 
publicDD 
staticDD 
stringDD 

ConnStringDD '
=DD( )
$strDD* K
;DDK L
}EE 
}FF €ñ
@D:\EltizamLive\Eltizam.Data.DataAccess\Helper\DataTableHelper.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Helper" (
{ 
public 

static 
class 
DataTableHelper '
{ 
private 
static 
	Hashtable  
Hash! %
=& '
new( +
	Hashtable, 5
(5 6
)6 7
;7 8
public 
static 
List 
< 
T 
> 
ToList $
<$ %
T% &
>& '
(' (
this( ,
	DataTable- 6
dt7 9
)9 :
{ 	
List 
< 
T 
> 
data 
= 
new 
List #
<# $
T$ %
>% &
(& '
)' (
;( )
foreach 
( 
DataRow 
row  
in! #
dt$ &
.& '
Rows' +
)+ ,
{ 
T 
item 
= 
GetItem  
<  !
T! "
>" #
(# $
row$ '
)' (
;( )
data 
. 
Add 
( 
item 
) 
; 
} 
return 
data 
; 
} 	
public!! 
static!! 
	DataTable!! 
ToDataTable!!  +
<!!+ ,
T!!, -
>!!- .
(!!. /
this!!/ 3
List!!4 8
<!!8 9
T!!9 :
>!!: ;
items!!< A
)!!A B
{"" 	
	DataTable## 
	dataTable## 
=##  !
new##" %
	DataTable##& /
(##/ 0
typeof##0 6
(##6 7
T##7 8
)##8 9
.##9 :
Name##: >
)##> ?
;##? @
PropertyInfo&& 
[&& 
]&& 
Props&&  
=&&! "
typeof&&# )
(&&) *
T&&* +
)&&+ ,
.&&, -
GetProperties&&- :
(&&: ;
BindingFlags&&; G
.&&G H
Public&&H N
|&&O P
BindingFlags&&Q ]
.&&] ^
Instance&&^ f
)&&f g
;&&g h
foreach'' 
('' 
PropertyInfo'' !
prop''" &
in''' )
Props''* /
)''/ 0
{(( 
var** 
type** 
=** 
(** 
prop**  
.**  !
PropertyType**! -
.**- .
IsGenericType**. ;
&&**< >
prop**? C
.**C D
PropertyType**D P
.**P Q$
GetGenericTypeDefinition**Q i
(**i j
)**j k
==**l n
typeof**o u
(**u v
Nullable**v ~
<**~ 
>	** Ä
)
**Ä Å
?
**Ç É
Nullable++ $
.++$ %
GetUnderlyingType++% 6
(++6 7
prop++7 ;
.++; <
PropertyType++< H
)++H I
:++J K
prop++L P
.++P Q
PropertyType++Q ]
)++] ^
;++^ _
	dataTable.. 
... 
Columns.. !
...! "
Add.." %
(..% &
prop..& *
...* +
Name..+ /
,../ 0
type..1 5
)..5 6
;..6 7
}// 
foreach00 
(00 
T00 
item00 
in00 
items00 $
)00$ %
{11 
var22 
values22 
=22 
new22  
object22! '
[22' (
Props22( -
.22- .
Length22. 4
]224 5
;225 6
for33 
(33 
int33 
i33 
=33 
$num33 
;33 
i33  !
<33" #
Props33$ )
.33) *
Length33* 0
;330 1
i332 3
++333 5
)335 6
{44 
values66 
[66 
i66 
]66 
=66 
Props66  %
[66% &
i66& '
]66' (
.66( )
GetValue66) 1
(661 2
item662 6
,666 7
null668 <
)66< =
;66= >
}77 
	dataTable88 
.88 
Rows88 
.88 
Add88 "
(88" #
values88# )
)88) *
;88* +
}99 
return<< 
	dataTable<< 
;<< 
}== 	
public?? 
static?? 
	DataTable?? 
RemoveColumn??  ,
(??, -
this??- 1
	DataTable??2 ;
table??< A
,??A B
string??C I

columnName??J T
)??T U
{@@ 	
ifAA 
(AA 
tableAA 
.AA 
ColumnsAA 
.AA 
ContainsAA &
(AA& '

columnNameAA' 1
)AA1 2
)AA2 3
tableBB 
.BB 
ColumnsBB 
.BB 
RemoveBB $
(BB$ %

columnNameBB% /
)BB/ 0
;BB0 1
returnDD 
tableDD 
;DD 
}EE 	
publicMM 
staticMM 
stringMM 
[MM 
]MM 
ColumnNamesMM *
(MM* +
thisMM+ /
	DataTableMM0 9
tableMM: ?
)MM? @
{NN 	
returnOO 
tableOO 
==OO 
nullOO  
?OO! "
nullOO# '
:OO( )
tableOO* /
.OO/ 0
ColumnsOO0 7
.OO7 8
CastOO8 <
<OO< =

DataColumnOO= G
>OOG H
(OOH I
)OOI J
.OOJ K
SelectOOK Q
(OOQ R
xOOR S
=>OOT V
xOOW X
.OOX Y

ColumnNameOOY c
)OOc d
.OOd e
ToArrayOOe l
(OOl m
)OOm n
;OOn o
}PP 	
privateRR 
staticRR 
TRR 
GetItemRR  
<RR  !
TRR! "
>RR" #
(RR# $
DataRowRR$ +
drRR, .
)RR. /
{SS 	
TypeTT 
tempTT 
=TT 
typeofTT 
(TT 
TTT  
)TT  !
;TT! "
TUU 
objUU 
=UU 
	ActivatorUU 
.UU 
CreateInstanceUU ,
<UU, -
TUU- .
>UU. /
(UU/ 0
)UU0 1
;UU1 2
foreachWW 
(WW 

DataColumnWW 
columnWW  &
inWW' )
drWW* ,
.WW, -
TableWW- 2
.WW2 3
ColumnsWW3 :
)WW: ;
{XX 
foreachYY 
(YY 
PropertyInfoYY %
proYY& )
inYY* ,
tempYY- 1
.YY1 2
GetPropertiesYY2 ?
(YY? @
)YY@ A
)YYA B
{ZZ 
if[[ 
([[ 
pro[[ 
.[[ 
Name[[  
==[[! #
column[[$ *
.[[* +

ColumnName[[+ 5
)[[5 6
pro\\ 
.\\ 
SetValue\\ $
(\\$ %
obj\\% (
,\\( )
dr\\* ,
[\\, -
column\\- 3
.\\3 4

ColumnName\\4 >
]\\> ?
,\\? @
null\\A E
)\\E F
;\\F G
else]] 
continue^^  
;^^  !
}__ 
}`` 
returnaa 
objaa 
;aa 
}bb 	
publicdd 
staticdd 
objectdd 
GetNulldd $
(dd$ %
Typedd% )
typedd* .
)dd. /
{ee 	
ifff 
(ff 
typeff 
==ff 
typeofff 
(ff 
stringff %
)ff% &
)ff& '
returngg 
nullgg 
;gg 
ifhh 
(hh 
typehh 
==hh 
typeofhh 
(hh 
inthh "
)hh" #
)hh# $
returnii 
$numii 
;ii 
ifjj 
(jj 
typejj 
==jj 
typeofjj 
(jj 
longjj #
)jj# $
)jj$ %
returnkk 
$numkk 
;kk 
ifll 
(ll 
typell 
==ll 
typeofll 
(ll 
boolll #
)ll# $
)ll$ %
returnmm 
falsemm 
;mm 
ifnn 
(nn 
typenn 
==nn 
typeofnn 
(nn 
Decimalnn &
)nn& '
)nn' (
returnoo 
$numoo 
;oo 
elsepp 
returnqq 
nullqq 
;qq 
}rr 	
publictt 
statictt 
Ttt 
CastTott 
<tt 
Ttt  
>tt  !
(tt! "
thistt" &
objecttt' -
valtt. 1
)tt1 2
{uu 	
returnvv 
(vv 
Tvv 
)vv 
(vv 
(vv 
valvv 
==vv 
DBNullvv %
.vv% &
Valuevv& +
||vv, .
valvv/ 2
==vv3 5
nullvv6 :
)vv: ;
?vv< =
GetNullvv> E
(vvE F
typeofvvF L
(vvL M
TvvM N
)vvN O
)vvO P
:vvQ R
CastvvS W
(vvW X
ConvertvvX _
.vv_ `
ToStringvv` h
(vvh i
valvvi l
)vvl m
,vvm n
typeofvvo u
(vvu v
Tvvv w
)vvw x
)vvx y
)vvy z
;vvz {
}ww 	
publicyy 
staticyy 
objectyy 
CastToyy #
(yy# $
thisyy$ (
objectyy) /
valyy0 3
,yy3 4
Typeyy5 9
typeyy: >
)yy> ?
{zz 	
return{{ 
({{ 
val{{ 
=={{ 
DBNull{{ !
.{{! "
Value{{" '
||{{( *
val{{+ .
=={{/ 1
null{{2 6
){{6 7
?{{8 9
GetNull{{: A
({{A B
type{{B F
){{F G
:{{H I
Cast{{J N
({{N O
Convert{{O V
.{{V W
ToString{{W _
({{_ `
val{{` c
){{c d
,{{d e
type{{f j
){{j k
;{{k l
}|| 	
public~~ 
static~~ 
string~~ 
Join~~ !
(~~! "
this~~" &
string~~' -
[~~- .
]~~. /
array~~0 5
,~~5 6
string~~7 =
	separator~~> G
=~~H I
$str~~J M
)~~M N
{ 	
return
ÄÄ 
(
ÄÄ 
array
ÄÄ 
==
ÄÄ 
null
ÄÄ !
||
ÄÄ" $
array
ÄÄ% *
.
ÄÄ* +
Length
ÄÄ+ 1
<=
ÄÄ2 4
$num
ÄÄ5 6
)
ÄÄ6 7
?
ÄÄ8 9
string
ÄÄ: @
.
ÄÄ@ A
Empty
ÄÄA F
:
ÄÄG H
string
ÄÄI O
.
ÄÄO P
Join
ÄÄP T
(
ÄÄT U
	separator
ÄÄU ^
,
ÄÄ^ _
array
ÄÄ` e
)
ÄÄe f
;
ÄÄf g
}
ÅÅ 	
public
ÉÉ 
static
ÉÉ 
object
ÉÉ 
Cast
ÉÉ !
(
ÉÉ! "
string
ÉÉ" (
val
ÉÉ) ,
,
ÉÉ, -
Type
ÉÉ. 2
type
ÉÉ3 7
)
ÉÉ7 8
{
ÑÑ 	
if
ÖÖ 
(
ÖÖ 
type
ÖÖ 
==
ÖÖ 
typeof
ÖÖ 
(
ÖÖ 
string
ÖÖ %
)
ÖÖ% &
)
ÖÖ& '
return
ÖÖ( .
val
ÖÖ/ 2
;
ÖÖ2 3
else
ÜÜ 
if
ÜÜ 
(
ÜÜ 
string
ÜÜ 
.
ÜÜ  
IsNullOrWhiteSpace
ÜÜ .
(
ÜÜ. /
val
ÜÜ/ 2
)
ÜÜ2 3
)
ÜÜ3 4
return
ÜÜ5 ;
GetNull
ÜÜ< C
(
ÜÜC D
type
ÜÜD H
)
ÜÜH I
;
ÜÜI J
else
áá 
if
áá 
(
áá 
type
áá 
==
áá 
typeof
áá #
(
áá# $
int
áá$ '
)
áá' (
||
áá) +
type
áá, 0
==
áá1 3
typeof
áá4 :
(
áá: ;
int
áá; >
?
áá> ?
)
áá? @
)
áá@ A
return
ááB H
int
ááI L
.
ááL M
Parse
ááM R
(
ááR S
val
ááS V
)
ááV W
;
ááW X
else
àà 
if
àà 
(
àà 
type
àà 
==
àà 
typeof
àà #
(
àà# $
long
àà$ (
)
àà( )
||
àà* ,
type
àà- 1
==
àà2 4
typeof
àà5 ;
(
àà; <
long
àà< @
?
àà@ A
)
ààA B
)
ààB C
return
ààD J
long
ààK O
.
ààO P
Parse
ààP U
(
ààU V
val
ààV Y
)
ààY Z
;
ààZ [
else
ââ 
if
ââ 
(
ââ 
type
ââ 
==
ââ 
typeof
ââ #
(
ââ# $
bool
ââ$ (
)
ââ( )
||
ââ* ,
type
ââ- 1
==
ââ2 4
typeof
ââ5 ;
(
ââ; <
bool
ââ< @
?
ââ@ A
)
ââA B
)
ââB C
{
ää 
try
ãã 
{
åå 
return
çç 
bool
çç 
.
çç  
Parse
çç  %
(
çç% &
val
çç& )
)
çç) *
;
çç* +
}
éé 
catch
èè 
{
êê 
if
ëë 
(
ëë 
val
ëë 
.
ëë 
ToUpper
ëë #
(
ëë# $
)
ëë$ %
.
ëë% &
Equals
ëë& ,
(
ëë, -
$str
ëë- 2
)
ëë2 3
)
ëë3 4
return
ëë5 ;
true
ëë< @
;
ëë@ A
else
íí 
if
íí 
(
íí 
val
íí  
.
íí  !
ToUpper
íí! (
(
íí( )
)
íí) *
.
íí* +
Equals
íí+ 1
(
íí1 2
$str
íí2 8
)
íí8 9
)
íí9 :
return
íí; A
true
ííB F
;
ííF G
else
ìì 
if
ìì 
(
ìì 
val
ìì  
.
ìì  !
ToUpper
ìì! (
(
ìì( )
)
ìì) *
.
ìì* +
Equals
ìì+ 1
(
ìì1 2
$str
ìì2 5
)
ìì5 6
)
ìì6 7
return
ìì8 >
true
ìì? C
;
ììC D
else
îî 
if
îî 
(
îî 
val
îî  
.
îî  !
ToUpper
îî! (
(
îî( )
)
îî) *
.
îî* +
Equals
îî+ 1
(
îî1 2
$str
îî2 6
)
îî6 7
)
îî7 8
return
îî9 ?
false
îî@ E
;
îîE F
else
ïï 
if
ïï 
(
ïï 
val
ïï  
.
ïï  !
ToUpper
ïï! (
(
ïï( )
)
ïï) *
.
ïï* +
Equals
ïï+ 1
(
ïï1 2
$str
ïï2 9
)
ïï9 :
)
ïï: ;
return
ïï< B
false
ïïC H
;
ïïH I
else
ññ 
if
ññ 
(
ññ 
val
ññ  
.
ññ  !
ToUpper
ññ! (
(
ññ( )
)
ññ) *
.
ññ* +
Equals
ññ+ 1
(
ññ1 2
$str
ññ2 5
)
ññ5 6
)
ññ6 7
return
ññ8 >
false
ññ? D
;
ññD E
else
óó 
throw
óó 
;
óó 
}
òò 
}
ôô 
else
öö 
if
öö 
(
öö 
type
öö 
==
öö 
typeof
öö #
(
öö# $
DateTime
öö$ ,
)
öö, -
||
öö. 0
type
öö1 5
==
öö6 8
typeof
öö9 ?
(
öö? @
DateTime
öö@ H
?
ööH I
)
ööI J
)
ööJ K
{
õõ 
if
úú 
(
úú 
!
úú 
DateTime
úú 
.
úú 
TryParse
úú &
(
úú& '
val
úú' *
,
úú* +
out
úú, /
DateTime
úú0 8
Date
úú9 =
)
úú= >
)
úú> ?
{
ùù 
if
ûû 
(
ûû 
double
ûû 
.
ûû 
TryParse
ûû '
(
ûû' (
val
ûû( +
,
ûû+ ,
out
ûû- 0
double
ûû1 7

_DoubleVal
ûû8 B
)
ûûB C
)
ûûC D
{
üü 
Date
†† 
=
†† 
DateTime
†† '
.
††' (

FromOADate
††( 2
(
††2 3

_DoubleVal
††3 =
)
††= >
;
††> ?
}
°° 
}
¢¢ 
return
§§ 
Date
§§ 
;
§§ 
}
•• 
else
¶¶ 
if
¶¶ 
(
¶¶ 
type
¶¶ 
==
¶¶ 
typeof
¶¶ #
(
¶¶# $
TimeSpan
¶¶$ ,
)
¶¶, -
||
¶¶. 0
type
¶¶1 5
==
¶¶6 8
typeof
¶¶9 ?
(
¶¶? @
TimeSpan
¶¶@ H
?
¶¶H I
)
¶¶I J
)
¶¶J K
return
¶¶L R
TimeSpan
¶¶S [
.
¶¶[ \
Parse
¶¶\ a
(
¶¶a b
val
¶¶b e
)
¶¶e f
;
¶¶f g
else
ßß 
if
ßß 
(
ßß 
type
ßß 
==
ßß 
typeof
ßß #
(
ßß# $
byte
ßß$ (
)
ßß( )
||
ßß* ,
type
ßß- 1
==
ßß2 4
typeof
ßß5 ;
(
ßß; <
byte
ßß< @
?
ßß@ A
)
ßßA B
)
ßßB C
return
ßßD J
byte
ßßK O
.
ßßO P
Parse
ßßP U
(
ßßU V
val
ßßV Y
)
ßßY Z
;
ßßZ [
else
®® 
if
®® 
(
®® 
type
®® 
==
®® 
typeof
®® #
(
®®# $
decimal
®®$ +
)
®®+ ,
||
®®- /
type
®®0 4
==
®®5 7
typeof
®®8 >
(
®®> ?
decimal
®®? F
?
®®F G
)
®®G H
)
®®H I
return
®®J P
decimal
®®Q X
.
®®X Y
Parse
®®Y ^
(
®®^ _
val
®®_ b
)
®®b c
;
®®c d
else
©© 
if
©© 
(
©© 
type
©© 
==
©© 
typeof
©© #
(
©©# $
double
©©$ *
)
©©* +
||
©©, .
type
©©/ 3
==
©©4 6
typeof
©©7 =
(
©©= >
double
©©> D
?
©©D E
)
©©E F
)
©©F G
return
©©H N
double
©©O U
.
©©U V
Parse
©©V [
(
©©[ \
val
©©\ _
)
©©_ `
;
©©` a
else
™™ 
if
™™ 
(
™™ 
type
™™ 
==
™™ 
typeof
™™ #
(
™™# $
string
™™$ *
[
™™* +
]
™™+ ,
)
™™, -
&&
™™. 0
val
™™1 4
!=
™™5 7
null
™™8 <
)
™™< =
return
™™> D
val
™™E H
.
™™H I
Split
™™I N
(
™™N O
$char
™™O R
)
™™R S
;
™™S T
else
´´ 
if
´´ 
(
´´ 
type
´´ 
.
´´ 
IsEnum
´´  
)
´´  !
return
´´" (
Enum
´´) -
.
´´- .
Parse
´´. 3
(
´´3 4
type
´´4 8
,
´´8 9
val
´´: =
,
´´= >
true
´´? C
)
´´C D
;
´´D E
else
¨¨ 
if
¨¨ 
(
¨¨ 
type
¨¨ 
==
¨¨ 
typeof
¨¨ #
(
¨¨# $
int
¨¨$ '
[
¨¨' (
]
¨¨( )
)
¨¨) *
&&
¨¨+ -
val
¨¨. 1
!=
¨¨2 4
null
¨¨5 9
)
¨¨9 :
{
¨¨; <
string
¨¨= C
[
¨¨C D
]
¨¨D E
sarr
¨¨F J
=
¨¨K L
val
¨¨M P
.
¨¨P Q
Split
¨¨Q V
(
¨¨V W
$char
¨¨W Z
)
¨¨Z [
;
¨¨[ \
int
¨¨] `
[
¨¨` a
]
¨¨a b
iarr
¨¨c g
=
¨¨h i
new
¨¨j m
int
¨¨n q
[
¨¨q r
sarr
¨¨r v
.
¨¨v w
Length
¨¨w }
]
¨¨} ~
;
¨¨~ 
for¨¨Ä É
(¨¨Ñ Ö
int¨¨Ö à
i¨¨â ä
=¨¨ã å
$num¨¨ç é
;¨¨é è
i¨¨ê ë
<¨¨í ì
sarr¨¨î ò
.¨¨ò ô
Length¨¨ô ü
;¨¨ü †
i¨¨° ¢
++¨¨¢ §
)¨¨§ •
iarr¨¨¶ ™
[¨¨™ ´
i¨¨´ ¨
]¨¨¨ ≠
=¨¨Æ Ø
int¨¨∞ ≥
.¨¨≥ ¥
Parse¨¨¥ π
(¨¨π ∫
sarr¨¨∫ æ
[¨¨æ ø
i¨¨ø ¿
]¨¨¿ ¡
)¨¨¡ ¬
;¨¨¬ √
return¨¨ƒ  
iarr¨¨À œ
;¨¨œ –
}¨¨— “
else
≠≠ 
return
≠≠ 
val
≠≠ 
;
≠≠ 
}
ÆÆ 	
public
∂∂ 
static
∂∂ 
PropertyInfo
∂∂ "
[
∂∂" #
]
∂∂# $
GetProperties
∂∂% 2
(
∂∂2 3
Type
∂∂3 7
type
∂∂8 <
)
∂∂< =
{
∑∑ 	
string
∏∏ 
typeName
∏∏ 
=
∏∏ 
type
∏∏ "
.
∏∏" ##
AssemblyQualifiedName
∏∏# 8
;
∏∏8 9
if
ππ 
(
ππ 
Hash
ππ 
[
ππ 
typeName
ππ 
]
ππ 
!=
ππ !
null
ππ" &
)
ππ& '
return
∫∫ 
(
∫∫ 
PropertyInfo
∫∫ $
[
∫∫$ %
]
∫∫% &
)
∫∫& '
Hash
∫∫' +
[
∫∫+ ,
typeName
∫∫, 4
]
∫∫4 5
;
∫∫5 6
PropertyInfo
ºº 
[
ºº 
]
ºº 
props
ºº  
=
ºº! "
type
ºº# '
.
ºº' (
GetProperties
ºº( 5
(
ºº5 6
BindingFlags
ºº6 B
.
ººB C
Instance
ººC K
|
ººL M
BindingFlags
ººN Z
.
ººZ [
Public
ºº[ a
)
ººa b
;
ººb c
Hash
ΩΩ 
[
ΩΩ 
typeName
ΩΩ 
]
ΩΩ 
=
ΩΩ 
props
ΩΩ "
;
ΩΩ" #
return
ææ 
props
ææ 
;
ææ 
}
øø 	
public
»» 
static
»» 
T
»» '
FillObjectFromDataRowView
»» 1
<
»»1 2
T
»»2 3
>
»»3 4
(
»»4 5
DataRowView
»»5 @
rowView
»»A H
)
»»H I
{
…… 	
Type
   
type
   
=
   
typeof
   
(
   
T
    
)
    !
;
  ! "
T
ÕÕ 
obj
ÕÕ 
=
ÕÕ 
(
ÕÕ 
T
ÕÕ 
)
ÕÕ 
	Activator
ÕÕ  
.
ÕÕ  !
CreateInstance
ÕÕ! /
(
ÕÕ/ 0
type
ÕÕ0 4
)
ÕÕ4 5
;
ÕÕ5 6
PropertyInfo
–– 
[
–– 
]
–– 
props
––  
=
––! "
GetProperties
––# 0
(
––0 1
type
––1 5
)
––5 6
;
––6 7
for
““ 
(
““ 
int
““ 
i
““ 
=
““ 
$num
““ 
;
““ 
i
““ 
<
““ 
props
““  %
.
““% &
Length
““& ,
;
““, -
i
““. /
++
““/ 1
)
““1 2
{
”” 
string
‘‘ 
propName
‘‘ 
=
‘‘  !
props
‘‘" '
[
‘‘' (
i
‘‘( )
]
‘‘) *
.
‘‘* +
Name
‘‘+ /
;
‘‘/ 0
try
÷÷ 
{
◊◊ 
if
ŸŸ 
(
ŸŸ 
!
ŸŸ 
rowView
ŸŸ  
.
ŸŸ  !
Row
ŸŸ! $
.
ŸŸ$ %
Table
ŸŸ% *
.
ŸŸ* +
Columns
ŸŸ+ 2
.
ŸŸ2 3
Contains
ŸŸ3 ;
(
ŸŸ; <
propName
ŸŸ< D
.
ŸŸD E
ToLower
ŸŸE L
(
ŸŸL M
)
ŸŸM N
)
ŸŸN O
)
ŸŸO P
{
⁄⁄ 
continue
››  
;
››  !
}
ﬁﬁ 
object
‡‡ 
propVal
‡‡ "
=
‡‡# $
rowView
‡‡% ,
[
‡‡, -
propName
‡‡- 5
]
‡‡5 6
;
‡‡6 7
if
·· 
(
·· 
propVal
·· 
==
··  "
DBNull
··# )
.
··) *
Value
··* /
)
··/ 0
props
‚‚ 
[
‚‚ 
i
‚‚ 
]
‚‚  
.
‚‚  !
SetValue
‚‚! )
(
‚‚) *
obj
‚‚* -
,
‚‚- .
GetNull
‚‚/ 6
(
‚‚6 7
props
‚‚7 <
[
‚‚< =
i
‚‚= >
]
‚‚> ?
.
‚‚? @
PropertyType
‚‚@ L
)
‚‚L M
,
‚‚M N
null
‚‚O S
)
‚‚S T
;
‚‚T U
else
„„ 
{
‰‰ 
try
ÂÂ 
{
ÊÊ 
string
ÁÁ "
strVal
ÁÁ# )
=
ÁÁ* +
propVal
ÁÁ, 3
.
ÁÁ3 4
ToString
ÁÁ4 <
(
ÁÁ< =
)
ÁÁ= >
;
ÁÁ> ?
if
ÍÍ 
(
ÍÍ  
props
ÍÍ  %
[
ÍÍ% &
i
ÍÍ& '
]
ÍÍ' (
.
ÍÍ( )
PropertyType
ÍÍ) 5
.
ÍÍ5 6"
UnderlyingSystemType
ÍÍ6 J
.
ÍÍJ K
FullName
ÍÍK S
==
ÍÍT V
typeof
ÍÍW ]
(
ÍÍ] ^
DateTime
ÍÍ^ f
)
ÍÍf g
.
ÍÍg h
FullName
ÍÍh p
)
ÍÍp q
{
ÎÎ 
DateTime
ÏÏ  (
date
ÏÏ) -
=
ÏÏ. /
DateTime
ÏÏ0 8
.
ÏÏ8 9
MinValue
ÏÏ9 A
;
ÏÏA B
if
ÌÌ  "
(
ÌÌ# $
DateTime
ÌÌ$ ,
.
ÌÌ, -
TryParse
ÌÌ- 5
(
ÌÌ5 6
strVal
ÌÌ6 <
,
ÌÌ< =
out
ÌÌ> A
date
ÌÌB F
)
ÌÌF G
)
ÌÌG H
{
ÓÓ  !
props
ÔÔ$ )
[
ÔÔ) *
i
ÔÔ* +
]
ÔÔ+ ,
.
ÔÔ, -
SetValue
ÔÔ- 5
(
ÔÔ5 6
obj
ÔÔ6 9
,
ÔÔ9 :
date
ÔÔ; ?
,
ÔÔ? @
null
ÔÔA E
)
ÔÔE F
;
ÔÔF G
}
  !
}
ÒÒ 
else
ÚÚ  
if
ÚÚ! #
(
ÚÚ$ %
props
ÚÚ% *
[
ÚÚ* +
i
ÚÚ+ ,
]
ÚÚ, -
.
ÚÚ- .
PropertyType
ÚÚ. :
.
ÚÚ: ;"
UnderlyingSystemType
ÚÚ; O
.
ÚÚO P
FullName
ÚÚP X
==
ÚÚY [
typeof
ÚÚ\ b
(
ÚÚb c
DateTime
ÚÚc k
?
ÚÚk l
)
ÚÚl m
.
ÚÚm n
FullName
ÚÚn v
)
ÚÚv w
{
ÛÛ 
if
ÙÙ  "
(
ÙÙ# $
!
ÙÙ$ %
string
ÙÙ% +
.
ÙÙ+ , 
IsNullOrWhiteSpace
ÙÙ, >
(
ÙÙ> ?
strVal
ÙÙ? E
)
ÙÙE F
&&
ÙÙG I
Convert
ÙÙJ Q
.
ÙÙQ R

ToDateTime
ÙÙR \
(
ÙÙ\ ]
propVal
ÙÙ] d
)
ÙÙd e
!=
ÙÙf h
DateTime
ÙÙi q
.
ÙÙq r
MinValue
ÙÙr z
&&
ÙÙ{ }
DateTimeÙÙ~ Ü
.ÙÙÜ á
TryParseÙÙá è
(ÙÙè ê
strValÙÙê ñ
,ÙÙñ ó
outÙÙò õ
DateTimeÙÙú §
dateÙÙ• ©
)ÙÙ© ™
)ÙÙ™ ´
{
ıı  !
props
ˆˆ$ )
[
ˆˆ) *
i
ˆˆ* +
]
ˆˆ+ ,
.
ˆˆ, -
SetValue
ˆˆ- 5
(
ˆˆ5 6
obj
ˆˆ6 9
,
ˆˆ9 :
date
ˆˆ; ?
,
ˆˆ? @
null
ˆˆA E
)
ˆˆE F
;
ˆˆF G
}
˜˜  !
else
¯¯  $
{
˘˘  !
props
˙˙$ )
[
˙˙) *
i
˙˙* +
]
˙˙+ ,
.
˙˙, -
SetValue
˙˙- 5
(
˙˙5 6
obj
˙˙6 9
,
˙˙9 :
null
˙˙; ?
,
˙˙? @
null
˙˙A E
)
˙˙E F
;
˙˙F G
}
˚˚  !
}
¸¸ 
else
˝˝  
{
˛˛ 
props
ÄÄ  %
[
ÄÄ% &
i
ÄÄ& '
]
ÄÄ' (
.
ÄÄ( )
SetValue
ÄÄ) 1
(
ÄÄ1 2
obj
ÄÄ2 5
,
ÄÄ5 6
Cast
ÄÄ7 ;
(
ÄÄ; <
strVal
ÄÄ< B
,
ÄÄB C
props
ÄÄD I
[
ÄÄI J
i
ÄÄJ K
]
ÄÄK L
.
ÄÄL M
PropertyType
ÄÄM Y
)
ÄÄY Z
,
ÄÄZ [
null
ÄÄ\ `
)
ÄÄ` a
;
ÄÄa b
}
ÅÅ 
}
ÇÇ 
catch
ÉÉ 
{
ÑÑ 
}
ÜÜ 
}
áá 
}
àà 
catch
ââ 
{
ââ 
}
ââ 
}
ää 
return
åå 
obj
åå 
;
åå 
}
çç 	
public
ññ 
static
ññ 
T
ññ $
FillObjectFromDataView
ññ .
<
ññ. /
T
ññ/ 0
>
ññ0 1
(
ññ1 2
this
ññ2 6
DataView
ññ7 ?
view
ññ@ D
)
ññD E
{
óó 	
Type
òò 
type
òò 
=
òò 
typeof
òò 
(
òò 
T
òò  
)
òò  !
;
òò! "
T
õõ 
obj
õõ 
=
õõ 
(
õõ 
T
õõ 
)
õõ 
	Activator
õõ  
.
õõ  !
CreateInstance
õõ! /
(
õõ/ 0
type
õõ0 4
)
õõ4 5
;
õõ5 6
foreach
ûû 
(
ûû 
DataRowView
ûû  
dr
ûû! #
in
ûû$ &
view
ûû' +
)
ûû+ ,
{
üü 
obj
†† 
=
†† '
FillObjectFromDataRowView
†† /
<
††/ 0
T
††0 1
>
††1 2
(
††2 3
dr
††3 5
)
††5 6
;
††6 7
}
°° 
return
££ 
obj
££ 
;
££ 
}
§§ 	
public
≠≠ 
static
≠≠ 
void
≠≠ (
FillCollectionFromDataView
≠≠ 5
<
≠≠5 6
T
≠≠6 7
>
≠≠7 8
(
≠≠8 9
IList
≠≠9 >
<
≠≠> ?
T
≠≠? @
>
≠≠@ A
destinationList
≠≠B Q
,
≠≠Q R
DataView
≠≠S [
view
≠≠\ `
)
≠≠` a
{
ÆÆ 	
destinationList
ØØ 
=
ØØ 
(
ØØ 
destinationList
ØØ .
==
ØØ/ 1
null
ØØ2 6
)
ØØ6 7
?
ØØ8 9
new
ØØ: =
List
ØØ> B
<
ØØB C
T
ØØC D
>
ØØD E
(
ØØE F
)
ØØF G
:
ØØH I
destinationList
ØØJ Y
;
ØØY Z
Type
∞∞ 
type
∞∞ 
=
∞∞ 
typeof
∞∞ 
(
∞∞ 
T
∞∞  
)
∞∞  !
;
∞∞! "
PropertyInfo
±± 
[
±± 
]
±± 
props
±±  
=
±±! "
GetProperties
±±# 0
(
±±0 1
type
±±1 5
)
±±5 6
;
±±6 7
foreach
≥≥ 
(
≥≥ 
DataRowView
≥≥  
row
≥≥! $
in
≥≥% '
view
≥≥( ,
)
≥≥, -
{
¥¥ 
T
∂∂ 
obj
∂∂ 
=
∂∂ 
(
∂∂ 
T
∂∂ 
)
∂∂ 
	Activator
∂∂ $
.
∂∂$ %
CreateInstance
∂∂% 3
(
∂∂3 4
type
∂∂4 8
)
∂∂8 9
;
∂∂9 :
destinationList
∂∂; J
.
∂∂J K
Add
∂∂K N
(
∂∂N O
obj
∂∂O R
)
∂∂R S
;
∂∂S T
for
ππ 
(
ππ 
int
ππ 
i
ππ 
=
ππ 
$num
ππ 
;
ππ 
i
ππ  !
<
ππ" #
props
ππ$ )
.
ππ) *
Length
ππ* 0
;
ππ0 1
i
ππ2 3
++
ππ3 5
)
ππ5 6
{
∫∫ 
string
ªª 
propName
ªª #
=
ªª$ %
props
ªª& +
[
ªª+ ,
i
ªª, -
]
ªª- .
.
ªª. /
Name
ªª/ 3
;
ªª3 4
if
ºº 
(
ºº 
view
ºº 
.
ºº 
Table
ºº "
.
ºº" #
Columns
ºº# *
[
ºº* +
propName
ºº+ 3
]
ºº3 4
==
ºº5 7
null
ºº8 <
)
ºº< =
continue
ºº> F
;
ººF G
object
ææ 
propVal
ææ "
=
ææ# $
row
ææ% (
[
ææ( )
propName
ææ) 1
]
ææ1 2
;
ææ2 3
if
øø 
(
øø 
propVal
øø 
==
øø  "
DBNull
øø# )
.
øø) *
Value
øø* /
)
øø/ 0
{
øø1 2
props
øø3 8
[
øø8 9
i
øø9 :
]
øø: ;
.
øø; <
SetValue
øø< D
(
øøD E
obj
øøE H
,
øøH I
GetNull
øøJ Q
(
øøQ R
props
øøR W
[
øøW X
i
øøX Y
]
øøY Z
.
øøZ [
PropertyType
øø[ g
)
øøg h
,
øøh i
null
øøj n
)
øøn o
;
øøo p
}
øøq r
else
¿¿ 
{
¡¡ 
try
¬¬ 
{
√√ 
props
≈≈ !
[
≈≈! "
i
≈≈" #
]
≈≈# $
.
≈≈$ %
SetValue
≈≈% -
(
≈≈- .
obj
≈≈. 1
,
≈≈1 2
propVal
≈≈3 :
,
≈≈: ;
null
≈≈< @
)
≈≈@ A
;
≈≈A B
}
∆∆ 
catch
«« 
{
»» 
try
   
{
ÀÀ 
string
ÃÃ  &
strVal
ÃÃ' -
=
ÃÃ. /
propVal
ÃÃ0 7
.
ÃÃ7 8
ToString
ÃÃ8 @
(
ÃÃ@ A
)
ÃÃA B
;
ÃÃB C
props
ÕÕ  %
[
ÕÕ% &
i
ÕÕ& '
]
ÕÕ' (
.
ÕÕ( )
SetValue
ÕÕ) 1
(
ÕÕ1 2
obj
ÕÕ2 5
,
ÕÕ5 6
Cast
ÕÕ7 ;
(
ÕÕ; <
strVal
ÕÕ< B
,
ÕÕB C
props
ÕÕD I
[
ÕÕI J
i
ÕÕJ K
]
ÕÕK L
.
ÕÕL M
PropertyType
ÕÕM Y
)
ÕÕY Z
,
ÕÕZ [
null
ÕÕ\ `
)
ÕÕ` a
;
ÕÕa b
}
ŒŒ 
catch
œœ !
{
–– 
}
““ 
}
”” 
}
‘‘ 
}
’’ 
}
÷÷ 
}
◊◊ 	
public
ŸŸ 
static
ŸŸ 
DateTime
ŸŸ 
ParseExcelDate
ŸŸ -
(
ŸŸ- .
this
ŸŸ. 2
string
ŸŸ3 9
date
ŸŸ: >
)
ŸŸ> ?
{
⁄⁄ 	
DateTime
€€ 
dt
€€ 
;
€€ 
if
‹‹ 
(
‹‹ 
DateTime
‹‹ 
.
‹‹ 
TryParse
‹‹ !
(
‹‹! "
date
‹‹" &
,
‹‹& '
out
‹‹( +
dt
‹‹, .
)
‹‹. /
)
‹‹/ 0
{
›› 
return
ﬁﬁ 
dt
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 
double
·· 
oaDate
·· 
;
·· 
if
‚‚ 
(
‚‚ 
double
‚‚ 
.
‚‚ 
TryParse
‚‚ 
(
‚‚  
date
‚‚  $
,
‚‚$ %
out
‚‚& )
oaDate
‚‚* 0
)
‚‚0 1
)
‚‚1 2
{
„„ 
return
‰‰ 
DateTime
‰‰ 
.
‰‰  

FromOADate
‰‰  *
(
‰‰* +
oaDate
‰‰+ 1
)
‰‰1 2
;
‰‰2 3
}
ÂÂ 
return
ÁÁ 
DateTime
ÁÁ 
.
ÁÁ 
MinValue
ÁÁ $
;
ÁÁ$ %
}
ËË 	
}
ÈÈ 
}ÍÍ ƒ≥
@D:\EltizamLive\Eltizam.Data.DataAccess\Helper\EltizamDBHelper.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Helper" (
{ 
public 
class 
EltizamDBHelper 
{ 
public 
static 
int 
timeout !
=" #
$num$ &
;& '
public 
static 
int 
DefaultPageNumber +
=, -
$num. /
;/ 0
public 
static 
int 
DefaultPageSize )
=* +
$num, 0
;0 1
public 
static 
string 
TotalRecords )
=* +
$str, :
;: ;
public 
static 
void 
ExecuteNonQuery *
(* +
string+ 1
commandText2 =
,= >
string? E
	connStingF O
,O P
CommandTypeQ \
commandType] h
=i j
CommandTypek v
.v w
Textw {
,{ |
params+ 1
DbParameter2 =
[= >
]> ?
dbParameters@ L
)L M
{ 	
using 
( 
var 
dbConn 
= 
new  #
SqlConnection$ 1
(1 2
	connSting2 ;
); <
)< =
{ 
using 
( 

SqlCommand !
	dbCommand" +
=, -
new. 1

SqlCommand2 <
(< =
commandText= H
,H I
dbConnJ P
)P Q
)Q R
{ 
	dbCommand 
. 
CommandType )
=* +
commandType, 7
;7 8
	dbCommand 
. 
CommandText )
=* +
commandText, 7
;7 8
	dbCommand 
. 
CommandTimeout ,
=- .
timeout/ 6
;6 7
if 
( 
dbParameters $
!=% '
null( ,
), -
{ 
foreach   
(    !
var  ! $
dbParameter  % 0
in  1 3
dbParameters  4 @
)  @ A
{!! 
CommonDb"" $
.""$ %
AddParameter""% 1
(""1 2
	dbCommand""2 ;
,""; <
dbParameter""= H
.""H I
Name""I M
,""M N
dbParameter""O Z
.""Z [
Value""[ `
,""` a
dbParameter""b m
.""m n
	FieldType""n w
)""w x
;""x y
}## 
}$$ 
dbConn&& 
.&& 
Open&& 
(&&  
)&&  !
;&&! "
	dbCommand'' 
.'' 
ExecuteNonQuery'' -
(''- .
)''. /
;''/ 0
}(( 
})) 
}** 	
publicFF 
staticFF 
ListFF 
<FF 
TFF 
>FF 
ExecuteMappedReaderFF 1
<FF1 2
TFF2 3
>FF3 4
(FF4 5
stringFF5 ;
commandTextFF< G
,FFG H
stringFFI O
	connStingFFP Y
,FFY Z
CommandTypeFF[ f
commandTypeFFg r
=FFs t
CommandType	FFu Ä
.
FFÄ Å
Text
FFÅ Ö
,
FFÖ Ü
params
FFá ç
DbParameter
FFé ô
[
FFô ö
]
FFö õ
dbParameters
FFú ®
)
FF® ©
where
FF™ Ø
T
FF∞ ±
:
FF≤ ≥
new
FF¥ ∑
(
FF∑ ∏
)
FF∏ π
{GG 	
usingHH 
(HH 
SqlConnectionHH  
dbConnectionHH! -
=HH. /
newHH0 3
SqlConnectionHH4 A
(HHA B
	connStingHHB K
)HHK L
)HHL M
{II 
usingJJ 
(JJ 

SqlCommandJJ !
	dbCommandJJ" +
=JJ, -
newJJ. 1

SqlCommandJJ2 <
(JJ< =
commandTextJJ= H
,JJH I
dbConnectionJJJ V
)JJV W
)JJW X
{KK 
	dbCommandLL 
.LL 
CommandTypeLL )
=LL* +
commandTypeLL, 7
;LL7 8
	dbCommandMM 
.MM 
CommandTextMM )
=MM* +
commandTextMM, 7
;MM7 8
	dbCommandNN 
.NN 
CommandTimeoutNN ,
=NN- .
timeoutNN/ 6
;NN6 7
ifOO 
(OO 
dbParametersOO $
!=OO% '
nullOO( ,
)OO, -
{PP 
foreachQQ 
(QQ  !
varQQ! $
dbParameterQQ% 0
inQQ1 3
dbParametersQQ4 @
)QQ@ A
{RR 
CommonDbSS $
.SS$ %
AddParameterSS% 1
(SS1 2
	dbCommandSS2 ;
,SS; <
dbParameterSS= H
.SSH I
NameSSI M
,SSM N
dbParameterSSO Z
.SSZ [
ValueSS[ `
,SS` a
dbParameterSSb m
.SSm n
	FieldTypeSSn w
)SSw x
;SSx y
}TT 
}UU 
dbConnectionWW  
.WW  !
OpenWW! %
(WW% &
)WW& '
;WW' (
SqlDataReaderXX !
drXX" $
=XX% &
	dbCommandXX' 0
.XX0 1
ExecuteReaderXX1 >
(XX> ?
)XX? @
;XX@ A
returnYY  
DataReaderExtensionsYY /
.YY/ 0
	MapToListYY0 9
<YY9 :
TYY: ;
>YY; <
(YY< =
drYY= ?
)YY? @
;YY@ A
}ZZ 
}[[ 
}\\ 	
public^^ 
static^^ 
T^^ %
ExecuteSingleMappedReader^^ 1
<^^1 2
T^^2 3
>^^3 4
(^^4 5
string^^5 ;
commandText^^< G
,^^G H
string^^I O
	connSting^^P Y
,^^Y Z
CommandType^^[ f
commandType^^g r
=^^s t
CommandType	^^u Ä
.
^^Ä Å
Text
^^Å Ö
,
^^Ö Ü
params
^^á ç
DbParameter
^^é ô
[
^^ô ö
]
^^ö õ
dbParameters
^^ú ®
)
^^® ©
where
^^™ Ø
T
^^∞ ±
:
^^≤ ≥
new
^^¥ ∑
(
^^∑ ∏
)
^^∏ π
{__ 	
using`` 
(`` 
SqlConnection``  
dbConnection``! -
=``. /
new``0 3
SqlConnection``4 A
(``A B
	connSting``B K
)``K L
)``L M
{aa 
usingbb 
(bb 

SqlCommandbb !
	dbCommandbb" +
=bb, -
newbb. 1

SqlCommandbb2 <
(bb< =
commandTextbb= H
,bbH I
dbConnectionbbJ V
)bbV W
)bbW X
{cc 
	dbCommanddd 
.dd 
CommandTypedd )
=dd* +
commandTypedd, 7
;dd7 8
	dbCommandee 
.ee 
CommandTextee )
=ee* +
commandTextee, 7
;ee7 8
	dbCommandff 
.ff 
CommandTimeoutff ,
=ff- .
timeoutff/ 6
;ff6 7
ifgg 
(gg 
dbParametersgg $
!=gg% '
nullgg( ,
)gg, -
{hh 
foreachii 
(ii  !
varii! $
dbParameterii% 0
inii1 3
dbParametersii4 @
)ii@ A
{jj 
CommonDbkk $
.kk$ %
AddParameterkk% 1
(kk1 2
	dbCommandkk2 ;
,kk; <
dbParameterkk= H
.kkH I
NamekkI M
,kkM N
dbParameterkkO Z
.kkZ [
Valuekk[ `
,kk` a
dbParameterkkb m
.kkm n
	FieldTypekkn w
)kkw x
;kkx y
}ll 
}mm 
dbConnectionoo  
.oo  !
Openoo! %
(oo% &
)oo& '
;oo' (
SqlDataReaderpp !
drpp" $
=pp% &
	dbCommandpp' 0
.pp0 1
ExecuteReaderpp1 >
(pp> ?
)pp? @
;pp@ A
returnqq  
DataReaderExtensionsqq /
.qq/ 0
MapToSingleqq0 ;
<qq; <
Tqq< =
>qq= >
(qq> ?
drqq? A
)qqA B
;qqB C
}rr 
}ss 
}tt 	
publicvv 
staticvv 
voidvv 
ExecuteReadervv (
(vv( )
stringvv) /
commandTextvv0 ;
,vv; <
stringvv= C
	connStingvvD M
,vvM N
ActionvvO U
<vvU V
IDataReadervvV a
>vva b
recordHandlervvc p
,vvp q
CommandTypevvr }
commandType	vv~ â
=
vvä ã
CommandType
vvå ó
.
vvó ò
Text
vvò ú
,
vvú ù
params
vvû §
DbParameter
vv• ∞
[
vv∞ ±
]
vv± ≤
dbParameters
vv≥ ø
)
vvø ¿
{ww 	
usingxx 
(xx 
varxx 
dbConnectionxx #
=xx$ %
CommonDbxx& .
.xx. /
CreateDbConnectionxx/ A
(xxA B
	connStingxxB K
)xxK L
)xxL M
{yy 
usingzz 
(zz 
varzz 
	dbCommandzz $
=zz% &
dbConnectionzz' 3
.zz3 4
CreateCommandzz4 A
(zzA B
)zzB C
)zzC D
{{{ 
	dbCommand|| 
.|| 
CommandType|| )
=||* +
commandType||, 7
;||7 8
	dbCommand}} 
.}} 
CommandText}} )
=}}* +
commandText}}, 7
;}}7 8
	dbCommand~~ 
.~~ 
CommandTimeout~~ ,
=~~- .
timeout~~/ 6
;~~6 7
if 
( 
dbParameters $
!=% '
null( ,
), -
{
ÄÄ 
foreach
ÅÅ 
(
ÅÅ  !
var
ÅÅ! $
dbParameter
ÅÅ% 0
in
ÅÅ1 3
dbParameters
ÅÅ4 @
)
ÅÅ@ A
{
ÇÇ 
CommonDb
ÉÉ $
.
ÉÉ$ %
AddParameter
ÉÉ% 1
(
ÉÉ1 2
	dbCommand
ÉÉ2 ;
,
ÉÉ; <
dbParameter
ÉÉ= H
.
ÉÉH I
Name
ÉÉI M
,
ÉÉM N
dbParameter
ÉÉO Z
.
ÉÉZ [
Value
ÉÉ[ `
,
ÉÉ` a
dbParameter
ÉÉb m
.
ÉÉm n
	FieldType
ÉÉn w
)
ÉÉw x
;
ÉÉx y
}
ÑÑ 
}
ÖÖ 
dbConnection
áá  
.
áá  !
Open
áá! %
(
áá% &
)
áá& '
;
áá' (
var
àà 
reader
àà 
=
àà  
	dbCommand
àà! *
.
àà* +
ExecuteReader
àà+ 8
(
àà8 9
)
àà9 :
;
àà: ;
while
ââ 
(
ââ 
reader
ââ !
.
ââ! "
Read
ââ" &
(
ââ& '
)
ââ' (
)
ââ( )
{
ää 
recordHandler
ãã %
(
ãã% &
reader
ãã& ,
)
ãã, -
;
ãã- .
}
åå 
}
çç 
}
éé 
}
èè 	
public
ôô 
static
ôô 
DataSet
ôô  
ExecuteMultiReader
ôô 0
(
ôô0 1
string
ôô1 7
commandText
ôô8 C
,
ôôC D
string
ôôE K
	connSting
ôôL U
,
ôôU V
CommandType
ôôW b
commandType
ôôc n
=
ôôo p
CommandType
ôôq |
.
ôô| }
Textôô} Å
,ôôÅ Ç
paramsôôÉ â
DbParameterôôä ï
[ôôï ñ
]ôôñ ó
dbParametersôôò §
)ôô§ •
{
öö 	
DataSet
õõ 
	resultSet
õõ 
=
õõ 
new
õõ  #
(
õõ# $
)
õõ$ %
;
õõ% &
using
úú 
SqlConnection
úú 
dbConnection
úú  ,
=
úú- .
new
úú/ 2
(
úú2 3
	connSting
úú3 <
)
úú< =
;
úú= >
using
ùù 

SqlCommand
ùù 
	dbCommand
ùù &
=
ùù' (
new
ùù) ,
(
ùù, -
commandText
ùù- 8
,
ùù8 9
dbConnection
ùù: F
)
ùùF G
{
ûû 
CommandType
üü 
=
üü 
commandType
üü )
,
üü) *
CommandText
†† 
=
†† 
commandText
†† )
,
††) *
CommandTimeout
°° 
=
°°  
timeout
°°! (
}
¢¢ 
;
¢¢ 
if
§§ 
(
§§ 
dbParameters
§§ 
!=
§§ 
null
§§  $
)
§§$ %
{
•• 
foreach
¶¶ 
(
¶¶ 
var
¶¶ 
dbParameter
¶¶ (
in
¶¶) +
dbParameters
¶¶, 8
)
¶¶8 9
{
ßß 
CommonDb
®® 
.
®® 
AddParameter
®® )
(
®®) *
	dbCommand
®®* 3
,
®®3 4
dbParameter
®®5 @
.
®®@ A
Name
®®A E
,
®®E F
dbParameter
®®G R
.
®®R S
Value
®®S X
,
®®X Y
dbParameter
®®Z e
.
®®e f
	FieldType
®®f o
)
®®o p
;
®®p q
}
©© 
}
™™ 
dbConnection
¨¨ 
.
¨¨ 
Open
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨  
SqlDataAdapter
≠≠ 
dataAdapter
≠≠ &
=
≠≠' (
new
≠≠) ,
(
≠≠, -
)
≠≠- .
{
≠≠/ 0
SelectCommand
≠≠1 >
=
≠≠? @
	dbCommand
≠≠A J
}
≠≠K L
;
≠≠L M
dataAdapter
ÆÆ 
.
ÆÆ 
Fill
ÆÆ 
(
ÆÆ 
	resultSet
ÆÆ &
)
ÆÆ& '
;
ÆÆ' (
return
∞∞ 
	resultSet
∞∞ 
;
∞∞ 
}
±± 	
public
≥≥ 
static
≥≥ 
IDataReader
≥≥ !
	GetReader
≥≥" +
(
≥≥+ ,
string
≥≥, 2
commandText
≥≥3 >
,
≥≥> ?
string
≥≥@ F
	connSting
≥≥G P
,
≥≥P Q
CommandType
≥≥R ]
commandType
≥≥^ i
=
≥≥j k
CommandType
≥≥l w
.
≥≥w x
Text
≥≥x |
,
≥≥| }
params≥≥~ Ñ
DbParameter≥≥Ö ê
[≥≥ê ë
]≥≥ë í
dbParameters≥≥ì ü
)≥≥ü †
{
¥¥ 	
var
µµ 
dbConnection
µµ 
=
µµ 
CommonDb
µµ '
.
µµ' ( 
CreateDbConnection
µµ( :
(
µµ: ;
	connSting
µµ; D
)
µµD E
;
µµE F
using
∑∑ 
(
∑∑ 
var
∑∑ 
	dbCommand
∑∑  
=
∑∑! "
dbConnection
∑∑# /
.
∑∑/ 0
CreateCommand
∑∑0 =
(
∑∑= >
)
∑∑> ?
)
∑∑? @
{
∏∏ 
	dbCommand
ππ 
.
ππ 
CommandType
ππ %
=
ππ& '
commandType
ππ( 3
;
ππ3 4
	dbCommand
∫∫ 
.
∫∫ 
CommandText
∫∫ %
=
∫∫& '
commandText
∫∫( 3
;
∫∫3 4
	dbCommand
ªª 
.
ªª 
CommandTimeout
ªª (
=
ªª) *
timeout
ªª+ 2
;
ªª2 3
if
ΩΩ 
(
ΩΩ 
dbParameters
ΩΩ  
!=
ΩΩ! #
null
ΩΩ$ (
)
ΩΩ( )
{
ææ 
foreach
øø 
(
øø 
var
øø  
dbParameter
øø! ,
in
øø- /
dbParameters
øø0 <
)
øø< =
{
¿¿ 
CommonDb
¡¡  
.
¡¡  !
AddParameter
¡¡! -
(
¡¡- .
	dbCommand
¡¡. 7
,
¡¡7 8
dbParameter
¡¡9 D
.
¡¡D E
Name
¡¡E I
,
¡¡I J
dbParameter
¡¡K V
.
¡¡V W
Value
¡¡W \
,
¡¡\ ]
dbParameter
¡¡^ i
.
¡¡i j
	FieldType
¡¡j s
)
¡¡s t
;
¡¡t u
}
¬¬ 
}
√√ 
dbConnection
ƒƒ 
.
ƒƒ 
Open
ƒƒ !
(
ƒƒ! "
)
ƒƒ" #
;
ƒƒ# $
return
≈≈ 
	dbCommand
≈≈  
.
≈≈  !
ExecuteReader
≈≈! .
(
≈≈. /
CommandBehavior
≈≈/ >
.
≈≈> ?
CloseConnection
≈≈? N
)
≈≈N O
;
≈≈O P
}
∆∆ 
}
«« 	
public
”” 
static
”” 
List
”” 
<
”” 
T
”” 
>
”” 4
&ExecuteMappedReaderWithOutputParameter
”” D
<
””D E
T
””E F
>
””F G
(
””G H
string
””H N
commandText
””O Z
,
””Z [
string
””\ b
	connSting
””c l
,
””l m
out
””n q
int
””r u
Count
””v {
,
””{ |
CommandType””} à
commandType””â î
=””ï ñ
CommandType””ó ¢
.””¢ £
Text””£ ß
,””ß ®
params
‘‘ 
DbParameter
‘‘ %
[
‘‘% &
]
‘‘& '
dbParameters
‘‘( 4
)
‘‘4 5
where
‘‘6 ;
T
‘‘< =
:
‘‘> ?
new
‘‘@ C
(
‘‘C D
)
‘‘D E
{
’’ 	
using
÷÷ 
SqlConnection
÷÷ 
dbConnection
÷÷  ,
=
÷÷- .
new
÷÷/ 2
SqlConnection
÷÷3 @
(
÷÷@ A
	connSting
÷÷A J
)
÷÷J K
;
÷÷K L
using
◊◊ 

SqlCommand
◊◊ 
	dbCommand
◊◊ &
=
◊◊' (
new
◊◊) ,

SqlCommand
◊◊- 7
(
◊◊7 8
commandText
◊◊8 C
,
◊◊C D
dbConnection
◊◊E Q
)
◊◊Q R
{
ÿÿ 
CommandType
ŸŸ 
=
ŸŸ 
commandType
ŸŸ )
,
ŸŸ) *
CommandText
⁄⁄ 
=
⁄⁄ 
commandText
⁄⁄ )
,
⁄⁄) *
CommandTimeout
€€ 
=
€€  
timeout
€€! (
}
‹‹ 
;
‹‹ 
if
›› 
(
›› 
dbParameters
›› 
!=
›› 
null
››  $
)
››$ %
{
ﬁﬁ 
foreach
ﬂﬂ 
(
ﬂﬂ 
var
ﬂﬂ 
dbParameter
ﬂﬂ (
in
ﬂﬂ) +
dbParameters
ﬂﬂ, 8
)
ﬂﬂ8 9
{
‡‡ 
CommonDb
·· 
.
·· 
AddParameter
·· )
(
··) *
	dbCommand
··* 3
,
··3 4
dbParameter
··5 @
.
··@ A
Name
··A E
,
··E F
dbParameter
··G R
.
··R S
Value
··S X
,
··X Y
dbParameter
··Z e
.
··e f
	FieldType
··f o
)
··o p
;
··p q
}
‚‚ 
}
„„ 
dbConnection
ÂÂ 
.
ÂÂ 
Open
ÂÂ 
(
ÂÂ 
)
ÂÂ 
;
ÂÂ  
SqlDataReader
ÊÊ 
dr
ÊÊ 
=
ÊÊ 
	dbCommand
ÊÊ (
.
ÊÊ( )
ExecuteReader
ÊÊ) 6
(
ÊÊ6 7
)
ÊÊ7 8
;
ÊÊ8 9
Count
ÈÈ 
=
ÈÈ 
$num
ÈÈ 
;
ÈÈ 
while
ÍÍ 
(
ÍÍ 
dr
ÍÍ 
.
ÍÍ 
Read
ÍÍ 
(
ÍÍ 
)
ÍÍ 
)
ÍÍ 
{
ÎÎ 
Count
ÏÏ 
=
ÏÏ 
dr
ÏÏ 
.
ÏÏ 
GetValue
ÏÏ #
<
ÏÏ# $
int
ÏÏ$ '
>
ÏÏ' (
(
ÏÏ( )
TotalRecords
ÏÏ) 5
)
ÏÏ5 6
;
ÏÏ6 7
}
ÌÌ 
dr
 
.
 

NextResult
 
(
 
)
 
;
 
return
ÒÒ "
DataReaderExtensions
ÒÒ '
.
ÒÒ' (
	MapToList
ÒÒ( 1
<
ÒÒ1 2
T
ÒÒ2 3
>
ÒÒ3 4
(
ÒÒ4 5
dr
ÒÒ5 7
)
ÒÒ7 8
;
ÒÒ8 9
}
ÚÚ 	
}
ÛÛ 
public
ıı 

static
ıı 
class
ıı 
ConvertHelper
ıı %
{
ˆˆ 
public
˜˜ 
static
˜˜ 
TResult
˜˜ 
ConvertDbValue
˜˜ ,
<
˜˜, -
TResult
˜˜- 4
>
˜˜4 5
(
˜˜5 6
object
˜˜6 <
dbValue
˜˜= D
)
˜˜D E
{
¯¯ 	
if
˘˘ 
(
˘˘ 
dbValue
˘˘ 
==
˘˘ 
null
˘˘ 
||
˘˘  "
dbValue
˘˘# *
is
˘˘+ -
DBNull
˘˘. 4
)
˘˘4 5
{
˙˙ 
return
˚˚ 
default
˚˚ 
(
˚˚ 
TResult
˚˚ &
)
˚˚& '
;
˚˚' (
}
¸¸ 
var
˛˛ 

resultType
˛˛ 
=
˛˛ 
typeof
˛˛ #
(
˛˛# $
TResult
˛˛$ +
)
˛˛+ ,
;
˛˛, -
if
ˇˇ 
(
ˇˇ 

resultType
ˇˇ 
.
ˇˇ 
IsGenericType
ˇˇ (
&&
ˇˇ) +

resultType
ˇˇ, 6
.
ˇˇ6 7&
GetGenericTypeDefinition
ˇˇ7 O
(
ˇˇO P
)
ˇˇP Q
==
ˇˇR T
typeof
ˇˇU [
(
ˇˇ[ \
Nullable
ˇˇ\ d
<
ˇˇd e
>
ˇˇe f
)
ˇˇf g
)
ˇˇg h
{
ÄÄ 

resultType
ÅÅ 
=
ÅÅ 
Nullable
ÅÅ %
.
ÅÅ% &
GetUnderlyingType
ÅÅ& 7
(
ÅÅ7 8

resultType
ÅÅ8 B
)
ÅÅB C
;
ÅÅC D
}
ÇÇ 
return
ÑÑ 
(
ÑÑ 
TResult
ÑÑ 
)
ÑÑ 
Convert
ÑÑ #
.
ÑÑ# $

ChangeType
ÑÑ$ .
(
ÑÑ. /
dbValue
ÑÑ/ 6
,
ÑÑ6 7

resultType
ÑÑ8 B
)
ÑÑB C
;
ÑÑC D
}
ÖÖ 	
public
áá 
static
áá 
object
áá 
ConvertDbValue
áá +
(
áá+ ,
object
áá, 2
dbValue
áá3 :
,
áá: ;
Type
áá< @
type
ááA E
)
ááE F
{
àà 	
if
ââ 
(
ââ 
dbValue
ââ 
==
ââ 
null
ââ 
||
ââ  "
dbValue
ââ# *
is
ââ+ -
DBNull
ââ. 4
)
ââ4 5
{
ää 
return
ãã 

GetDefault
ãã !
(
ãã! "
type
ãã" &
)
ãã& '
;
ãã' (
}
åå 
var
éé 

resultType
éé 
=
éé 
type
éé !
;
éé! "
if
êê 
(
êê 
type
êê 
.
êê 
IsGenericType
êê "
&&
êê# %
type
êê& *
.
êê* +&
GetGenericTypeDefinition
êê+ C
(
êêC D
)
êêD E
==
êêF H
typeof
êêI O
(
êêO P
Nullable
êêP X
<
êêX Y
>
êêY Z
)
êêZ [
)
êê[ \
{
ëë 

resultType
íí 
=
íí 
Nullable
íí %
.
íí% &
GetUnderlyingType
íí& 7
(
íí7 8
type
íí8 <
)
íí< =
;
íí= >
}
ìì 
return
ïï 
Convert
ïï 
.
ïï 

ChangeType
ïï %
(
ïï% &
dbValue
ïï& -
,
ïï- .

resultType
ïï/ 9
)
ïï9 :
;
ïï: ;
}
ññ 	
public
òò 
static
òò 
object
òò 

GetDefault
òò '
(
òò' (
Type
òò( ,
type
òò- 1
)
òò1 2
{
ôô 	
return
öö 
type
öö 
.
öö 
IsValueType
öö #
?
öö$ %
	Activator
öö& /
.
öö/ 0
CreateInstance
öö0 >
(
öö> ?
type
öö? C
)
ööC D
:
ööE F
null
ööG K
;
ööK L
}
õõ 	
public
ùù 
static
ùù 
TResult
ùù 
GetValue
ùù &
<
ùù& '
TResult
ùù' .
>
ùù. /
(
ùù/ 0
this
ùù0 4
IDataReader
ùù5 @
reader
ùùA G
,
ùùG H
string
ùùI O
	fieldName
ùùP Y
)
ùùY Z
{
ûû 	
var
üü 
dbValue
üü 
=
üü 
reader
üü  
[
üü  !
	fieldName
üü! *
]
üü* +
;
üü+ ,
return
†† 
ConvertDbValue
†† !
<
††! "
TResult
††" )
>
††) *
(
††* +
dbValue
††+ 2
)
††2 3
;
††3 4
}
°° 	
}
¢¢ 
public
§§ 

static
§§ 
class
§§ 
CommonDb
§§  
{
•• 
public
¶¶ 
static
¶¶ 
IDbConnection
¶¶ # 
CreateDbConnection
¶¶$ 6
(
¶¶6 7
string
¶¶7 =
ConnectionString
¶¶> N
)
¶¶N O
{
ßß 	
return
®® 
new
®® 
SqlConnection
®® $
(
®®$ %
ConnectionString
®®% 5
)
®®5 6
;
®®6 7
}
©© 	
public
´´ 
static
´´ 
IDataParameter
´´ $
AddParameter
´´% 1
(
´´1 2

IDbCommand
´´2 <
Command
´´= D
,
´´D E
string
´´F L
ParmName
´´M U
,
´´U V
object
´´W ]
	ParmValue
´´^ g
,
´´g h
	SqlDbType
´´i r
ParmFieldType´´s Ä
)´´Ä Å
{
¨¨ 	
SqlParameter
≠≠ 
p
≠≠ 
;
≠≠ 
switch
ÆÆ 
(
ÆÆ 
ParmFieldType
ÆÆ !
)
ÆÆ! "
{
ØØ 
case
∞∞ 
	SqlDbType
∞∞ 
.
∞∞ 
VarChar
∞∞ &
:
∞∞& '
case
±± 
	SqlDbType
±± 
.
±± 
Text
±± #
:
±±# $
{
≤≤ 
p
≥≥ 
=
≥≥ 
new
≥≥ 
SqlParameter
≥≥  ,
(
≥≥, -
$str
≥≥- 0
+
≥≥1 2
ParmName
≥≥3 ;
,
≥≥; <
	SqlDbType
≥≥= F
.
≥≥F G
Text
≥≥G K
)
≥≥K L
;
≥≥L M
p
¥¥ 
.
¥¥ 
Value
¥¥ 
=
¥¥  !
	ParmValue
¥¥" +
;
¥¥+ ,
break
µµ 
;
µµ 
}
∂∂ 
case
∑∑ 
	SqlDbType
∑∑ 
.
∑∑ 
NText
∑∑ $
:
∑∑$ %
{
∏∏ 
p
ππ 
=
ππ 
new
ππ 
SqlParameter
ππ  ,
(
ππ, -
$str
ππ- 0
+
ππ1 2
ParmName
ππ3 ;
,
ππ; <
	SqlDbType
ππ= F
.
ππF G
NText
ππG L
)
ππL M
;
ππM N
p
∫∫ 
.
∫∫ 
Value
∫∫ 
=
∫∫  !
	ParmValue
∫∫" +
;
∫∫+ ,
break
ªª 
;
ªª 
}
ºº 
default
ΩΩ 
:
ΩΩ 
{
ææ 
p
øø 
=
øø 
new
øø 
SqlParameter
øø  ,
(
øø, -
$str
øø- 0
+
øø1 2
ParmName
øø3 ;
,
øø; <
	ParmValue
øø= F
)
øøF G
;
øøG H
break
¿¿ 
;
¿¿ 
}
¡¡ 
}
¬¬ 
if
ƒƒ 
(
ƒƒ 
	ParmValue
ƒƒ 
==
ƒƒ 
null
ƒƒ !
||
ƒƒ" $
	ParmValue
ƒƒ% .
.
ƒƒ. /
Equals
ƒƒ/ 5
(
ƒƒ5 6
string
ƒƒ6 <
.
ƒƒ< =
Empty
ƒƒ= B
)
ƒƒB C
)
ƒƒC D
{
≈≈ 
p
∆∆ 
.
∆∆ 
Value
∆∆ 
=
∆∆ 
DBNull
∆∆  
.
∆∆  !
Value
∆∆! &
;
∆∆& '
}
«« 
Command
…… 
.
…… 

Parameters
…… 
.
…… 
Add
…… "
(
……" #
p
……# $
)
……$ %
;
……% &
return
   
p
   
;
   
}
ÀÀ 	
}
ÃÃ 
public
ŒŒ 

class
ŒŒ 
DbParameter
ŒŒ 
{
œœ 
public
–– 
string
–– 
Name
–– 
{
–– 
get
––  
;
––  !
set
––" %
;
––% &
}
––' (
public
—— 
object
—— 
Value
—— 
{
—— 
get
—— !
;
——! "
set
——# &
;
——& '
}
——( )
public
““ 
	SqlDbType
““ 
	FieldType
““ "
{
““# $
get
““% (
;
““( )
set
““* -
;
““- .
}
““/ 0
public
”” 
int
”” 
Length
”” 
{
”” 
get
”” 
;
””  
set
””! $
;
””$ %
}
””& '
public
‘‘  
ParameterDirection
‘‘ !
	Direction
‘‘" +
{
‘‘, -
get
‘‘. 1
;
‘‘1 2
set
‘‘3 6
;
‘‘6 7
}
‘‘8 9
public
÷÷ 
DbParameter
÷÷ 
(
÷÷ 
string
÷÷ !
name
÷÷" &
,
÷÷& '
object
÷÷( .
value
÷÷/ 4
,
÷÷4 5
	SqlDbType
÷÷6 ?
	fieldType
÷÷@ I
,
÷÷I J
int
÷÷K N
length
÷÷O U
=
÷÷V W
$num
÷÷X Y
,
÷÷Y Z 
ParameterDirection
÷÷[ m
	direction
÷÷n w
=
÷÷x y!
ParameterDirection÷÷z å
.÷÷å ç
Input÷÷ç í
)÷÷í ì
{
◊◊ 	
Name
ÿÿ 
=
ÿÿ 
name
ÿÿ 
;
ÿÿ 
Value
ŸŸ 
=
ŸŸ 
value
ŸŸ 
;
ŸŸ 
	FieldType
⁄⁄ 
=
⁄⁄ 
	fieldType
⁄⁄ !
;
⁄⁄! "
Length
€€ 
=
€€ 
length
€€ 
;
€€ 
	Direction
‹‹ 
=
‹‹ 
	direction
‹‹ !
;
‹‹! "
}
›› 	
public
ﬂﬂ 
static
ﬂﬂ 
implicit
ﬂﬂ 
operator
ﬂﬂ '
DbParameter
ﬂﬂ( 3
(
ﬂﬂ3 4
SqlParameter
ﬂﬂ4 @
v
ﬂﬂA B
)
ﬂﬂB C
{
‡‡ 	
throw
‚‚ 
new
‚‚ %
NotImplementedException
‚‚ -
(
‚‚- .
)
‚‚. /
;
‚‚/ 0
}
„„ 	
}
‰‰ 
public
ÊÊ 

static
ÊÊ 
class
ÊÊ "
DataReaderExtensions
ÊÊ ,
{
ÁÁ 
public
ÓÓ 
static
ÓÓ 
List
ÓÓ 
<
ÓÓ 
T
ÓÓ 
>
ÓÓ 
	MapToList
ÓÓ '
<
ÓÓ' (
T
ÓÓ( )
>
ÓÓ) *
(
ÓÓ* +
this
ÓÓ+ /
SqlDataReader
ÓÓ0 =
dr
ÓÓ> @
)
ÓÓ@ A
where
ÓÓB G
T
ÓÓH I
:
ÓÓJ K
new
ÓÓL O
(
ÓÓO P
)
ÓÓP Q
{
ÔÔ 	
List
 
<
 
T
 
>
 
RetVal
 
=
 
null
 !
;
! "
var
ÒÒ 
Entity
ÒÒ 
=
ÒÒ 
typeof
ÒÒ 
(
ÒÒ  
T
ÒÒ  !
)
ÒÒ! "
;
ÒÒ" #
var
ÚÚ 
PropDict
ÚÚ 
=
ÚÚ 
new
ÚÚ 

Dictionary
ÚÚ )
<
ÚÚ) *
string
ÚÚ* 0
,
ÚÚ0 1
PropertyInfo
ÚÚ2 >
>
ÚÚ> ?
(
ÚÚ? @
)
ÚÚ@ A
;
ÚÚA B
if
ÙÙ 
(
ÙÙ 
dr
ÙÙ 
!=
ÙÙ 
null
ÙÙ 
&&
ÙÙ 
dr
ÙÙ  
.
ÙÙ  !
HasRows
ÙÙ! (
)
ÙÙ( )
{
ıı 
RetVal
ˆˆ 
=
ˆˆ 
new
ˆˆ 
List
ˆˆ !
<
ˆˆ! "
T
ˆˆ" #
>
ˆˆ# $
(
ˆˆ$ %
)
ˆˆ% &
;
ˆˆ& '
var
˜˜ 
Props
˜˜ 
=
˜˜ 
Entity
˜˜ "
.
˜˜" #
GetProperties
˜˜# 0
(
˜˜0 1
BindingFlags
˜˜1 =
.
˜˜= >
Instance
˜˜> F
|
˜˜G H
BindingFlags
˜˜I U
.
˜˜U V
Public
˜˜V \
)
˜˜\ ]
;
˜˜] ^
PropDict
¯¯ 
=
¯¯ 
Props
¯¯  
.
¯¯  !
ToDictionary
¯¯! -
(
¯¯- .
p
¯¯. /
=>
¯¯0 2
p
¯¯3 4
.
¯¯4 5
Name
¯¯5 9
.
¯¯9 :
ToUpper
¯¯: A
(
¯¯A B
)
¯¯B C
,
¯¯C D
p
¯¯E F
=>
¯¯G I
p
¯¯J K
)
¯¯K L
;
¯¯L M
while
˘˘ 
(
˘˘ 
dr
˘˘ 
.
˘˘ 
Read
˘˘ 
(
˘˘ 
)
˘˘  
)
˘˘  !
{
˙˙ 
T
˚˚ 
	newObject
˚˚ 
=
˚˚  !
new
˚˚" %
T
˚˚& '
(
˚˚' (
)
˚˚( )
;
˚˚) *
for
¸¸ 
(
¸¸ 
int
¸¸ 
Index
¸¸ "
=
¸¸# $
$num
¸¸% &
;
¸¸& '
Index
¸¸( -
<
¸¸. /
dr
¸¸0 2
.
¸¸2 3

FieldCount
¸¸3 =
;
¸¸= >
Index
¸¸? D
++
¸¸D F
)
¸¸F G
{
˝˝ 
if
˛˛ 
(
˛˛ 
PropDict
˛˛ $
.
˛˛$ %
ContainsKey
˛˛% 0
(
˛˛0 1
dr
˛˛1 3
.
˛˛3 4
GetName
˛˛4 ;
(
˛˛; <
Index
˛˛< A
)
˛˛A B
.
˛˛B C
ToUpper
˛˛C J
(
˛˛J K
)
˛˛K L
)
˛˛L M
)
˛˛M N
{
ˇˇ 
var
ÄÄ 
Info
ÄÄ  $
=
ÄÄ% &
PropDict
ÄÄ' /
[
ÄÄ/ 0
dr
ÄÄ0 2
.
ÄÄ2 3
GetName
ÄÄ3 :
(
ÄÄ: ;
Index
ÄÄ; @
)
ÄÄ@ A
.
ÄÄA B
ToUpper
ÄÄB I
(
ÄÄI J
)
ÄÄJ K
]
ÄÄK L
;
ÄÄL M
if
ÅÅ 
(
ÅÅ  
(
ÅÅ  !
Info
ÅÅ! %
!=
ÅÅ& (
null
ÅÅ) -
)
ÅÅ- .
&&
ÅÅ/ 1
Info
ÅÅ2 6
.
ÅÅ6 7
CanWrite
ÅÅ7 ?
)
ÅÅ? @
{
ÇÇ 
var
ÉÉ  #
Val
ÉÉ$ '
=
ÉÉ( )
dr
ÉÉ* ,
.
ÉÉ, -
GetValue
ÉÉ- 5
(
ÉÉ5 6
Index
ÉÉ6 ;
)
ÉÉ; <
;
ÉÉ< =
Info
ÑÑ  $
.
ÑÑ$ %
SetValue
ÑÑ% -
(
ÑÑ- .
	newObject
ÑÑ. 7
,
ÑÑ7 8
(
ÑÑ9 :
Val
ÑÑ: =
==
ÑÑ> @
DBNull
ÑÑA G
.
ÑÑG H
Value
ÑÑH M
)
ÑÑM N
?
ÑÑO P
null
ÑÑQ U
:
ÑÑV W
Val
ÑÑX [
,
ÑÑ[ \
null
ÑÑ] a
)
ÑÑa b
;
ÑÑb c
}
ÖÖ 
}
ÜÜ 
}
áá 
RetVal
àà 
.
àà 
Add
àà 
(
àà 
	newObject
àà (
)
àà( )
;
àà) *
}
ââ 
}
ää 
else
ãã 
if
ãã 
(
ãã 
dr
ãã 
!=
ãã 
null
ãã 
)
ãã  
{
åå 
RetVal
çç 
=
çç 
new
çç 
List
çç !
<
çç! "
T
çç" #
>
çç# $
(
çç$ %
)
çç% &
;
çç& '
}
éé 
else
èè 
if
èè 
(
èè 
dr
èè 
!=
èè 
null
èè 
)
èè  
RetVal
êê 
=
êê 
new
êê 
List
êê !
<
êê! "
T
êê" #
>
êê# $
(
êê$ %
)
êê% &
;
êê& '
return
íí 
RetVal
íí 
;
íí 
}
ìì 	
public
öö 
static
öö 
T
öö 
MapToSingle
öö #
<
öö# $
T
öö$ %
>
öö% &
(
öö& '
this
öö' +
SqlDataReader
öö, 9
dr
öö: <
)
öö< =
where
öö> C
T
ööD E
:
ööF G
new
ööH K
(
ööK L
)
ööL M
{
õõ 	
T
úú 
RetVal
úú 
=
úú 
new
úú 
T
úú 
(
úú 
)
úú 
;
úú 
var
ùù 
Entity
ùù 
=
ùù 
typeof
ùù 
(
ùù  
T
ùù  !
)
ùù! "
;
ùù" #
var
ûû 
PropDict
ûû 
=
ûû 
new
ûû 

Dictionary
ûû )
<
ûû) *
string
ûû* 0
,
ûû0 1
PropertyInfo
ûû2 >
>
ûû> ?
(
ûû? @
)
ûû@ A
;
ûûA B
if
†† 
(
†† 
dr
†† 
!=
†† 
null
†† 
&&
†† 
dr
††  
.
††  !
HasRows
††! (
)
††( )
{
°° 
var
¢¢ 
Props
¢¢ 
=
¢¢ 
Entity
¢¢ "
.
¢¢" #
GetProperties
¢¢# 0
(
¢¢0 1
BindingFlags
¢¢1 =
.
¢¢= >
Instance
¢¢> F
|
¢¢G H
BindingFlags
¢¢I U
.
¢¢U V
Public
¢¢V \
)
¢¢\ ]
;
¢¢] ^
PropDict
££ 
=
££ 
Props
££  
.
££  !
ToDictionary
££! -
(
££- .
p
££. /
=>
££0 2
p
££3 4
.
££4 5
Name
££5 9
.
££9 :
ToUpper
££: A
(
££A B
)
££B C
,
££C D
p
££E F
=>
££G I
p
££J K
)
££K L
;
££L M
while
§§ 
(
§§ 
dr
§§ 
.
§§ 
Read
§§ 
(
§§ 
)
§§  
)
§§  !
{
•• 
for
¶¶ 
(
¶¶ 
int
¶¶ 
Index
¶¶ "
=
¶¶# $
$num
¶¶% &
;
¶¶& '
Index
¶¶( -
<
¶¶. /
dr
¶¶0 2
.
¶¶2 3

FieldCount
¶¶3 =
;
¶¶= >
Index
¶¶? D
++
¶¶D F
)
¶¶F G
{
ßß 
if
®® 
(
®® 
PropDict
®® $
.
®®$ %
ContainsKey
®®% 0
(
®®0 1
dr
®®1 3
.
®®3 4
GetName
®®4 ;
(
®®; <
Index
®®< A
)
®®A B
.
®®B C
ToUpper
®®C J
(
®®J K
)
®®K L
)
®®L M
)
®®M N
{
©© 
var
™™ 
Info
™™  $
=
™™% &
PropDict
™™' /
[
™™/ 0
dr
™™0 2
.
™™2 3
GetName
™™3 :
(
™™: ;
Index
™™; @
)
™™@ A
.
™™A B
ToUpper
™™B I
(
™™I J
)
™™J K
]
™™K L
;
™™L M
if
´´ 
(
´´  
(
´´  !
Info
´´! %
!=
´´& (
null
´´) -
)
´´- .
&&
´´/ 1
Info
´´2 6
.
´´6 7
CanWrite
´´7 ?
)
´´? @
{
¨¨ 
var
≠≠  #
Val
≠≠$ '
=
≠≠( )
dr
≠≠* ,
.
≠≠, -
GetValue
≠≠- 5
(
≠≠5 6
Index
≠≠6 ;
)
≠≠; <
;
≠≠< =
Info
ÆÆ  $
.
ÆÆ$ %
SetValue
ÆÆ% -
(
ÆÆ- .
RetVal
ÆÆ. 4
,
ÆÆ4 5
(
ÆÆ6 7
Val
ÆÆ7 :
==
ÆÆ; =
DBNull
ÆÆ> D
.
ÆÆD E
Value
ÆÆE J
)
ÆÆJ K
?
ÆÆL M
null
ÆÆN R
:
ÆÆS T
Val
ÆÆU X
,
ÆÆX Y
null
ÆÆZ ^
)
ÆÆ^ _
;
ÆÆ_ `
}
ØØ 
}
∞∞ 
}
±± 
}
≤≤ 
}
≥≥ 
return
¥¥ 
RetVal
¥¥ 
;
¥¥ 
}
µµ 	
}
∂∂ 
}∏∏ «ù
:D:\EltizamLive\Eltizam.Data.DataAccess\Helper\SqlHelper.cs
	namespace 	
Eltizam
 
. 
Data 
. 

DataAccess !
.! "
Helper" (
{   
internal%% 
sealed%% 
class%% 
	SqlHelper%% #
{&& 
private)) 
string)) 
EltizamDBConn)) $
=))% &
$str))' 6
;))6 7
private.. 
	SqlHelper.. 
(.. 
).. 
{.. 
}.. 
private<< 
static<< 
void<< 
AttachParameters<< ,
(<<, -

SqlCommand<<- 7
command<<8 ?
,<<? @
SqlParameter<<A M
[<<M N
]<<N O
commandParameters<<P a
)<<a b
{== 	
if>> 
(>> 
command>> 
==>> 
null>> 
)>>  
throw>>! &
new>>' *!
ArgumentNullException>>+ @
(>>@ A
$str>>A J
)>>J K
;>>K L
if?? 
(?? 
commandParameters?? !
!=??" $
null??% )
)??) *
{@@ 
foreachAA 
(AA 
SqlParameterAA %
pAA& '
inAA( *
commandParametersAA+ <
)AA< =
{BB 
ifCC 
(CC 
pCC 
!=CC 
nullCC !
)CC! "
{DD 
ifFF 
(FF 
(FF 
pFF 
.FF 
	DirectionFF (
==FF) +
ParameterDirectionFF, >
.FF> ?
InputOutputFF? J
||FFK M
pGG 
.GG 
	DirectionGG '
==GG( *
ParameterDirectionGG+ =
.GG= >
InputGG> C
)GGC D
&&GGE G
pHH 
.HH 
ValueHH #
==HH$ &
nullHH' +
)HH+ ,
{II 
pJJ 
.JJ 
ValueJJ #
=JJ$ %
DBNullJJ& ,
.JJ, -
ValueJJ- 2
;JJ2 3
}KK 
commandLL 
.LL  

ParametersLL  *
.LL* +
AddLL+ .
(LL. /
pLL/ 0
)LL0 1
;LL1 2
}MM 
}NN 
}OO 
}PP 	
privateWW 
staticWW 
voidWW !
AssignParameterValuesWW 1
(WW1 2
SqlParameterWW2 >
[WW> ?
]WW? @
commandParametersWWA R
,WWR S
DataRowWWT [
dataRowWW\ c
)WWc d
{XX 	
ifYY 
(YY 
commandParametersYY !
==YY" $
nullYY% )
||YY* ,
dataRowYY- 4
==YY5 7
nullYY8 <
)YY< =
{ZZ 
return\\ 
;\\ 
}]] 
int__ 
i__ 
=__ 
$num__ 
;__ 
foreachaa 
(aa 
SqlParameteraa !
commandParameteraa" 2
inaa3 5
commandParametersaa6 G
)aaG H
{bb 
ifdd 
(dd 
commandParameterdd $
.dd$ %
ParameterNamedd% 2
==dd3 5
nulldd6 :
||dd; =
commandParameteree $
.ee$ %
ParameterNameee% 2
.ee2 3
Lengthee3 9
<=ee: <
$numee= >
)ee> ?
throwff 
newff 
	Exceptionff '
(ff' (
stringgg 
.gg 
Formatgg %
(gg% &
$str	hh ï
,
hhï ñ
iii 
,ii 
commandParameterii /
.ii/ 0
ParameterNameii0 =
)ii= >
)ii> ?
;ii? @
ifjj 
(jj 
dataRowjj 
.jj 
Tablejj !
.jj! "
Columnsjj" )
.jj) *
IndexOfjj* 1
(jj1 2
commandParameterjj2 B
.jjB C
ParameterNamejjC P
.jjP Q
	SubstringjjQ Z
(jjZ [
$numjj[ \
)jj\ ]
)jj] ^
!=jj_ a
-jjb c
$numjjc d
)jjd e
commandParameterkk $
.kk$ %
Valuekk% *
=kk+ ,
dataRowkk- 4
[kk4 5
commandParameterkk5 E
.kkE F
ParameterNamekkF S
.kkS T
	SubstringkkT ]
(kk] ^
$numkk^ _
)kk_ `
]kk` a
;kka b
ill 
++ll 
;ll 
}mm 
}nn 	
privateuu 
staticuu 
voiduu !
AssignParameterValuesuu 1
(uu1 2
SqlParameteruu2 >
[uu> ?
]uu? @
commandParametersuuA R
,uuR S
objectuuT Z
[uuZ [
]uu[ \
parameterValuesuu] l
)uul m
{vv 	
ifww 
(ww 
commandParametersww !
==ww" $
nullww% )
||ww* ,
parameterValuesww- <
==ww= ?
nullww@ D
)wwD E
{xx 
returnzz 
;zz 
}{{ 
if~~ 
(~~ 
commandParameters~~ !
.~~! "
Length~~" (
!=~~) +
parameterValues~~, ;
.~~; <
Length~~< B
)~~B C
{ 
throw
ÄÄ 
new
ÄÄ 
ArgumentException
ÄÄ +
(
ÄÄ+ ,
$str
ÄÄ, c
)
ÄÄc d
;
ÄÄd e
}
ÅÅ 
for
ÖÖ 
(
ÖÖ 
int
ÖÖ 
i
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
,
ÖÖ 
j
ÖÖ 
=
ÖÖ 
commandParameters
ÖÖ  1
.
ÖÖ1 2
Length
ÖÖ2 8
;
ÖÖ8 9
i
ÖÖ: ;
<
ÖÖ< =
j
ÖÖ> ?
;
ÖÖ? @
i
ÖÖA B
++
ÖÖB D
)
ÖÖD E
{
ÜÜ 
if
àà 
(
àà 
parameterValues
àà #
[
àà# $
i
àà$ %
]
àà% &
is
àà' )
IDbDataParameter
àà* :
)
àà: ;
{
ââ 
IDbDataParameter
ää $
paramInstance
ää% 2
=
ää3 4
(
ää5 6
IDbDataParameter
ää6 F
)
ääF G
parameterValues
ääG V
[
ääV W
i
ääW X
]
ääX Y
;
ääY Z
if
ãã 
(
ãã 
paramInstance
ãã %
.
ãã% &
Value
ãã& +
==
ãã, .
null
ãã/ 3
)
ãã3 4
{
åå 
commandParameters
çç )
[
çç) *
i
çç* +
]
çç+ ,
.
çç, -
Value
çç- 2
=
çç3 4
DBNull
çç5 ;
.
çç; <
Value
çç< A
;
ççA B
}
éé 
else
èè 
{
êê 
commandParameters
ëë )
[
ëë) *
i
ëë* +
]
ëë+ ,
.
ëë, -
Value
ëë- 2
=
ëë3 4
paramInstance
ëë5 B
.
ëëB C
Value
ëëC H
;
ëëH I
}
íí 
}
ìì 
else
îî 
if
îî 
(
îî 
parameterValues
îî (
[
îî( )
i
îî) *
]
îî* +
==
îî, .
null
îî/ 3
)
îî3 4
{
ïï 
commandParameters
ññ %
[
ññ% &
i
ññ& '
]
ññ' (
.
ññ( )
Value
ññ) .
=
ññ/ 0
DBNull
ññ1 7
.
ññ7 8
Value
ññ8 =
;
ññ= >
}
óó 
else
òò 
{
ôô 
commandParameters
öö %
[
öö% &
i
öö& '
]
öö' (
.
öö( )
Value
öö) .
=
öö/ 0
parameterValues
öö1 @
[
öö@ A
i
ööA B
]
ööB C
;
ööC D
}
õõ 
}
úú 
}
ùù 	
internal
üü 
static
üü 
void
üü $
clearSQLPoolConnection
üü 3
(
üü3 4
)
üü4 5
{
†† 	
SqlConnection
°° 
.
°° 
ClearAllPools
°° '
(
°°' (
)
°°( )
;
°°) *
}
¢¢ 	
private
©© 
static
©© 
void
©© #
UpdateParameterValues
©© 1
(
©©1 2
SqlParameter
©©2 >
[
©©> ?
]
©©? @
commandParameters
©©A R
,
©©R S
object
©©T Z
[
©©Z [
]
©©[ \
parameterValues
©©] l
)
©©l m
{
™™ 	
if
´´ 
(
´´ 
commandParameters
´´ !
==
´´" $
null
´´% )
||
´´* ,
parameterValues
´´- <
==
´´= ?
null
´´@ D
)
´´D E
{
¨¨ 
return
ÆÆ 
;
ÆÆ 
}
ØØ 
if
≤≤ 
(
≤≤ 
commandParameters
≤≤ !
.
≤≤! "
Length
≤≤" (
!=
≤≤) +
parameterValues
≤≤, ;
.
≤≤; <
Length
≤≤< B
)
≤≤B C
{
≥≥ 
throw
¥¥ 
new
¥¥ 
ArgumentException
¥¥ +
(
¥¥+ ,
$str
¥¥, c
)
¥¥c d
;
¥¥d e
}
µµ 
for
ππ 
(
ππ 
int
ππ 
i
ππ 
=
ππ 
$num
ππ 
,
ππ 
j
ππ 
=
ππ 
commandParameters
ππ  1
.
ππ1 2
Length
ππ2 8
;
ππ8 9
i
ππ: ;
<
ππ< =
j
ππ> ?
;
ππ? @
i
ππA B
++
ππB D
)
ππD E
{
∫∫ 
if
ºº 
(
ºº 
commandParameters
ºº %
[
ºº% &
i
ºº& '
]
ºº' (
.
ºº( )
	Direction
ºº) 2
==
ºº3 5 
ParameterDirection
ºº6 H
.
ººH I
ReturnValue
ººI T
)
ººT U
{
ΩΩ 
parameterValues
ææ #
[
ææ# $
i
ææ$ %
]
ææ% &
=
ææ' (
commandParameters
ææ) :
[
ææ: ;
i
ææ; <
]
ææ< =
.
ææ= >
Value
ææ> C
;
ææC D
}
øø 
if
¡¡ 
(
¡¡ 
commandParameters
¡¡ %
[
¡¡% &
i
¡¡& '
]
¡¡' (
.
¡¡( )
	Direction
¡¡) 2
==
¡¡3 5 
ParameterDirection
¡¡6 H
.
¡¡H I
InputOutput
¡¡I T
)
¡¡T U
parameterValues
¬¬ #
[
¬¬# $
i
¬¬$ %
]
¬¬% &
=
¬¬' (
commandParameters
¬¬) :
[
¬¬: ;
i
¬¬; <
]
¬¬< =
.
¬¬= >
Value
¬¬> C
;
¬¬C D
}
√√ 
}
ƒƒ 	
private
—— 
static
—— 
void
—— 
PrepareCommand
—— *
(
——* +

SqlCommand
——+ 5
command
——6 =
,
——= >
SqlConnection
——? L

connection
——M W
,
——W X
SqlTransaction
——Y g
transaction
——h s
,
——s t
CommandType——u Ä
commandType——Å å
,——å ç
string——é î
commandText——ï †
,——† °
SqlParameter——¢ Æ
[——Æ Ø
]——Ø ∞!
commandParameters——± ¬
,——¬ √
out——ƒ «
bool——» Ã#
mustCloseConnection——Õ ‡
)——‡ ·
{
““ 	
if
”” 
(
”” 
command
”” 
==
”” 
null
”” 
)
””  
throw
””! &
new
””' *#
ArgumentNullException
””+ @
(
””@ A
$str
””A J
)
””J K
;
””K L
if
‘‘ 
(
‘‘ 
commandText
‘‘ 
==
‘‘ 
null
‘‘ #
||
‘‘$ &
commandText
‘‘' 2
.
‘‘2 3
Length
‘‘3 9
==
‘‘: <
$num
‘‘= >
)
‘‘> ?
throw
‘‘@ E
new
‘‘F I#
ArgumentNullException
‘‘J _
(
‘‘_ `
$str
‘‘` m
)
‘‘m n
;
‘‘n o
if
◊◊ 
(
◊◊ 

connection
◊◊ 
.
◊◊ 
State
◊◊  
!=
◊◊! #
ConnectionState
◊◊$ 3
.
◊◊3 4
Open
◊◊4 8
)
◊◊8 9
{
ÿÿ !
mustCloseConnection
ŸŸ #
=
ŸŸ$ %
true
ŸŸ& *
;
ŸŸ* +

connection
⁄⁄ 
.
⁄⁄ 
Open
⁄⁄ 
(
⁄⁄  
)
⁄⁄  !
;
⁄⁄! "
}
€€ 
else
‹‹ 
{
›› !
mustCloseConnection
ﬁﬁ #
=
ﬁﬁ$ %
false
ﬁﬁ& +
;
ﬁﬁ+ ,
}
ﬂﬂ 
command
‚‚ 
.
‚‚ 

Connection
‚‚ 
=
‚‚  

connection
‚‚! +
;
‚‚+ ,
command
ÂÂ 
.
ÂÂ 
CommandText
ÂÂ 
=
ÂÂ  !
commandText
ÂÂ" -
;
ÂÂ- .
if
ËË 
(
ËË 
transaction
ËË 
!=
ËË 
null
ËË #
)
ËË# $
{
ÈÈ 
if
ÍÍ 
(
ÍÍ 
transaction
ÍÍ 
.
ÍÍ  

Connection
ÍÍ  *
==
ÍÍ+ -
null
ÍÍ. 2
)
ÍÍ2 3
throw
ÍÍ4 9
new
ÍÍ: =
ArgumentException
ÍÍ> O
(
ÍÍO P
$strÍÍP °
,ÍÍ° ¢
$strÍÍ£ ∞
)ÍÍ∞ ±
;ÍÍ± ≤
command
ÎÎ 
.
ÎÎ 
Transaction
ÎÎ #
=
ÎÎ$ %
transaction
ÎÎ& 1
;
ÎÎ1 2
}
ÏÏ 
command
ÔÔ 
.
ÔÔ 
CommandType
ÔÔ 
=
ÔÔ  !
commandType
ÔÔ" -
;
ÔÔ- .
if
ÚÚ 
(
ÚÚ 
commandParameters
ÚÚ !
!=
ÚÚ" $
null
ÚÚ% )
)
ÚÚ) *
{
ÛÛ 
AttachParameters
ÙÙ  
(
ÙÙ  !
command
ÙÙ! (
,
ÙÙ( )
commandParameters
ÙÙ* ;
)
ÙÙ; <
;
ÙÙ< =
}
ıı 
return
ˆˆ 
;
ˆˆ 
}
˜˜ 	
internal
ââ 
static
ââ 
int
ââ 
ExecuteNonQuery
ââ +
(
ââ+ ,
string
ââ, 2
connectionString
ââ3 C
,
ââC D
CommandType
ââE P
commandType
ââQ \
,
ââ\ ]
string
ââ^ d
commandText
ââe p
)
ââp q
{
ää 	
return
åå 
ExecuteNonQuery
åå "
(
åå" #
connectionString
åå# 3
,
åå3 4
commandType
åå5 @
,
åå@ A
commandText
ååB M
,
ååM N
null
ååO S
)
ååS T
;
ååT U
}
çç 	
internal
èè 
static
èè 
int
èè 
ExecuteNonQuery
èè +
(
èè+ ,
string
èè, 2
connectionString
èè3 C
,
èèC D
string
èèE K
commandText
èèL W
,
èèW X
CommandType
èèY d
commandType
èèe p
)
èèp q
{
êê 	
return
íí 
ExecuteNonQuery
íí "
(
íí" #
connectionString
íí# 3
,
íí3 4
commandType
íí5 @
,
íí@ A
commandText
ííB M
,
ííM N
null
ííO S
)
ííS T
;
ííT U
}
ìì 	
internal
¢¢ 
static
¢¢ 
int
¢¢ 
ExecuteNonQuery
¢¢ +
(
¢¢+ ,
string
¢¢, 2
connectionString
¢¢3 C
,
¢¢C D
CommandType
¢¢E P
commandType
¢¢Q \
,
¢¢\ ]
string
¢¢^ d
commandText
¢¢e p
,
¢¢p q
params
¢¢r x
SqlParameter¢¢y Ö
[¢¢Ö Ü
]¢¢Ü á!
commandParameters¢¢à ô
)¢¢ô ö
{
££ 	
if
§§ 
(
§§ 
connectionString
§§  
==
§§! #
null
§§$ (
||
§§) +
connectionString
§§, <
.
§§< =
Length
§§= C
==
§§D F
$num
§§G H
)
§§H I
throw
§§J O
new
§§P S#
ArgumentNullException
§§T i
(
§§i j
$str
§§j |
)
§§| }
;
§§} ~$
clearSQLPoolConnection
¶¶ "
(
¶¶" #
)
¶¶# $
;
¶¶$ %
using
®® 
(
®® 
SqlConnection
®®  

connection
®®! +
=
®®, -
new
®®. 1
SqlConnection
®®2 ?
(
®®? @
connectionString
®®@ P
)
®®P Q
)
®®Q R
{
©© 

connection
™™ 
.
™™ 
Open
™™ 
(
™™  
)
™™  !
;
™™! "
return
≠≠ 
ExecuteNonQuery
≠≠ &
(
≠≠& '

connection
≠≠' 1
,
≠≠1 2
commandType
≠≠3 >
,
≠≠> ?
commandText
≠≠@ K
,
≠≠K L
commandParameters
≠≠M ^
)
≠≠^ _
;
≠≠_ `
}
ÆÆ 
}
ØØ 	
internal
±± 
static
±± 
int
±± 
ExecuteNonQuery
±± +
(
±±+ ,
string
±±, 2
connectionString
±±3 C
,
±±C D
string
±±E K
commandText
±±L W
,
±±W X
CommandType
±±Y d
commandType
±±e p
,
±±p q
params
±±r x
SqlParameter±±y Ö
[±±Ö Ü
]±±Ü á!
commandParameters±±à ô
)±±ô ö
{
≤≤ 	
if
≥≥ 
(
≥≥ 
connectionString
≥≥  
==
≥≥! #
null
≥≥$ (
||
≥≥) +
connectionString
≥≥, <
.
≥≥< =
Length
≥≥= C
==
≥≥D F
$num
≥≥G H
)
≥≥H I
throw
≥≥J O
new
≥≥P S#
ArgumentNullException
≥≥T i
(
≥≥i j
$str
≥≥j |
)
≥≥| }
;
≥≥} ~$
clearSQLPoolConnection
µµ "
(
µµ" #
)
µµ# $
;
µµ$ %
using
∑∑ 
(
∑∑ 
SqlConnection
∑∑  

connection
∑∑! +
=
∑∑, -
new
∑∑. 1
SqlConnection
∑∑2 ?
(
∑∑? @
connectionString
∑∑@ P
)
∑∑P Q
)
∑∑Q R
{
∏∏ 

connection
ππ 
.
ππ 
Open
ππ 
(
ππ  
)
ππ  !
;
ππ! "
return
ºº 
ExecuteNonQuery
ºº &
(
ºº& '

connection
ºº' 1
,
ºº1 2
commandType
ºº3 >
,
ºº> ?
commandText
ºº@ K
,
ººK L
commandParameters
ººM ^
)
ºº^ _
;
ºº_ `
}
ΩΩ 
}
ææ 	
internal
œœ 
static
œœ 
int
œœ 
ExecuteNonQuery
œœ +
(
œœ+ ,
string
œœ, 2
connectionString
œœ3 C
,
œœC D
string
œœE K
spName
œœL R
,
œœR S
params
œœT Z
object
œœ[ a
[
œœa b
]
œœb c
parameterValues
œœd s
)
œœs t
{
–– 	
int
—— 
	intReturn
—— 
;
—— 
if
““ 
(
““ 
connectionString
““  
==
““! #
null
““$ (
||
““) +
connectionString
““, <
.
““< =
Length
““= C
==
““D F
$num
““G H
)
““H I
throw
““J O
new
““P S#
ArgumentNullException
““T i
(
““i j
$str
““j |
)
““| }
;
““} ~
if
”” 
(
”” 
spName
”” 
==
”” 
null
”” 
||
”” !
spName
””" (
.
””( )
Length
””) /
==
””0 2
$num
””3 4
)
””4 5
throw
””6 ;
new
””< ?#
ArgumentNullException
””@ U
(
””U V
$str
””V ^
)
””^ _
;
””_ `
if
÷÷ 
(
÷÷ 
parameterValues
÷÷ 
!=
÷÷  "
null
÷÷# '
&&
÷÷( *
parameterValues
÷÷+ :
.
÷÷: ;
Length
÷÷; A
>
÷÷B C
$num
÷÷D E
)
÷÷E F
{
◊◊ 
SqlParameter
ŸŸ 
[
ŸŸ 
]
ŸŸ 
commandParameters
ŸŸ 0
=
ŸŸ1 2%
SqlHelperParameterCache
ŸŸ3 J
.
ŸŸJ K
GetSpParameterSet
ŸŸK \
(
ŸŸ\ ]
connectionString
ŸŸ] m
,
ŸŸm n
spName
ŸŸo u
,
ŸŸu v
true
ŸŸw {
)
ŸŸ{ |
;
ŸŸ| }#
AssignParameterValues
‹‹ %
(
‹‹% &
commandParameters
‹‹& 7
,
‹‹7 8
parameterValues
‹‹9 H
)
‹‹H I
;
‹‹I J
	intReturn
‡‡ 
=
‡‡ 
ExecuteNonQuery
‡‡ +
(
‡‡+ ,
connectionString
‡‡, <
,
‡‡< =
CommandType
‡‡> I
.
‡‡I J
StoredProcedure
‡‡J Y
,
‡‡Y Z
spName
‡‡[ a
,
‡‡a b
commandParameters
‡‡c t
)
‡‡t u
;
‡‡u v#
UpdateParameterValues
„„ %
(
„„% &
commandParameters
„„& 7
,
„„7 8
parameterValues
„„9 H
)
„„H I
;
„„I J
return
‰‰ 
	intReturn
‰‰  
;
‰‰  !
}
ÂÂ 
else
ÊÊ 
{
ÁÁ 
return
ÈÈ 
ExecuteNonQuery
ÈÈ &
(
ÈÈ& '
connectionString
ÈÈ' 7
,
ÈÈ7 8
CommandType
ÈÈ9 D
.
ÈÈD E
StoredProcedure
ÈÈE T
,
ÈÈT U
spName
ÈÈV \
)
ÈÈ\ ]
;
ÈÈ] ^
}
ÍÍ 
}
ÎÎ 	
internal
¯¯ 
static
¯¯ 
int
¯¯ 
ExecuteNonQuery
¯¯ +
(
¯¯+ ,
SqlConnection
¯¯, 9

connection
¯¯: D
,
¯¯D E
CommandType
¯¯F Q
commandType
¯¯R ]
,
¯¯] ^
string
¯¯_ e
commandText
¯¯f q
)
¯¯q r
{
˘˘ 	
return
˚˚ 
ExecuteNonQuery
˚˚ "
(
˚˚" #

connection
˚˚# -
,
˚˚- .
commandType
˚˚/ :
,
˚˚: ;
commandText
˚˚< G
,
˚˚G H
null
˚˚I M
)
˚˚M N
;
˚˚N O
}
¸¸ 	
internal
ãã 
static
ãã 
int
ãã 
ExecuteNonQuery
ãã +
(
ãã+ ,
SqlConnection
ãã, 9

connection
ãã: D
,
ããD E
CommandType
ããF Q
commandType
ããR ]
,
ãã] ^
string
ãã_ e
commandText
ããf q
,
ããq r
params
ããs y
SqlParameterããz Ü
[ããÜ á
]ããá à!
commandParametersããâ ö
)ããö õ
{
åå 	
if
çç 
(
çç 

connection
çç 
==
çç 
null
çç "
)
çç" #
throw
çç$ )
new
çç* -#
ArgumentNullException
çç. C
(
ççC D
$str
ççD P
)
ççP Q
;
ççQ R

SqlCommand
êê 
cmd
êê 
=
êê 
new
êê  

SqlCommand
êê! +
(
êê+ ,
)
êê, -
;
êê- .
bool
ëë !
mustCloseConnection
ëë $
=
ëë% &
false
ëë' ,
;
ëë, -
PrepareCommand
íí 
(
íí 
cmd
íí 
,
íí 

connection
íí  *
,
íí* +
null
íí, 0
,
íí0 1
commandType
íí2 =
,
íí= >
commandText
íí? J
,
ííJ K
commandParameters
ííL ]
,
íí] ^
out
íí_ b!
mustCloseConnection
ííc v
)
íív w
;
ííw x
int
ïï 
retval
ïï 
=
ïï 
cmd
ïï 
.
ïï 
ExecuteNonQuery
ïï ,
(
ïï, -
)
ïï- .
;
ïï. /
cmd
òò 
.
òò 

Parameters
òò 
.
òò 
Clear
òò  
(
òò  !
)
òò! "
;
òò" #
if
ôô 
(
ôô !
mustCloseConnection
ôô #
)
ôô# $

connection
öö 
.
öö 
Close
öö  
(
öö  !
)
öö! "
;
öö" #
return
õõ 
retval
õõ 
;
õõ 
}
úú 	
internal
≠≠ 
static
≠≠ 
int
≠≠ 
ExecuteNonQuery
≠≠ +
(
≠≠+ ,
SqlConnection
≠≠, 9

connection
≠≠: D
,
≠≠D E
string
≠≠F L
spName
≠≠M S
,
≠≠S T
params
≠≠U [
object
≠≠\ b
[
≠≠b c
]
≠≠c d
parameterValues
≠≠e t
)
≠≠t u
{
ÆÆ 	
if
ØØ 
(
ØØ 

connection
ØØ 
==
ØØ 
null
ØØ "
)
ØØ" #
throw
ØØ$ )
new
ØØ* -#
ArgumentNullException
ØØ. C
(
ØØC D
$str
ØØD P
)
ØØP Q
;
ØØQ R
if
∞∞ 
(
∞∞ 
spName
∞∞ 
==
∞∞ 
null
∞∞ 
||
∞∞ !
spName
∞∞" (
.
∞∞( )
Length
∞∞) /
==
∞∞0 2
$num
∞∞3 4
)
∞∞4 5
throw
∞∞6 ;
new
∞∞< ?#
ArgumentNullException
∞∞@ U
(
∞∞U V
$str
∞∞V ^
)
∞∞^ _
;
∞∞_ `
if
≥≥ 
(
≥≥ 
parameterValues
≥≥ 
!=
≥≥  "
null
≥≥# '
&&
≥≥( *
parameterValues
≥≥+ :
.
≥≥: ;
Length
≥≥; A
>
≥≥B C
$num
≥≥D E
)
≥≥E F
{
¥¥ 
SqlParameter
∂∂ 
[
∂∂ 
]
∂∂ 
commandParameters
∂∂ 0
=
∂∂1 2%
SqlHelperParameterCache
∂∂3 J
.
∂∂J K
GetSpParameterSet
∂∂K \
(
∂∂\ ]

connection
∂∂] g
,
∂∂g h
spName
∂∂i o
)
∂∂o p
;
∂∂p q#
AssignParameterValues
ππ %
(
ππ% &
commandParameters
ππ& 7
,
ππ7 8
parameterValues
ππ9 H
)
ππH I
;
ππI J
return
ºº 
ExecuteNonQuery
ºº &
(
ºº& '

connection
ºº' 1
,
ºº1 2
CommandType
ºº3 >
.
ºº> ?
StoredProcedure
ºº? N
,
ººN O
spName
ººP V
,
ººV W
commandParameters
ººX i
)
ººi j
;
ººj k
}
ΩΩ 
else
ææ 
{
øø 
return
¡¡ 
ExecuteNonQuery
¡¡ &
(
¡¡& '

connection
¡¡' 1
,
¡¡1 2
CommandType
¡¡3 >
.
¡¡> ?
StoredProcedure
¡¡? N
,
¡¡N O
spName
¡¡P V
)
¡¡V W
;
¡¡W X
}
¬¬ 
}
√√ 	
internal
–– 
static
–– 
int
–– 
ExecuteNonQuery
–– +
(
––+ ,
SqlTransaction
––, :
transaction
––; F
,
––F G
CommandType
––H S
commandType
––T _
,
––_ `
string
––a g
commandText
––h s
)
––s t
{
—— 	
return
”” 
ExecuteNonQuery
”” "
(
””" #
transaction
””# .
,
””. /
commandType
””0 ;
,
””; <
commandText
””= H
,
””H I
null
””J N
)
””N O
;
””O P
}
‘‘ 	
internal
„„ 
static
„„ 
int
„„ 
ExecuteNonQuery
„„ +
(
„„+ ,
SqlTransaction
„„, :
transaction
„„; F
,
„„F G
CommandType
„„H S
commandType
„„T _
,
„„_ `
string
„„a g
commandText
„„h s
,
„„s t
params
„„u {
SqlParameter„„| à
[„„à â
]„„â ä!
commandParameters„„ã ú
)„„ú ù
{
‰‰ 	
if
ÂÂ 
(
ÂÂ 
transaction
ÂÂ 
==
ÂÂ 
null
ÂÂ #
)
ÂÂ# $
throw
ÂÂ% *
new
ÂÂ+ .#
ArgumentNullException
ÂÂ/ D
(
ÂÂD E
$str
ÂÂE R
)
ÂÂR S
;
ÂÂS T
if
ÊÊ 
(
ÊÊ 
transaction
ÊÊ 
!=
ÊÊ 
null
ÊÊ #
&&
ÊÊ$ &
transaction
ÊÊ' 2
.
ÊÊ2 3

Connection
ÊÊ3 =
==
ÊÊ> @
null
ÊÊA E
)
ÊÊE F
throw
ÊÊG L
new
ÊÊM P
ArgumentException
ÊÊQ b
(
ÊÊb c
$strÊÊc ¥
,ÊÊ¥ µ
$strÊÊ∂ √
)ÊÊ√ ƒ
;ÊÊƒ ≈

SqlCommand
ÈÈ 
cmd
ÈÈ 
=
ÈÈ 
new
ÈÈ  

SqlCommand
ÈÈ! +
(
ÈÈ+ ,
)
ÈÈ, -
;
ÈÈ- .
bool
ÍÍ !
mustCloseConnection
ÍÍ $
=
ÍÍ% &
false
ÍÍ' ,
;
ÍÍ, -
PrepareCommand
ÎÎ 
(
ÎÎ 
cmd
ÎÎ 
,
ÎÎ 
transaction
ÎÎ  +
.
ÎÎ+ ,

Connection
ÎÎ, 6
,
ÎÎ6 7
transaction
ÎÎ8 C
,
ÎÎC D
commandType
ÎÎE P
,
ÎÎP Q
commandText
ÎÎR ]
,
ÎÎ] ^
commandParameters
ÎÎ_ p
,
ÎÎp q
out
ÎÎr u"
mustCloseConnectionÎÎv â
)ÎÎâ ä
;ÎÎä ã
int
ÓÓ 
retval
ÓÓ 
=
ÓÓ 
cmd
ÓÓ 
.
ÓÓ 
ExecuteNonQuery
ÓÓ ,
(
ÓÓ, -
)
ÓÓ- .
;
ÓÓ. /
cmd
ÒÒ 
.
ÒÒ 

Parameters
ÒÒ 
.
ÒÒ 
Clear
ÒÒ  
(
ÒÒ  !
)
ÒÒ! "
;
ÒÒ" #
return
ÚÚ 
retval
ÚÚ 
;
ÚÚ 
}
ÛÛ 	
internal
ÑÑ 
static
ÑÑ 
int
ÑÑ 
ExecuteNonQuery
ÑÑ +
(
ÑÑ+ ,
SqlTransaction
ÑÑ, :
transaction
ÑÑ; F
,
ÑÑF G
string
ÑÑH N
spName
ÑÑO U
,
ÑÑU V
params
ÑÑW ]
object
ÑÑ^ d
[
ÑÑd e
]
ÑÑe f
parameterValues
ÑÑg v
)
ÑÑv w
{
ÖÖ 	
if
ÜÜ 
(
ÜÜ 
transaction
ÜÜ 
==
ÜÜ 
null
ÜÜ #
)
ÜÜ# $
throw
ÜÜ% *
new
ÜÜ+ .#
ArgumentNullException
ÜÜ/ D
(
ÜÜD E
$str
ÜÜE R
)
ÜÜR S
;
ÜÜS T
if
áá 
(
áá 
transaction
áá 
!=
áá 
null
áá #
&&
áá$ &
transaction
áá' 2
.
áá2 3

Connection
áá3 =
==
áá> @
null
ááA E
)
ááE F
throw
ááG L
new
ááM P
ArgumentException
ááQ b
(
ááb c
$stráác ¥
,áá¥ µ
$stráá∂ √
)áá√ ƒ
;ááƒ ≈
if
àà 
(
àà 
spName
àà 
==
àà 
null
àà 
||
àà !
spName
àà" (
.
àà( )
Length
àà) /
==
àà0 2
$num
àà3 4
)
àà4 5
throw
àà6 ;
new
àà< ?#
ArgumentNullException
àà@ U
(
ààU V
$str
ààV ^
)
àà^ _
;
àà_ `
if
ãã 
(
ãã 
parameterValues
ãã 
!=
ãã  "
null
ãã# '
&&
ãã( *
parameterValues
ãã+ :
.
ãã: ;
Length
ãã; A
>
ããB C
$num
ããD E
)
ããE F
{
åå 
SqlParameter
éé 
[
éé 
]
éé 
commandParameters
éé 0
=
éé1 2%
SqlHelperParameterCache
éé3 J
.
ééJ K
GetSpParameterSet
ééK \
(
éé\ ]
transaction
éé] h
.
ééh i

Connection
ééi s
,
éés t
spName
ééu {
)
éé{ |
;
éé| }#
AssignParameterValues
ëë %
(
ëë% &
commandParameters
ëë& 7
,
ëë7 8
parameterValues
ëë9 H
)
ëëH I
;
ëëI J
return
îî 
ExecuteNonQuery
îî &
(
îî& '
transaction
îî' 2
,
îî2 3
CommandType
îî4 ?
.
îî? @
StoredProcedure
îî@ O
,
îîO P
spName
îîQ W
,
îîW X
commandParameters
îîY j
)
îîj k
;
îîk l
}
ïï 
else
ññ 
{
óó 
return
ôô 
ExecuteNonQuery
ôô &
(
ôô& '
transaction
ôô' 2
,
ôô2 3
CommandType
ôô4 ?
.
ôô? @
StoredProcedure
ôô@ O
,
ôôO P
spName
ôôQ W
)
ôôW X
;
ôôX Y
}
öö 
}
õõ 	
internal
≠≠ 
static
≠≠ 
DataSet
≠≠ 
ExecuteDataset
≠≠  .
(
≠≠. /
string
≠≠/ 5
connectionString
≠≠6 F
,
≠≠F G
CommandType
≠≠H S
commandType
≠≠T _
,
≠≠_ `
string
≠≠a g
commandText
≠≠h s
)
≠≠s t
{
ÆÆ 	
return
∞∞ 
ExecuteDataset
∞∞ !
(
∞∞! "
connectionString
∞∞" 2
,
∞∞2 3
commandType
∞∞4 ?
,
∞∞? @
commandText
∞∞A L
,
∞∞L M
null
∞∞N R
)
∞∞R S
;
∞∞S T
}
±± 	
internal
¿¿ 
static
¿¿ 
DataSet
¿¿ 
ExecuteDataset
¿¿  .
(
¿¿. /
string
¿¿/ 5
connectionString
¿¿6 F
,
¿¿F G
CommandType
¿¿H S
commandType
¿¿T _
,
¿¿_ `
string
¿¿a g
commandText
¿¿h s
,
¿¿s t
params
¿¿u {
SqlParameter¿¿| à
[¿¿à â
]¿¿â ä!
commandParameters¿¿ã ú
)¿¿ú ù
{
¡¡ 	
if
¬¬ 
(
¬¬ 
connectionString
¬¬  
==
¬¬! #
null
¬¬$ (
||
¬¬) +
connectionString
¬¬, <
.
¬¬< =
Length
¬¬= C
==
¬¬D F
$num
¬¬G H
)
¬¬H I
throw
¬¬J O
new
¬¬P S#
ArgumentNullException
¬¬T i
(
¬¬i j
$str
¬¬j |
)
¬¬| }
;
¬¬} ~$
clearSQLPoolConnection
ƒƒ "
(
ƒƒ" #
)
ƒƒ# $
;
ƒƒ$ %
using
∆∆ 
(
∆∆ 
SqlConnection
∆∆  

connection
∆∆! +
=
∆∆, -
new
∆∆. 1
SqlConnection
∆∆2 ?
(
∆∆? @
connectionString
∆∆@ P
)
∆∆P Q
)
∆∆Q R
{
«« 

connection
»» 
.
»» 
Open
»» 
(
»»  
)
»»  !
;
»»! "
return
ÀÀ 
ExecuteDataset
ÀÀ %
(
ÀÀ% &

connection
ÀÀ& 0
,
ÀÀ0 1
commandType
ÀÀ2 =
,
ÀÀ= >
commandText
ÀÀ? J
,
ÀÀJ K
commandParameters
ÀÀL ]
)
ÀÀ] ^
;
ÀÀ^ _
}
ÃÃ 
}
ÕÕ 	
internal
œœ 
static
œœ 
DataSet
œœ 
ExecuteDataset
œœ  .
(
œœ. /
string
œœ/ 5
connectionString
œœ6 F
,
œœF G
string
œœH N
commandText
œœO Z
,
œœZ [
CommandType
œœ\ g
commandType
œœh s
,
œœs t
params
œœu {
SqlParameterœœ| à
[œœà â
]œœâ ä!
commandParametersœœã ú
)œœú ù
{
–– 	
if
—— 
(
—— 
connectionString
——  
==
——! #
null
——$ (
||
——) +
connectionString
——, <
.
——< =
Length
——= C
==
——D F
$num
——G H
)
——H I
throw
——J O
new
——P S#
ArgumentNullException
——T i
(
——i j
$str
——j |
)
——| }
;
——} ~$
clearSQLPoolConnection
”” "
(
””" #
)
””# $
;
””$ %
using
’’ 
(
’’ 
SqlConnection
’’  

connection
’’! +
=
’’, -
new
’’. 1
SqlConnection
’’2 ?
(
’’? @
connectionString
’’@ P
)
’’P Q
)
’’Q R
{
÷÷ 

connection
◊◊ 
.
◊◊ 
Open
◊◊ 
(
◊◊  
)
◊◊  !
;
◊◊! "
return
⁄⁄ 
ExecuteDataset
⁄⁄ %
(
⁄⁄% &

connection
⁄⁄& 0
,
⁄⁄0 1
commandType
⁄⁄2 =
,
⁄⁄= >
commandText
⁄⁄? J
,
⁄⁄J K
commandParameters
⁄⁄L ]
)
⁄⁄] ^
;
⁄⁄^ _
}
€€ 
}
‹‹ 	
internal
ﬁﬁ 
static
ﬁﬁ 
	DataTable
ﬁﬁ !
ExecuteDataTable
ﬁﬁ" 2
(
ﬁﬁ2 3
string
ﬁﬁ3 9
connectionString
ﬁﬁ: J
,
ﬁﬁJ K
string
ﬁﬁL R
commandText
ﬁﬁS ^
,
ﬁﬁ^ _
CommandType
ﬁﬁ` k
commandType
ﬁﬁl w
,
ﬁﬁw x
params
ﬁﬁy 
SqlParameterﬁﬁÄ å
[ﬁﬁå ç
]ﬁﬁç é!
commandParametersﬁﬁè †
)ﬁﬁ† °
{
ﬂﬂ 	
if
‡‡ 
(
‡‡ 
connectionString
‡‡  
==
‡‡! #
null
‡‡$ (
||
‡‡) +
connectionString
‡‡, <
.
‡‡< =
Length
‡‡= C
==
‡‡D F
$num
‡‡G H
)
‡‡H I
throw
‡‡J O
new
‡‡P S#
ArgumentNullException
‡‡T i
(
‡‡i j
$str
‡‡j |
)
‡‡| }
;
‡‡} ~$
clearSQLPoolConnection
‚‚ "
(
‚‚" #
)
‚‚# $
;
‚‚$ %
using
‰‰ 
(
‰‰ 
SqlConnection
‰‰  

connection
‰‰! +
=
‰‰, -
new
‰‰. 1
SqlConnection
‰‰2 ?
(
‰‰? @
connectionString
‰‰@ P
)
‰‰P Q
)
‰‰Q R
{
ÂÂ 

connection
ÊÊ 
.
ÊÊ 
Open
ÊÊ 
(
ÊÊ  
)
ÊÊ  !
;
ÊÊ! "
return
ÈÈ 
ExecuteDataTable
ÈÈ '
(
ÈÈ' (

connection
ÈÈ( 2
,
ÈÈ2 3
commandText
ÈÈ4 ?
,
ÈÈ? @
commandType
ÈÈA L
,
ÈÈL M
commandParameters
ÈÈN _
)
ÈÈ_ `
;
ÈÈ` a
}
ÍÍ 
}
ÎÎ 	
internal
¸¸ 
static
¸¸ 
DataSet
¸¸ 
ExecuteDataset
¸¸  .
(
¸¸. /
string
¸¸/ 5
connectionString
¸¸6 F
,
¸¸F G
string
¸¸H N
spName
¸¸O U
,
¸¸U V
params
¸¸W ]
object
¸¸^ d
[
¸¸d e
]
¸¸e f
parameterValues
¸¸g v
)
¸¸v w
{
˝˝ 	
DataSet
˛˛ 
dsReturn
˛˛ 
;
˛˛ 
if
ˇˇ 
(
ˇˇ 
connectionString
ˇˇ  
==
ˇˇ! #
null
ˇˇ$ (
||
ˇˇ) +
connectionString
ˇˇ, <
.
ˇˇ< =
Length
ˇˇ= C
==
ˇˇD F
$num
ˇˇG H
)
ˇˇH I
throw
ˇˇJ O
new
ˇˇP S#
ArgumentNullException
ˇˇT i
(
ˇˇi j
$str
ˇˇj |
)
ˇˇ| }
;
ˇˇ} ~
if
ÄÄ 
(
ÄÄ 
spName
ÄÄ 
==
ÄÄ 
null
ÄÄ 
||
ÄÄ !
spName
ÄÄ" (
.
ÄÄ( )
Length
ÄÄ) /
==
ÄÄ0 2
$num
ÄÄ3 4
)
ÄÄ4 5
throw
ÄÄ6 ;
new
ÄÄ< ?#
ArgumentNullException
ÄÄ@ U
(
ÄÄU V
$str
ÄÄV ^
)
ÄÄ^ _
;
ÄÄ_ `
if
ÉÉ 
(
ÉÉ 
parameterValues
ÉÉ 
!=
ÉÉ  "
null
ÉÉ# '
&&
ÉÉ( *
parameterValues
ÉÉ+ :
.
ÉÉ: ;
Length
ÉÉ; A
>
ÉÉB C
$num
ÉÉD E
)
ÉÉE F
{
ÑÑ 
SqlParameter
áá 
[
áá 
]
áá 
commandParameters
áá 0
=
áá1 2%
SqlHelperParameterCache
áá3 J
.
ááJ K
GetSpParameterSet
ááK \
(
áá\ ]
connectionString
áá] m
,
áám n
spName
ááo u
,
ááu v
true
ááw {
)
áá{ |
;
áá| }#
AssignParameterValues
ää %
(
ää% &
commandParameters
ää& 7
,
ää7 8
parameterValues
ää9 H
)
ääH I
;
ääI J
dsReturn
èè 
=
èè 
ExecuteDataset
èè )
(
èè) *
connectionString
èè* :
,
èè: ;
CommandType
èè< G
.
èèG H
StoredProcedure
èèH W
,
èèW X
spName
èèY _
,
èè_ `
commandParameters
èèa r
)
èèr s
;
èès t#
UpdateParameterValues
íí %
(
íí% &
commandParameters
íí& 7
,
íí7 8
parameterValues
íí9 H
)
ííH I
;
ííI J
}
ìì 
else
îî 
{
ïï 
dsReturn
ôô 
=
ôô 
ExecuteDataset
ôô )
(
ôô) *
connectionString
ôô* :
,
ôô: ;
CommandType
ôô< G
.
ôôG H
StoredProcedure
ôôH W
,
ôôW X
spName
ôôY _
)
ôô_ `
;
ôô` a
}
öö 
return
úú 
dsReturn
úú 
;
úú 
}
ùù 	
internal
™™ 
static
™™ 
DataSet
™™ 
ExecuteDataset
™™  .
(
™™. /
SqlConnection
™™/ <

connection
™™= G
,
™™G H
CommandType
™™I T
commandType
™™U `
,
™™` a
string
™™b h
commandText
™™i t
)
™™t u
{
´´ 	
return
≠≠ 
ExecuteDataset
≠≠ !
(
≠≠! "

connection
≠≠" ,
,
≠≠, -
commandType
≠≠. 9
,
≠≠9 :
commandText
≠≠; F
,
≠≠F G
null
≠≠H L
)
≠≠L M
;
≠≠M N
}
ÆÆ 	
internal
ΩΩ 
static
ΩΩ 
DataSet
ΩΩ 
ExecuteDataset
ΩΩ  .
(
ΩΩ. /
SqlConnection
ΩΩ/ <

connection
ΩΩ= G
,
ΩΩG H
CommandType
ΩΩI T
commandType
ΩΩU `
,
ΩΩ` a
string
ΩΩb h
commandText
ΩΩi t
,
ΩΩt u
params
ΩΩv |
SqlParameterΩΩ} â
[ΩΩâ ä
]ΩΩä ã!
commandParametersΩΩå ù
)ΩΩù û
{
ææ 	
if
øø 
(
øø 

connection
øø 
==
øø 
null
øø "
)
øø" #
throw
øø$ )
new
øø* -#
ArgumentNullException
øø. C
(
øøC D
$str
øøD P
)
øøP Q
;
øøQ R

SqlCommand
¬¬ 
cmd
¬¬ 
=
¬¬ 
new
¬¬  

SqlCommand
¬¬! +
(
¬¬+ ,
)
¬¬, -
;
¬¬- .
bool
√√ !
mustCloseConnection
√√ $
=
√√% &
false
√√' ,
;
√√, -
PrepareCommand
ƒƒ 
(
ƒƒ 
cmd
ƒƒ 
,
ƒƒ 

connection
ƒƒ  *
,
ƒƒ* +
null
ƒƒ, 0
,
ƒƒ0 1
commandType
ƒƒ2 =
,
ƒƒ= >
commandText
ƒƒ? J
,
ƒƒJ K
commandParameters
ƒƒL ]
,
ƒƒ] ^
out
ƒƒ_ b!
mustCloseConnection
ƒƒc v
)
ƒƒv w
;
ƒƒw x
using
«« 
(
«« 
SqlDataAdapter
«« !
da
««" $
=
««% &
new
««' *
SqlDataAdapter
««+ 9
(
««9 :
cmd
««: =
)
««= >
)
««> ?
{
»» 
DataSet
…… 
ds
…… 
=
…… 
new
……  
DataSet
……! (
(
……( )
)
……) *
;
……* +
da
ÃÃ 
.
ÃÃ 
Fill
ÃÃ 
(
ÃÃ 
ds
ÃÃ 
)
ÃÃ 
;
ÃÃ 
cmd
œœ 
.
œœ 

Parameters
œœ 
.
œœ 
Clear
œœ $
(
œœ$ %
)
œœ% &
;
œœ& '
if
—— 
(
—— !
mustCloseConnection
—— '
)
——' (

connection
““ 
.
““ 
Close
““ $
(
““$ %
)
““% &
;
““& '
return
’’ 
ds
’’ 
;
’’ 
}
÷÷ 
}
◊◊ 	
internal
ŸŸ 
static
ŸŸ 
	DataTable
ŸŸ !
ExecuteDataTable
ŸŸ" 2
(
ŸŸ2 3
SqlConnection
ŸŸ3 @

connection
ŸŸA K
,
ŸŸK L
string
ŸŸM S
commandText
ŸŸT _
,
ŸŸ_ `
CommandType
ŸŸa l
commandType
ŸŸm x
,
ŸŸx y
paramsŸŸz Ä
SqlParameterŸŸÅ ç
[ŸŸç é
]ŸŸé è!
commandParametersŸŸê °
)ŸŸ° ¢
{
⁄⁄ 	
if
€€ 
(
€€ 

connection
€€ 
==
€€ 
null
€€ "
)
€€" #
throw
€€$ )
new
€€* -#
ArgumentNullException
€€. C
(
€€C D
$str
€€D P
)
€€P Q
;
€€Q R

SqlCommand
ﬁﬁ 
cmd
ﬁﬁ 
=
ﬁﬁ 
new
ﬁﬁ  

SqlCommand
ﬁﬁ! +
(
ﬁﬁ+ ,
)
ﬁﬁ, -
;
ﬁﬁ- .
bool
ﬂﬂ !
mustCloseConnection
ﬂﬂ $
=
ﬂﬂ% &
false
ﬂﬂ' ,
;
ﬂﬂ, -
PrepareCommand
‡‡ 
(
‡‡ 
cmd
‡‡ 
,
‡‡ 

connection
‡‡  *
,
‡‡* +
null
‡‡, 0
,
‡‡0 1
commandType
‡‡2 =
,
‡‡= >
commandText
‡‡? J
,
‡‡J K
commandParameters
‡‡L ]
,
‡‡] ^
out
‡‡_ b!
mustCloseConnection
‡‡c v
)
‡‡v w
;
‡‡w x
cmd
·· 
.
·· 
CommandTimeout
·· 
=
··  
$num
··! $
;
··$ %
using
„„ 
(
„„ 
SqlDataAdapter
„„ !
da
„„" $
=
„„% &
new
„„' *
SqlDataAdapter
„„+ 9
(
„„9 :
cmd
„„: =
)
„„= >
)
„„> ?
{
‰‰ 
	DataTable
ÂÂ 
dt
ÂÂ 
=
ÂÂ 
new
ÂÂ "
	DataTable
ÂÂ# ,
(
ÂÂ, -
)
ÂÂ- .
;
ÂÂ. /
da
ËË 
.
ËË 
Fill
ËË 
(
ËË 
dt
ËË 
)
ËË 
;
ËË 
cmd
ÎÎ 
.
ÎÎ 

Parameters
ÎÎ 
.
ÎÎ 
Clear
ÎÎ $
(
ÎÎ$ %
)
ÎÎ% &
;
ÎÎ& '
if
ÌÌ 
(
ÌÌ !
mustCloseConnection
ÌÌ '
)
ÌÌ' (

connection
ÓÓ 
.
ÓÓ 
Close
ÓÓ $
(
ÓÓ$ %
)
ÓÓ% &
;
ÓÓ& '
return
ÒÒ 
dt
ÒÒ 
;
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
internal
ÑÑ 
static
ÑÑ 
DataSet
ÑÑ 
ExecuteDataset
ÑÑ  .
(
ÑÑ. /
SqlConnection
ÑÑ/ <

connection
ÑÑ= G
,
ÑÑG H
string
ÑÑI O
spName
ÑÑP V
,
ÑÑV W
params
ÑÑX ^
object
ÑÑ_ e
[
ÑÑe f
]
ÑÑf g
parameterValues
ÑÑh w
)
ÑÑw x
{
ÖÖ 	
if
ÜÜ 
(
ÜÜ 

connection
ÜÜ 
==
ÜÜ 
null
ÜÜ "
)
ÜÜ" #
throw
ÜÜ$ )
new
ÜÜ* -#
ArgumentNullException
ÜÜ. C
(
ÜÜC D
$str
ÜÜD P
)
ÜÜP Q
;
ÜÜQ R
if
áá 
(
áá 
spName
áá 
==
áá 
null
áá 
||
áá !
spName
áá" (
.
áá( )
Length
áá) /
==
áá0 2
$num
áá3 4
)
áá4 5
throw
áá6 ;
new
áá< ?#
ArgumentNullException
áá@ U
(
ááU V
$str
ááV ^
)
áá^ _
;
áá_ `
if
ää 
(
ää 
parameterValues
ää 
!=
ää  "
null
ää# '
&&
ää( *
parameterValues
ää+ :
.
ää: ;
Length
ää; A
>
ääB C
$num
ääD E
)
ääE F
{
ãã 
SqlParameter
çç 
[
çç 
]
çç 
commandParameters
çç 0
=
çç1 2%
SqlHelperParameterCache
çç3 J
.
ççJ K
GetSpParameterSet
ççK \
(
çç\ ]

connection
çç] g
,
ççg h
spName
ççi o
)
çço p
;
ççp q#
AssignParameterValues
êê %
(
êê% &
commandParameters
êê& 7
,
êê7 8
parameterValues
êê9 H
)
êêH I
;
êêI J
return
ìì 
ExecuteDataset
ìì %
(
ìì% &

connection
ìì& 0
,
ìì0 1
CommandType
ìì2 =
.
ìì= >
StoredProcedure
ìì> M
,
ììM N
spName
ììO U
,
ììU V
commandParameters
ììW h
)
ììh i
;
ììi j
}
îî 
else
ïï 
{
ññ 
return
òò 
ExecuteDataset
òò %
(
òò% &

connection
òò& 0
,
òò0 1
CommandType
òò2 =
.
òò= >
StoredProcedure
òò> M
,
òòM N
spName
òòO U
)
òòU V
;
òòV W
}
ôô 
}
öö 	
internal
ßß 
static
ßß 
DataSet
ßß 
ExecuteDataset
ßß  .
(
ßß. /
SqlTransaction
ßß/ =
transaction
ßß> I
,
ßßI J
CommandType
ßßK V
commandType
ßßW b
,
ßßb c
string
ßßd j
commandText
ßßk v
)
ßßv w
{
®® 	
return
™™ 
ExecuteDataset
™™ !
(
™™! "
transaction
™™" -
,
™™- .
commandType
™™/ :
,
™™: ;
commandText
™™< G
,
™™G H
null
™™I M
)
™™M N
;
™™N O
}
´´ 	
internal
∫∫ 
static
∫∫ 
DataSet
∫∫ 
ExecuteDataset
∫∫  .
(
∫∫. /
SqlTransaction
∫∫/ =
transaction
∫∫> I
,
∫∫I J
CommandType
∫∫K V
commandType
∫∫W b
,
∫∫b c
string
∫∫d j
commandText
∫∫k v
,
∫∫v w
params
∫∫x ~
SqlParameter∫∫ ã
[∫∫ã å
]∫∫å ç!
commandParameters∫∫é ü
)∫∫ü †
{
ªª 	
if
ºº 
(
ºº 
transaction
ºº 
==
ºº 
null
ºº #
)
ºº# $
throw
ºº% *
new
ºº+ .#
ArgumentNullException
ºº/ D
(
ººD E
$str
ººE R
)
ººR S
;
ººS T
if
ΩΩ 
(
ΩΩ 
transaction
ΩΩ 
!=
ΩΩ 
null
ΩΩ #
&&
ΩΩ$ &
transaction
ΩΩ' 2
.
ΩΩ2 3

Connection
ΩΩ3 =
==
ΩΩ> @
null
ΩΩA E
)
ΩΩE F
throw
ΩΩG L
new
ΩΩM P
ArgumentException
ΩΩQ b
(
ΩΩb c
$strΩΩc ¥
,ΩΩ¥ µ
$strΩΩ∂ √
)ΩΩ√ ƒ
;ΩΩƒ ≈

SqlCommand
¿¿ 
cmd
¿¿ 
=
¿¿ 
new
¿¿  

SqlCommand
¿¿! +
(
¿¿+ ,
)
¿¿, -
;
¿¿- .
bool
¡¡ !
mustCloseConnection
¡¡ $
=
¡¡% &
false
¡¡' ,
;
¡¡, -
PrepareCommand
¬¬ 
(
¬¬ 
cmd
¬¬ 
,
¬¬ 
transaction
¬¬  +
.
¬¬+ ,

Connection
¬¬, 6
,
¬¬6 7
transaction
¬¬8 C
,
¬¬C D
commandType
¬¬E P
,
¬¬P Q
commandText
¬¬R ]
,
¬¬] ^
commandParameters
¬¬_ p
,
¬¬p q
out
¬¬r u"
mustCloseConnection¬¬v â
)¬¬â ä
;¬¬ä ã
using
≈≈ 
(
≈≈ 
SqlDataAdapter
≈≈ !
da
≈≈" $
=
≈≈% &
new
≈≈' *
SqlDataAdapter
≈≈+ 9
(
≈≈9 :
cmd
≈≈: =
)
≈≈= >
)
≈≈> ?
{
∆∆ 
DataSet
«« 
ds
«« 
=
«« 
new
««  
DataSet
««! (
(
««( )
)
««) *
;
««* +
da
   
.
   
Fill
   
(
   
ds
   
)
   
;
   
cmd
ÕÕ 
.
ÕÕ 

Parameters
ÕÕ 
.
ÕÕ 
Clear
ÕÕ $
(
ÕÕ$ %
)
ÕÕ% &
;
ÕÕ& '
return
–– 
ds
–– 
;
–– 
}
—— 
}
““ 	
internal
„„ 
static
„„ 
DataSet
„„ 
ExecuteDataset
„„  .
(
„„. /
SqlTransaction
„„/ =
transaction
„„> I
,
„„I J
string
„„K Q
spName
„„R X
,
„„X Y
params
„„Z `
object
„„a g
[
„„g h
]
„„h i
parameterValues
„„j y
)
„„y z
{
‰‰ 	
if
ÂÂ 
(
ÂÂ 
transaction
ÂÂ 
==
ÂÂ 
null
ÂÂ #
)
ÂÂ# $
throw
ÂÂ% *
new
ÂÂ+ .#
ArgumentNullException
ÂÂ/ D
(
ÂÂD E
$str
ÂÂE R
)
ÂÂR S
;
ÂÂS T
if
ÊÊ 
(
ÊÊ 
transaction
ÊÊ 
!=
ÊÊ 
null
ÊÊ #
&&
ÊÊ$ &
transaction
ÊÊ' 2
.
ÊÊ2 3

Connection
ÊÊ3 =
==
ÊÊ> @
null
ÊÊA E
)
ÊÊE F
throw
ÊÊG L
new
ÊÊM P
ArgumentException
ÊÊQ b
(
ÊÊb c
$strÊÊc ¥
,ÊÊ¥ µ
$strÊÊ∂ √
)ÊÊ√ ƒ
;ÊÊƒ ≈
if
ÁÁ 
(
ÁÁ 
spName
ÁÁ 
==
ÁÁ 
null
ÁÁ 
||
ÁÁ !
spName
ÁÁ" (
.
ÁÁ( )
Length
ÁÁ) /
==
ÁÁ0 2
$num
ÁÁ3 4
)
ÁÁ4 5
throw
ÁÁ6 ;
new
ÁÁ< ?#
ArgumentNullException
ÁÁ@ U
(
ÁÁU V
$str
ÁÁV ^
)
ÁÁ^ _
;
ÁÁ_ `
if
ÍÍ 
(
ÍÍ 
parameterValues
ÍÍ 
!=
ÍÍ  "
null
ÍÍ# '
&&
ÍÍ( *
parameterValues
ÍÍ+ :
.
ÍÍ: ;
Length
ÍÍ; A
>
ÍÍB C
$num
ÍÍD E
)
ÍÍE F
{
ÎÎ 
SqlParameter
ÌÌ 
[
ÌÌ 
]
ÌÌ 
commandParameters
ÌÌ 0
=
ÌÌ1 2%
SqlHelperParameterCache
ÌÌ3 J
.
ÌÌJ K
GetSpParameterSet
ÌÌK \
(
ÌÌ\ ]
transaction
ÌÌ] h
.
ÌÌh i

Connection
ÌÌi s
,
ÌÌs t
spName
ÌÌu {
)
ÌÌ{ |
;
ÌÌ| }#
AssignParameterValues
 %
(
% &
commandParameters
& 7
,
7 8
parameterValues
9 H
)
H I
;
I J
return
ÛÛ 
ExecuteDataset
ÛÛ %
(
ÛÛ% &
transaction
ÛÛ& 1
,
ÛÛ1 2
CommandType
ÛÛ3 >
.
ÛÛ> ?
StoredProcedure
ÛÛ? N
,
ÛÛN O
spName
ÛÛP V
,
ÛÛV W
commandParameters
ÛÛX i
)
ÛÛi j
;
ÛÛj k
}
ÙÙ 
else
ıı 
{
ˆˆ 
return
¯¯ 
ExecuteDataset
¯¯ %
(
¯¯% &
transaction
¯¯& 1
,
¯¯1 2
CommandType
¯¯3 >
.
¯¯> ?
StoredProcedure
¯¯? N
,
¯¯N O
spName
¯¯P V
)
¯¯V W
;
¯¯W X
}
˘˘ 
}
˙˙ 	
private
ÑÑ 
enum
ÑÑ $
SqlConnectionOwnership
ÑÑ +
{
ÖÖ 	
Internal
áá 
,
áá 
External
ää 
}
ãã 	
private
úú 
static
úú 
SqlDataReader
úú $
ExecuteReader
úú% 2
(
úú2 3
SqlConnection
úú3 @

connection
úúA K
,
úúK L
SqlTransaction
úúM [
transaction
úú\ g
,
úúg h
CommandType
úúi t
commandTypeúúu Ä
,úúÄ Å
stringúúÇ à
commandTextúúâ î
,úúî ï
SqlParameterúúñ ¢
[úú¢ £
]úú£ §!
commandParametersúú• ∂
,úú∂ ∑&
SqlConnectionOwnershipúú∏ Œ#
connectionOwnershipúúœ ‚
)úú‚ „
{
ùù 	
if
ûû 
(
ûû 

connection
ûû 
==
ûû 
null
ûû "
)
ûû" #
throw
ûû$ )
new
ûû* -#
ArgumentNullException
ûû. C
(
ûûC D
$str
ûûD P
)
ûûP Q
;
ûûQ R
bool
†† !
mustCloseConnection
†† $
=
††% &
false
††' ,
;
††, -

SqlCommand
¢¢ 
cmd
¢¢ 
=
¢¢ 
new
¢¢  

SqlCommand
¢¢! +
(
¢¢+ ,
)
¢¢, -
;
¢¢- .
try
££ 
{
§§ 
PrepareCommand
•• 
(
•• 
cmd
•• "
,
••" #

connection
••$ .
,
••. /
transaction
••0 ;
,
••; <
commandType
••= H
,
••H I
commandText
••J U
,
••U V
commandParameters
••W h
,
••h i
out
••j m"
mustCloseConnection••n Å
)••Å Ç
;••Ç É
SqlDataReader
®® 

dataReader
®® (
;
®®( )
if
´´ 
(
´´ !
connectionOwnership
´´ '
==
´´( *$
SqlConnectionOwnership
´´+ A
.
´´A B
External
´´B J
)
´´J K
{
¨¨ 

dataReader
≠≠ 
=
≠≠  
cmd
≠≠! $
.
≠≠$ %
ExecuteReader
≠≠% 2
(
≠≠2 3
)
≠≠3 4
;
≠≠4 5
}
ÆÆ 
else
ØØ 
{
∞∞ 

dataReader
±± 
=
±±  
cmd
±±! $
.
±±$ %
ExecuteReader
±±% 2
(
±±2 3
CommandBehavior
±±3 B
.
±±B C
CloseConnection
±±C R
)
±±R S
;
±±S T
}
≤≤ 
bool
ΩΩ 
canClear
ΩΩ 
=
ΩΩ 
true
ΩΩ  $
;
ΩΩ$ %
foreach
ææ 
(
ææ 
SqlParameter
ææ %
commandParameter
ææ& 6
in
ææ7 9
cmd
ææ: =
.
ææ= >

Parameters
ææ> H
)
ææH I
{
øø 
if
¿¿ 
(
¿¿ 
commandParameter
¿¿ (
.
¿¿( )
	Direction
¿¿) 2
!=
¿¿3 5 
ParameterDirection
¿¿6 H
.
¿¿H I
Input
¿¿I N
)
¿¿N O
canClear
¡¡  
=
¡¡! "
false
¡¡# (
;
¡¡( )
}
¬¬ 
if
ƒƒ 
(
ƒƒ 
canClear
ƒƒ 
)
ƒƒ 
{
≈≈ 
cmd
∆∆ 
.
∆∆ 

Parameters
∆∆ "
.
∆∆" #
Clear
∆∆# (
(
∆∆( )
)
∆∆) *
;
∆∆* +
}
«« 
return
…… 

dataReader
…… !
;
……! "
}
   
catch
ÀÀ 
{
ÃÃ 
if
ÕÕ 
(
ÕÕ !
mustCloseConnection
ÕÕ '
)
ÕÕ' (

connection
ŒŒ 
.
ŒŒ 
Close
ŒŒ $
(
ŒŒ$ %
)
ŒŒ% &
;
ŒŒ& '
throw
œœ 
;
œœ 
}
–– 
}
—— 	
internal
ﬂﬂ 
static
ﬂﬂ 
SqlDataReader
ﬂﬂ %
ExecuteReader
ﬂﬂ& 3
(
ﬂﬂ3 4
string
ﬂﬂ4 :
connectionString
ﬂﬂ; K
,
ﬂﬂK L
CommandType
ﬂﬂM X
commandType
ﬂﬂY d
,
ﬂﬂd e
string
ﬂﬂf l
commandText
ﬂﬂm x
)
ﬂﬂx y
{
‡‡ 	
return
‚‚ 
ExecuteReader
‚‚  
(
‚‚  !
connectionString
‚‚! 1
,
‚‚1 2
commandType
‚‚3 >
,
‚‚> ?
commandText
‚‚@ K
,
‚‚K L
null
‚‚M Q
)
‚‚Q R
;
‚‚R S
}
„„ 	
internal
ÂÂ 
static
ÂÂ 
SqlDataReader
ÂÂ %
ExecuteReader
ÂÂ& 3
(
ÂÂ3 4
string
ÂÂ4 :
connectionString
ÂÂ; K
,
ÂÂK L
string
ÂÂM S
commandText
ÂÂT _
,
ÂÂ_ `
CommandType
ÂÂa l
commandType
ÂÂm x
)
ÂÂx y
{
ÊÊ 	
return
ËË 
ExecuteReader
ËË  
(
ËË  !
connectionString
ËË! 1
,
ËË1 2
commandType
ËË3 >
,
ËË> ?
commandText
ËË@ K
,
ËËK L
null
ËËM Q
)
ËËQ R
;
ËËR S
}
ÈÈ 	
internal
ÎÎ 
static
ÎÎ 
SqlDataReader
ÎÎ %
ExecuteReader
ÎÎ& 3
(
ÎÎ3 4
string
ÎÎ4 :
connectionString
ÎÎ; K
,
ÎÎK L
string
ÎÎM S
commandText
ÎÎT _
,
ÎÎ_ `
CommandType
ÎÎa l
commandType
ÎÎm x
,
ÎÎx y
ConnectionStateÎÎz â
connectionstateÎÎä ô
)ÎÎô ö
{
ÏÏ 	
return
ÓÓ 
ExecuteReader
ÓÓ  
(
ÓÓ  !
connectionString
ÓÓ! 1
,
ÓÓ1 2
commandType
ÓÓ3 >
,
ÓÓ> ?
commandText
ÓÓ@ K
,
ÓÓK L
null
ÓÓM Q
)
ÓÓQ R
;
ÓÓR S
}
ÔÔ 	
internal
˛˛ 
static
˛˛ 
SqlDataReader
˛˛ %
ExecuteReader
˛˛& 3
(
˛˛3 4
string
˛˛4 :
connectionString
˛˛; K
,
˛˛K L
CommandType
˛˛M X
commandType
˛˛Y d
,
˛˛d e
string
˛˛f l
commandText
˛˛m x
,
˛˛x y
params˛˛z Ä
SqlParameter˛˛Å ç
[˛˛ç é
]˛˛é è!
commandParameters˛˛ê °
)˛˛° ¢
{
ˇˇ 	
if
ÑÑ 
(
ÑÑ 
connectionString
ÑÑ  
==
ÑÑ! #
null
ÑÑ$ (
||
ÑÑ) +
connectionString
ÑÑ, <
.
ÑÑ< =
Length
ÑÑ= C
==
ÑÑD F
$num
ÑÑG H
)
ÑÑH I
throw
ÑÑJ O
new
ÑÑP S#
ArgumentNullException
ÑÑT i
(
ÑÑi j
$str
ÑÑj |
)
ÑÑ| }
;
ÑÑ} ~
SqlConnection
ÖÖ 

connection
ÖÖ $
=
ÖÖ% &
null
ÖÖ' +
;
ÖÖ+ ,
try
ÜÜ 
{
áá $
clearSQLPoolConnection
àà &
(
àà& '
)
àà' (
;
àà( )

connection
ââ 
=
ââ 
new
ââ  
SqlConnection
ââ! .
(
ââ. /
connectionString
ââ/ ?
)
ââ? @
;
ââ@ A

connection
ää 
.
ää 
Open
ää 
(
ää  
)
ää  !
;
ää! "
return
çç 
ExecuteReader
çç $
(
çç$ %

connection
çç% /
,
çç/ 0
null
çç1 5
,
çç5 6
commandType
çç7 B
,
ççB C
commandText
ççD O
,
ççO P
commandParameters
ççQ b
,
ççb c$
SqlConnectionOwnership
ççd z
.
ççz {
Internalçç{ É
)ççÉ Ñ
;ççÑ Ö
}
éé 
catch
èè 
{
êê 
if
íí 
(
íí 

connection
íí 
!=
íí !
null
íí" &
)
íí& '

connection
íí( 2
.
íí2 3
Close
íí3 8
(
íí8 9
)
íí9 :
;
íí: ;
throw
ìì 
;
ìì 
}
îî 
}
ïï 	
internal
óó 
static
óó 
SqlDataReader
óó %
ExecuteReader
óó& 3
(
óó3 4
string
óó4 :
connectionString
óó; K
,
óóK L
string
óóM S
commandText
óóT _
,
óó_ `
CommandType
óóa l
commandType
óóm x
,
óóx y
paramsóóz Ä
SqlParameteróóÅ ç
[óóç é
]óóé è!
commandParametersóóê °
)óó° ¢
{
òò 	
if
úú 
(
úú 
connectionString
úú  
==
úú! #
null
úú$ (
||
úú) +
connectionString
úú, <
.
úú< =
Length
úú= C
==
úúD F
$num
úúG H
)
úúH I
throw
úúJ O
new
úúP S#
ArgumentNullException
úúT i
(
úúi j
$str
úúj |
)
úú| }
;
úú} ~
SqlConnection
ùù 

connection
ùù $
=
ùù% &
null
ùù' +
;
ùù+ ,
try
ûû 
{
üü $
clearSQLPoolConnection
†† &
(
††& '
)
††' (
;
††( )

connection
°° 
=
°° 
new
°°  
SqlConnection
°°! .
(
°°. /
connectionString
°°/ ?
)
°°? @
;
°°@ A

connection
¢¢ 
.
¢¢ 
Open
¢¢ 
(
¢¢  
)
¢¢  !
;
¢¢! "
return
•• 
ExecuteReader
•• $
(
••$ %

connection
••% /
,
••/ 0
null
••1 5
,
••5 6
commandType
••7 B
,
••B C
commandText
••D O
,
••O P
commandParameters
••Q b
,
••b c$
SqlConnectionOwnership
••d z
.
••z {
Internal••{ É
)••É Ñ
;••Ñ Ö
}
¶¶ 
catch
ßß 
{
®® 
if
™™ 
(
™™ 

connection
™™ 
!=
™™ !
null
™™" &
)
™™& '

connection
™™( 2
.
™™2 3
Close
™™3 8
(
™™8 9
)
™™9 :
;
™™: ;
throw
´´ 
;
´´ 
}
¨¨ 
}
≠≠ 	
internal
ææ 
static
ææ 
SqlDataReader
ææ %
ExecuteReader
ææ& 3
(
ææ3 4
string
ææ4 :
connectionString
ææ; K
,
ææK L
string
ææM S
spName
ææT Z
,
ææZ [
params
ææ\ b
object
ææc i
[
ææi j
]
ææj k
parameterValues
ææl {
)
ææ{ |
{
øø 	
SqlDataReader
¿¿ 
drReturn
¿¿ "
;
¿¿" #
if
¡¡ 
(
¡¡ 
connectionString
¡¡  
==
¡¡! #
null
¡¡$ (
||
¡¡) +
connectionString
¡¡, <
.
¡¡< =
Length
¡¡= C
==
¡¡D F
$num
¡¡G H
)
¡¡H I
throw
¡¡J O
new
¡¡P S#
ArgumentNullException
¡¡T i
(
¡¡i j
$str
¡¡j |
)
¡¡| }
;
¡¡} ~
if
¬¬ 
(
¬¬ 
spName
¬¬ 
==
¬¬ 
null
¬¬ 
||
¬¬ !
spName
¬¬" (
.
¬¬( )
Length
¬¬) /
==
¬¬0 2
$num
¬¬3 4
)
¬¬4 5
throw
¬¬6 ;
new
¬¬< ?#
ArgumentNullException
¬¬@ U
(
¬¬U V
$str
¬¬V ^
)
¬¬^ _
;
¬¬_ `
if
≈≈ 
(
≈≈ 
parameterValues
≈≈ 
!=
≈≈  "
null
≈≈# '
&&
≈≈( *
parameterValues
≈≈+ :
.
≈≈: ;
Length
≈≈; A
>
≈≈B C
$num
≈≈D E
)
≈≈E F
{
∆∆ 
SqlParameter
«« 
[
«« 
]
«« 
commandParameters
«« 0
=
««1 2%
SqlHelperParameterCache
««3 J
.
««J K
GetSpParameterSet
««K \
(
««\ ]
connectionString
««] m
,
««m n
spName
««o u
,
««u v
true
««w {
)
««{ |
;
««| }#
AssignParameterValues
…… %
(
……% &
commandParameters
……& 7
,
……7 8
parameterValues
……9 H
)
……H I
;
……I J
drReturn
ÃÃ 
=
ÃÃ 
ExecuteReader
ÃÃ (
(
ÃÃ( )
connectionString
ÃÃ) 9
,
ÃÃ9 :
CommandType
ÃÃ; F
.
ÃÃF G
StoredProcedure
ÃÃG V
,
ÃÃV W
spName
ÃÃX ^
,
ÃÃ^ _
commandParameters
ÃÃ` q
)
ÃÃq r
;
ÃÃr s#
UpdateParameterValues
—— %
(
——% &
commandParameters
——& 7
,
——7 8
parameterValues
——9 H
)
——H I
;
——I J
return
““ 
drReturn
““ 
;
““  
}
”” 
else
‘‘ 
{
’’ 
drReturn
ÿÿ 
=
ÿÿ 
ExecuteReader
ÿÿ (
(
ÿÿ( )
connectionString
ÿÿ) 9
,
ÿÿ9 :
CommandType
ÿÿ; F
.
ÿÿF G
StoredProcedure
ÿÿG V
,
ÿÿV W
spName
ÿÿX ^
)
ÿÿ^ _
;
ÿÿ_ `
return
ŸŸ 
drReturn
ŸŸ 
;
ŸŸ  
}
⁄⁄ 
}
€€ 	
internal
ËË 
static
ËË 
SqlDataReader
ËË %
ExecuteReader
ËË& 3
(
ËË3 4
SqlConnection
ËË4 A

connection
ËËB L
,
ËËL M
CommandType
ËËN Y
commandType
ËËZ e
,
ËËe f
string
ËËg m
commandText
ËËn y
)
ËËy z
{
ÈÈ 	
return
ÎÎ 
ExecuteReader
ÎÎ  
(
ÎÎ  !

connection
ÎÎ! +
,
ÎÎ+ ,
commandType
ÎÎ- 8
,
ÎÎ8 9
commandText
ÎÎ: E
,
ÎÎE F
null
ÎÎG K
)
ÎÎK L
;
ÎÎL M
}
ÏÏ 	
internal
˚˚ 
static
˚˚ 
SqlDataReader
˚˚ %
ExecuteReader
˚˚& 3
(
˚˚3 4
SqlConnection
˚˚4 A

connection
˚˚B L
,
˚˚L M
CommandType
˚˚N Y
commandType
˚˚Z e
,
˚˚e f
string
˚˚g m
commandText
˚˚n y
,
˚˚y z
params˚˚{ Å
SqlParameter˚˚Ç é
[˚˚é è
]˚˚è ê!
commandParameters˚˚ë ¢
)˚˚¢ £
{
¸¸ 	
return
˛˛ 
ExecuteReader
˛˛  
(
˛˛  !

connection
˛˛! +
,
˛˛+ ,
null
˛˛- 1
,
˛˛1 2
commandType
˛˛3 >
,
˛˛> ?
commandText
˛˛@ K
,
˛˛K L
commandParameters
˛˛M ^
,
˛˛^ _$
SqlConnectionOwnership
˛˛` v
.
˛˛v w
External
˛˛w 
)˛˛ Ä
;˛˛Ä Å
}
ˇˇ 	
internal
ê	ê	 
static
ê	ê	 
SqlDataReader
ê	ê	 %
ExecuteReader
ê	ê	& 3
(
ê	ê	3 4
SqlConnection
ê	ê	4 A

connection
ê	ê	B L
,
ê	ê	L M
string
ê	ê	N T
spName
ê	ê	U [
,
ê	ê	[ \
params
ê	ê	] c
object
ê	ê	d j
[
ê	ê	j k
]
ê	ê	k l
parameterValues
ê	ê	m |
)
ê	ê	| }
{
ë	ë	 	
if
í	í	 
(
í	í	 

connection
í	í	 
==
í	í	 
null
í	í	 "
)
í	í	" #
throw
í	í	$ )
new
í	í	* -#
ArgumentNullException
í	í	. C
(
í	í	C D
$str
í	í	D P
)
í	í	P Q
;
í	í	Q R
if
ì	ì	 
(
ì	ì	 
spName
ì	ì	 
==
ì	ì	 
null
ì	ì	 
||
ì	ì	 !
spName
ì	ì	" (
.
ì	ì	( )
Length
ì	ì	) /
==
ì	ì	0 2
$num
ì	ì	3 4
)
ì	ì	4 5
throw
ì	ì	6 ;
new
ì	ì	< ?#
ArgumentNullException
ì	ì	@ U
(
ì	ì	U V
$str
ì	ì	V ^
)
ì	ì	^ _
;
ì	ì	_ `
if
ñ	ñ	 
(
ñ	ñ	 
parameterValues
ñ	ñ	 
!=
ñ	ñ	  "
null
ñ	ñ	# '
&&
ñ	ñ	( *
parameterValues
ñ	ñ	+ :
.
ñ	ñ	: ;
Length
ñ	ñ	; A
>
ñ	ñ	B C
$num
ñ	ñ	D E
)
ñ	ñ	E F
{
ó	ó	 
SqlParameter
ò	ò	 
[
ò	ò	 
]
ò	ò	 
commandParameters
ò	ò	 0
=
ò	ò	1 2%
SqlHelperParameterCache
ò	ò	3 J
.
ò	ò	J K
GetSpParameterSet
ò	ò	K \
(
ò	ò	\ ]

connection
ò	ò	] g
,
ò	ò	g h
spName
ò	ò	i o
)
ò	ò	o p
;
ò	ò	p q#
AssignParameterValues
ö	ö	 %
(
ö	ö	% &
commandParameters
ö	ö	& 7
,
ö	ö	7 8
parameterValues
ö	ö	9 H
)
ö	ö	H I
;
ö	ö	I J
return
ú	ú	 
ExecuteReader
ú	ú	 $
(
ú	ú	$ %

connection
ú	ú	% /
,
ú	ú	/ 0
CommandType
ú	ú	1 <
.
ú	ú	< =
StoredProcedure
ú	ú	= L
,
ú	ú	L M
spName
ú	ú	N T
,
ú	ú	T U
commandParameters
ú	ú	V g
)
ú	ú	g h
;
ú	ú	h i
}
ù	ù	 
else
û	û	 
{
ü	ü	 
return
°	°	 
ExecuteReader
°	°	 $
(
°	°	$ %

connection
°	°	% /
,
°	°	/ 0
CommandType
°	°	1 <
.
°	°	< =
StoredProcedure
°	°	= L
,
°	°	L M
spName
°	°	N T
)
°	°	T U
;
°	°	U V
}
¢	¢	 
}
£	£	 	
internal
∞	∞	 
static
∞	∞	 
SqlDataReader
∞	∞	 %
ExecuteReader
∞	∞	& 3
(
∞	∞	3 4
SqlTransaction
∞	∞	4 B
transaction
∞	∞	C N
,
∞	∞	N O
CommandType
∞	∞	P [
commandType
∞	∞	\ g
,
∞	∞	g h
string
∞	∞	i o
commandText
∞	∞	p {
)
∞	∞	{ |
{
±	±	 	
return
≥	≥	 
ExecuteReader
≥	≥	  
(
≥	≥	  !
transaction
≥	≥	! ,
,
≥	≥	, -
commandType
≥	≥	. 9
,
≥	≥	9 :
commandText
≥	≥	; F
,
≥	≥	F G
null
≥	≥	H L
)
≥	≥	L M
;
≥	≥	M N
}
¥	¥	 	
internal
√	√	 
static
√	√	 
SqlDataReader
√	√	 %
ExecuteReader
√	√	& 3
(
√	√	3 4
SqlTransaction
√	√	4 B
transaction
√	√	C N
,
√	√	N O
CommandType
√	√	P [
commandType
√	√	\ g
,
√	√	g h
string
√	√	i o
commandText
√	√	p {
,
√	√	{ |
params√	√	} É
SqlParameter√	√	Ñ ê
[√	√	ê ë
]√	√	ë í!
commandParameters√	√	ì §
)√	√	§ •
{
ƒ	ƒ	 	
if
≈	≈	 
(
≈	≈	 
transaction
≈	≈	 
==
≈	≈	 
null
≈	≈	 #
)
≈	≈	# $
throw
≈	≈	% *
new
≈	≈	+ .#
ArgumentNullException
≈	≈	/ D
(
≈	≈	D E
$str
≈	≈	E R
)
≈	≈	R S
;
≈	≈	S T
if
∆	∆	 
(
∆	∆	 
transaction
∆	∆	 
!=
∆	∆	 
null
∆	∆	 #
&&
∆	∆	$ &
transaction
∆	∆	' 2
.
∆	∆	2 3

Connection
∆	∆	3 =
==
∆	∆	> @
null
∆	∆	A E
)
∆	∆	E F
throw
∆	∆	G L
new
∆	∆	M P
ArgumentException
∆	∆	Q b
(
∆	∆	b c
$str∆	∆	c ¥
,∆	∆	¥ µ
$str∆	∆	∂ √
)∆	∆	√ ƒ
;∆	∆	ƒ ≈
return
…	…	 
ExecuteReader
…	…	  
(
…	…	  !
transaction
…	…	! ,
.
…	…	, -

Connection
…	…	- 7
,
…	…	7 8
transaction
…	…	9 D
,
…	…	D E
commandType
…	…	F Q
,
…	…	Q R
commandText
…	…	S ^
,
…	…	^ _
commandParameters
…	…	` q
,
…	…	q r%
SqlConnectionOwnership…	…	s â
.…	…	â ä
External…	…	ä í
)…	…	í ì
;…	…	ì î
}
 	 	 	
internal
€	€	 
static
€	€	 
SqlDataReader
€	€	 %
ExecuteReader
€	€	& 3
(
€	€	3 4
SqlTransaction
€	€	4 B
transaction
€	€	C N
,
€	€	N O
string
€	€	P V
spName
€	€	W ]
,
€	€	] ^
params
€	€	_ e
object
€	€	f l
[
€	€	l m
]
€	€	m n
parameterValues
€	€	o ~
)
€	€	~ 
{
‹	‹	 	
if
›	›	 
(
›	›	 
transaction
›	›	 
==
›	›	 
null
›	›	 #
)
›	›	# $
throw
›	›	% *
new
›	›	+ .#
ArgumentNullException
›	›	/ D
(
›	›	D E
$str
›	›	E R
)
›	›	R S
;
›	›	S T
if
ﬁ	ﬁ	 
(
ﬁ	ﬁ	 
transaction
ﬁ	ﬁ	 
!=
ﬁ	ﬁ	 
null
ﬁ	ﬁ	 #
&&
ﬁ	ﬁ	$ &
transaction
ﬁ	ﬁ	' 2
.
ﬁ	ﬁ	2 3

Connection
ﬁ	ﬁ	3 =
==
ﬁ	ﬁ	> @
null
ﬁ	ﬁ	A E
)
ﬁ	ﬁ	E F
throw
ﬁ	ﬁ	G L
new
ﬁ	ﬁ	M P
ArgumentException
ﬁ	ﬁ	Q b
(
ﬁ	ﬁ	b c
$strﬁ	ﬁ	c ¥
,ﬁ	ﬁ	¥ µ
$strﬁ	ﬁ	∂ √
)ﬁ	ﬁ	√ ƒ
;ﬁ	ﬁ	ƒ ≈
if
ﬂ	ﬂ	 
(
ﬂ	ﬂ	 
spName
ﬂ	ﬂ	 
==
ﬂ	ﬂ	 
null
ﬂ	ﬂ	 
||
ﬂ	ﬂ	 !
spName
ﬂ	ﬂ	" (
.
ﬂ	ﬂ	( )
Length
ﬂ	ﬂ	) /
==
ﬂ	ﬂ	0 2
$num
ﬂ	ﬂ	3 4
)
ﬂ	ﬂ	4 5
throw
ﬂ	ﬂ	6 ;
new
ﬂ	ﬂ	< ?#
ArgumentNullException
ﬂ	ﬂ	@ U
(
ﬂ	ﬂ	U V
$str
ﬂ	ﬂ	V ^
)
ﬂ	ﬂ	^ _
;
ﬂ	ﬂ	_ `
if
‚	‚	 
(
‚	‚	 
parameterValues
‚	‚	 
!=
‚	‚	  "
null
‚	‚	# '
&&
‚	‚	( *
parameterValues
‚	‚	+ :
.
‚	‚	: ;
Length
‚	‚	; A
>
‚	‚	B C
$num
‚	‚	D E
)
‚	‚	E F
{
„	„	 
SqlParameter
‰	‰	 
[
‰	‰	 
]
‰	‰	 
commandParameters
‰	‰	 0
=
‰	‰	1 2%
SqlHelperParameterCache
‰	‰	3 J
.
‰	‰	J K
GetSpParameterSet
‰	‰	K \
(
‰	‰	\ ]
transaction
‰	‰	] h
.
‰	‰	h i

Connection
‰	‰	i s
,
‰	‰	s t
spName
‰	‰	u {
)
‰	‰	{ |
;
‰	‰	| }#
AssignParameterValues
Ê	Ê	 %
(
Ê	Ê	% &
commandParameters
Ê	Ê	& 7
,
Ê	Ê	7 8
parameterValues
Ê	Ê	9 H
)
Ê	Ê	H I
;
Ê	Ê	I J
return
Ë	Ë	 
ExecuteReader
Ë	Ë	 $
(
Ë	Ë	$ %
transaction
Ë	Ë	% 0
,
Ë	Ë	0 1
CommandType
Ë	Ë	2 =
.
Ë	Ë	= >
StoredProcedure
Ë	Ë	> M
,
Ë	Ë	M N
spName
Ë	Ë	O U
,
Ë	Ë	U V
commandParameters
Ë	Ë	W h
)
Ë	Ë	h i
;
Ë	Ë	i j
}
È	È	 
else
Í	Í	 
{
Î	Î	 
return
Ì	Ì	 
ExecuteReader
Ì	Ì	 $
(
Ì	Ì	$ %
transaction
Ì	Ì	% 0
,
Ì	Ì	0 1
CommandType
Ì	Ì	2 =
.
Ì	Ì	= >
StoredProcedure
Ì	Ì	> M
,
Ì	Ì	M N
spName
Ì	Ì	O U
)
Ì	Ì	U V
;
Ì	Ì	V W
}
Ó	Ó	 
}
Ô	Ô	 	
internal
Å
Å
 
static
Å
Å
 
object
Å
Å
 
ExecuteScalar
Å
Å
 ,
(
Å
Å
, -
string
Å
Å
- 3
connectionString
Å
Å
4 D
,
Å
Å
D E
CommandType
Å
Å
F Q
commandType
Å
Å
R ]
,
Å
Å
] ^
string
Å
Å
_ e
commandText
Å
Å
f q
)
Å
Å
q r
{
Ç
Ç
 	
return
Ñ
Ñ
 
ExecuteScalar
Ñ
Ñ
  
(
Ñ
Ñ
  !
connectionString
Ñ
Ñ
! 1
,
Ñ
Ñ
1 2
commandType
Ñ
Ñ
3 >
,
Ñ
Ñ
> ?
commandText
Ñ
Ñ
@ K
,
Ñ
Ñ
K L
null
Ñ
Ñ
M Q
)
Ñ
Ñ
Q R
;
Ñ
Ñ
R S
}
Ö
Ö
 	
internal
î
î
 
static
î
î
 
object
î
î
 
ExecuteScalar
î
î
 ,
(
î
î
, -
string
î
î
- 3
connectionString
î
î
4 D
,
î
î
D E
CommandType
î
î
F Q
commandType
î
î
R ]
,
î
î
] ^
string
î
î
_ e
commandText
î
î
f q
,
î
î
q r
params
î
î
s y
SqlParameterî
î
z Ü
[î
î
Ü á
]î
î
á à!
commandParametersî
î
â ö
)î
î
ö õ
{
ï
ï
 	
if
ñ
ñ
 
(
ñ
ñ
 
connectionString
ñ
ñ
  
==
ñ
ñ
! #
null
ñ
ñ
$ (
||
ñ
ñ
) +
connectionString
ñ
ñ
, <
.
ñ
ñ
< =
Length
ñ
ñ
= C
==
ñ
ñ
D F
$num
ñ
ñ
G H
)
ñ
ñ
H I
throw
ñ
ñ
J O
new
ñ
ñ
P S#
ArgumentNullException
ñ
ñ
T i
(
ñ
ñ
i j
$str
ñ
ñ
j |
)
ñ
ñ
| }
;
ñ
ñ
} ~$
clearSQLPoolConnection
ò
ò
 "
(
ò
ò
" #
)
ò
ò
# $
;
ò
ò
$ %
using
ö
ö
 
(
ö
ö
 
SqlConnection
ö
ö
  

connection
ö
ö
! +
=
ö
ö
, -
new
ö
ö
. 1
SqlConnection
ö
ö
2 ?
(
ö
ö
? @
connectionString
ö
ö
@ P
)
ö
ö
P Q
)
ö
ö
Q R
{
õ
õ
 

connection
ú
ú
 
.
ú
ú
 
Open
ú
ú
 
(
ú
ú
  
)
ú
ú
  !
;
ú
ú
! "
return
ü
ü
 
ExecuteScalar
ü
ü
 $
(
ü
ü
$ %

connection
ü
ü
% /
,
ü
ü
/ 0
commandType
ü
ü
1 <
,
ü
ü
< =
commandText
ü
ü
> I
,
ü
ü
I J
commandParameters
ü
ü
K \
)
ü
ü
\ ]
;
ü
ü
] ^
}
†
†
 
}
°
°
 	
internal
£
£
 
static
£
£
 
object
£
£
 
ExecuteScalar
£
£
 ,
(
£
£
, -
string
£
£
- 3
connectionString
£
£
4 D
,
£
£
D E
string
£
£
F L
commandText
£
£
M X
,
£
£
X Y
CommandType
£
£
Z e
commandType
£
£
f q
,
£
£
q r
params
£
£
s y
SqlParameter£
£
z Ü
[£
£
Ü á
]£
£
á à!
commandParameters£
£
â ö
)£
£
ö õ
{
§
§
 	
if
•
•
 
(
•
•
 
connectionString
•
•
  
==
•
•
! #
null
•
•
$ (
||
•
•
) +
connectionString
•
•
, <
.
•
•
< =
Length
•
•
= C
==
•
•
D F
$num
•
•
G H
)
•
•
H I
throw
•
•
J O
new
•
•
P S#
ArgumentNullException
•
•
T i
(
•
•
i j
$str
•
•
j |
)
•
•
| }
;
•
•
} ~$
clearSQLPoolConnection
ß
ß
 "
(
ß
ß
" #
)
ß
ß
# $
;
ß
ß
$ %
using
©
©
 
(
©
©
 
SqlConnection
©
©
  

connection
©
©
! +
=
©
©
, -
new
©
©
. 1
SqlConnection
©
©
2 ?
(
©
©
? @
connectionString
©
©
@ P
)
©
©
P Q
)
©
©
Q R
{
™
™
 

connection
´
´
 
.
´
´
 
Open
´
´
 
(
´
´
  
)
´
´
  !
;
´
´
! "
return
Æ
Æ
 
ExecuteScalar
Æ
Æ
 $
(
Æ
Æ
$ %

connection
Æ
Æ
% /
,
Æ
Æ
/ 0
commandType
Æ
Æ
1 <
,
Æ
Æ
< =
commandText
Æ
Æ
> I
,
Æ
Æ
I J
commandParameters
Æ
Æ
K \
)
Æ
Æ
\ ]
;
Æ
Æ
] ^
}
Ø
Ø
 
}
∞
∞
 	
internal
¡
¡
 
static
¡
¡
 
object
¡
¡
 
ExecuteScalar
¡
¡
 ,
(
¡
¡
, -
string
¡
¡
- 3
connectionString
¡
¡
4 D
,
¡
¡
D E
string
¡
¡
F L
spName
¡
¡
M S
,
¡
¡
S T
params
¡
¡
U [
object
¡
¡
\ b
[
¡
¡
b c
]
¡
¡
c d
parameterValues
¡
¡
e t
)
¡
¡
t u
{
¬
¬
 	
if
√
√
 
(
√
√
 
connectionString
√
√
  
==
√
√
! #
null
√
√
$ (
||
√
√
) +
connectionString
√
√
, <
.
√
√
< =
Length
√
√
= C
==
√
√
D F
$num
√
√
G H
)
√
√
H I
throw
√
√
J O
new
√
√
P S#
ArgumentNullException
√
√
T i
(
√
√
i j
$str
√
√
j |
)
√
√
| }
;
√
√
} ~
if
ƒ
ƒ
 
(
ƒ
ƒ
 
spName
ƒ
ƒ
 
==
ƒ
ƒ
 
null
ƒ
ƒ
 
||
ƒ
ƒ
 !
spName
ƒ
ƒ
" (
.
ƒ
ƒ
( )
Length
ƒ
ƒ
) /
==
ƒ
ƒ
0 2
$num
ƒ
ƒ
3 4
)
ƒ
ƒ
4 5
throw
ƒ
ƒ
6 ;
new
ƒ
ƒ
< ?#
ArgumentNullException
ƒ
ƒ
@ U
(
ƒ
ƒ
U V
$str
ƒ
ƒ
V ^
)
ƒ
ƒ
^ _
;
ƒ
ƒ
_ `
if
«
«
 
(
«
«
 
parameterValues
«
«
 
!=
«
«
  "
null
«
«
# '
&&
«
«
( *
parameterValues
«
«
+ :
.
«
«
: ;
Length
«
«
; A
>
«
«
B C
$num
«
«
D E
)
«
«
E F
{
»
»
 
SqlParameter
 
 
 
[
 
 
 
]
 
 
 
commandParameters
 
 
 0
=
 
 
1 2%
SqlHelperParameterCache
 
 
3 J
.
 
 
J K
GetSpParameterSet
 
 
K \
(
 
 
\ ]
connectionString
 
 
] m
,
 
 
m n
spName
 
 
o u
)
 
 
u v
;
 
 
v w#
AssignParameterValues
Õ
Õ
 %
(
Õ
Õ
% &
commandParameters
Õ
Õ
& 7
,
Õ
Õ
7 8
parameterValues
Õ
Õ
9 H
)
Õ
Õ
H I
;
Õ
Õ
I J
return
–
–
 
ExecuteScalar
–
–
 $
(
–
–
$ %
connectionString
–
–
% 5
,
–
–
5 6
CommandType
–
–
7 B
.
–
–
B C
StoredProcedure
–
–
C R
,
–
–
R S
spName
–
–
T Z
,
–
–
Z [
commandParameters
–
–
\ m
)
–
–
m n
;
–
–
n o
}
—
—
 
else
“
“
 
{
”
”
 
return
’
’
 
ExecuteScalar
’
’
 $
(
’
’
$ %
connectionString
’
’
% 5
,
’
’
5 6
CommandType
’
’
7 B
.
’
’
B C
StoredProcedure
’
’
C R
,
’
’
R S
spName
’
’
T Z
)
’
’
Z [
;
’
’
[ \
}
÷
÷
 
}
◊
◊
 	
internal
‰
‰
 
static
‰
‰
 
object
‰
‰
 
ExecuteScalar
‰
‰
 ,
(
‰
‰
, -
SqlConnection
‰
‰
- :

connection
‰
‰
; E
,
‰
‰
E F
CommandType
‰
‰
G R
commandType
‰
‰
S ^
,
‰
‰
^ _
string
‰
‰
` f
commandText
‰
‰
g r
)
‰
‰
r s
{
Â
Â
 	
return
Á
Á
 
ExecuteScalar
Á
Á
  
(
Á
Á
  !

connection
Á
Á
! +
,
Á
Á
+ ,
commandType
Á
Á
- 8
,
Á
Á
8 9
commandText
Á
Á
: E
,
Á
Á
E F
null
Á
Á
G K
)
Á
Á
K L
;
Á
Á
L M
}
Ë
Ë
 	
internal
˜
˜
 
static
˜
˜
 
object
˜
˜
 
ExecuteScalar
˜
˜
 ,
(
˜
˜
, -
SqlConnection
˜
˜
- :

connection
˜
˜
; E
,
˜
˜
E F
CommandType
˜
˜
G R
commandType
˜
˜
S ^
,
˜
˜
^ _
string
˜
˜
` f
commandText
˜
˜
g r
,
˜
˜
r s
params
˜
˜
t z
SqlParameter˜
˜
{ á
[˜
˜
á à
]˜
˜
à â!
commandParameters˜
˜
ä õ
)˜
˜
õ ú
{
¯
¯
 	
if
˘
˘
 
(
˘
˘
 

connection
˘
˘
 
==
˘
˘
 
null
˘
˘
 "
)
˘
˘
" #
throw
˘
˘
$ )
new
˘
˘
* -#
ArgumentNullException
˘
˘
. C
(
˘
˘
C D
$str
˘
˘
D P
)
˘
˘
P Q
;
˘
˘
Q R

SqlCommand
¸
¸
 
cmd
¸
¸
 
=
¸
¸
 
new
¸
¸
  

SqlCommand
¸
¸
! +
(
¸
¸
+ ,
)
¸
¸
, -
;
¸
¸
- .
bool
˛
˛
 !
mustCloseConnection
˛
˛
 $
=
˛
˛
% &
false
˛
˛
' ,
;
˛
˛
, -
PrepareCommand
ˇ
ˇ
 
(
ˇ
ˇ
 
cmd
ˇ
ˇ
 
,
ˇ
ˇ
 

connection
ˇ
ˇ
  *
,
ˇ
ˇ
* +
null
ˇ
ˇ
, 0
,
ˇ
ˇ
0 1
commandType
ˇ
ˇ
2 =
,
ˇ
ˇ
= >
commandText
ˇ
ˇ
? J
,
ˇ
ˇ
J K
commandParameters
ˇ
ˇ
L ]
,
ˇ
ˇ
] ^
out
ˇ
ˇ
_ b!
mustCloseConnection
ˇ
ˇ
c v
)
ˇ
ˇ
v w
;
ˇ
ˇ
w x
object
ÇÇ 
retval
ÇÇ 
=
ÇÇ 
cmd
ÇÇ 
.
ÇÇ  
ExecuteScalar
ÇÇ  -
(
ÇÇ- .
)
ÇÇ. /
;
ÇÇ/ 0
cmd
ÖÖ 
.
ÖÖ 

Parameters
ÖÖ 
.
ÖÖ 
Clear
ÖÖ  
(
ÖÖ  !
)
ÖÖ! "
;
ÖÖ" #

connection
àà 
.
àà 
Close
àà 
(
àà 
)
àà 
;
àà 
return
ää 
retval
ää 
;
ää 
}
ãã 	
internal
úú 
static
úú 
object
úú 
ExecuteScalar
úú ,
(
úú, -
SqlConnection
úú- :

connection
úú; E
,
úúE F
string
úúG M
spName
úúN T
,
úúT U
params
úúV \
object
úú] c
[
úúc d
]
úúd e
parameterValues
úúf u
)
úúu v
{
ùù 	
if
ûû 
(
ûû 

connection
ûû 
==
ûû 
null
ûû "
)
ûû" #
throw
ûû$ )
new
ûû* -#
ArgumentNullException
ûû. C
(
ûûC D
$str
ûûD P
)
ûûP Q
;
ûûQ R
if
üü 
(
üü 
spName
üü 
==
üü 
null
üü 
||
üü !
spName
üü" (
.
üü( )
Length
üü) /
==
üü0 2
$num
üü3 4
)
üü4 5
throw
üü6 ;
new
üü< ?#
ArgumentNullException
üü@ U
(
üüU V
$str
üüV ^
)
üü^ _
;
üü_ `
if
¢¢ 
(
¢¢ 
parameterValues
¢¢ 
!=
¢¢  "
null
¢¢# '
&&
¢¢( *
parameterValues
¢¢+ :
.
¢¢: ;
Length
¢¢; A
>
¢¢B C
$num
¢¢D E
)
¢¢E F
{
££ 
SqlParameter
•• 
[
•• 
]
•• 
commandParameters
•• 0
=
••1 2%
SqlHelperParameterCache
••3 J
.
••J K
GetSpParameterSet
••K \
(
••\ ]

connection
••] g
,
••g h
spName
••i o
)
••o p
;
••p q#
AssignParameterValues
®® %
(
®®% &
commandParameters
®®& 7
,
®®7 8
parameterValues
®®9 H
)
®®H I
;
®®I J
return
´´ 
ExecuteScalar
´´ $
(
´´$ %

connection
´´% /
,
´´/ 0
CommandType
´´1 <
.
´´< =
StoredProcedure
´´= L
,
´´L M
spName
´´N T
,
´´T U
commandParameters
´´V g
)
´´g h
;
´´h i
}
¨¨ 
else
≠≠ 
{
ÆÆ 
return
∞∞ 
ExecuteScalar
∞∞ $
(
∞∞$ %

connection
∞∞% /
,
∞∞/ 0
CommandType
∞∞1 <
.
∞∞< =
StoredProcedure
∞∞= L
,
∞∞L M
spName
∞∞N T
)
∞∞T U
;
∞∞U V
}
±± 
}
≤≤ 	
internal
øø 
static
øø 
object
øø 
ExecuteScalar
øø ,
(
øø, -
SqlTransaction
øø- ;
transaction
øø< G
,
øøG H
CommandType
øøI T
commandType
øøU `
,
øø` a
string
øøb h
commandText
øøi t
)
øøt u
{
¿¿ 	
return
¬¬ 
ExecuteScalar
¬¬  
(
¬¬  !
transaction
¬¬! ,
,
¬¬, -
commandType
¬¬. 9
,
¬¬9 :
commandText
¬¬; F
,
¬¬F G
null
¬¬H L
)
¬¬L M
;
¬¬M N
}
√√ 	
internal
““ 
static
““ 
object
““ 
ExecuteScalar
““ ,
(
““, -
SqlTransaction
““- ;
transaction
““< G
,
““G H
CommandType
““I T
commandType
““U `
,
““` a
string
““b h
commandText
““i t
,
““t u
params
““v |
SqlParameter““} â
[““â ä
]““ä ã!
commandParameters““å ù
)““ù û
{
”” 	
if
‘‘ 
(
‘‘ 
transaction
‘‘ 
==
‘‘ 
null
‘‘ #
)
‘‘# $
throw
‘‘% *
new
‘‘+ .#
ArgumentNullException
‘‘/ D
(
‘‘D E
$str
‘‘E R
)
‘‘R S
;
‘‘S T
if
’’ 
(
’’ 
transaction
’’ 
!=
’’ 
null
’’ #
&&
’’$ &
transaction
’’' 2
.
’’2 3

Connection
’’3 =
==
’’> @
null
’’A E
)
’’E F
throw
’’G L
new
’’M P
ArgumentException
’’Q b
(
’’b c
$str’’c ¥
,’’¥ µ
$str’’∂ √
)’’√ ƒ
;’’ƒ ≈

SqlCommand
ÿÿ 
cmd
ÿÿ 
=
ÿÿ 
new
ÿÿ  

SqlCommand
ÿÿ! +
(
ÿÿ+ ,
)
ÿÿ, -
;
ÿÿ- .
bool
ŸŸ !
mustCloseConnection
ŸŸ $
=
ŸŸ% &
false
ŸŸ' ,
;
ŸŸ, -
PrepareCommand
⁄⁄ 
(
⁄⁄ 
cmd
⁄⁄ 
,
⁄⁄ 
transaction
⁄⁄  +
.
⁄⁄+ ,

Connection
⁄⁄, 6
,
⁄⁄6 7
transaction
⁄⁄8 C
,
⁄⁄C D
commandType
⁄⁄E P
,
⁄⁄P Q
commandText
⁄⁄R ]
,
⁄⁄] ^
commandParameters
⁄⁄_ p
,
⁄⁄p q
out
⁄⁄r u"
mustCloseConnection⁄⁄v â
)⁄⁄â ä
;⁄⁄ä ã
object
›› 
retval
›› 
=
›› 
cmd
›› 
.
››  
ExecuteScalar
››  -
(
››- .
)
››. /
;
››/ 0
cmd
‡‡ 
.
‡‡ 

Parameters
‡‡ 
.
‡‡ 
Clear
‡‡  
(
‡‡  !
)
‡‡! "
;
‡‡" #
return
·· 
retval
·· 
;
·· 
}
‚‚ 	
internal
ÛÛ 
static
ÛÛ 
object
ÛÛ 
ExecuteScalar
ÛÛ ,
(
ÛÛ, -
SqlTransaction
ÛÛ- ;
transaction
ÛÛ< G
,
ÛÛG H
string
ÛÛI O
spName
ÛÛP V
,
ÛÛV W
params
ÛÛX ^
object
ÛÛ_ e
[
ÛÛe f
]
ÛÛf g
parameterValues
ÛÛh w
)
ÛÛw x
{
ÙÙ 	
if
ıı 
(
ıı 
transaction
ıı 
==
ıı 
null
ıı #
)
ıı# $
throw
ıı% *
new
ıı+ .#
ArgumentNullException
ıı/ D
(
ııD E
$str
ııE R
)
ııR S
;
ııS T
if
ˆˆ 
(
ˆˆ 
transaction
ˆˆ 
!=
ˆˆ 
null
ˆˆ #
&&
ˆˆ$ &
transaction
ˆˆ' 2
.
ˆˆ2 3

Connection
ˆˆ3 =
==
ˆˆ> @
null
ˆˆA E
)
ˆˆE F
throw
ˆˆG L
new
ˆˆM P
ArgumentException
ˆˆQ b
(
ˆˆb c
$strˆˆc ¥
,ˆˆ¥ µ
$strˆˆ∂ √
)ˆˆ√ ƒ
;ˆˆƒ ≈
if
˜˜ 
(
˜˜ 
spName
˜˜ 
==
˜˜ 
null
˜˜ 
||
˜˜ !
spName
˜˜" (
.
˜˜( )
Length
˜˜) /
==
˜˜0 2
$num
˜˜3 4
)
˜˜4 5
throw
˜˜6 ;
new
˜˜< ?#
ArgumentNullException
˜˜@ U
(
˜˜U V
$str
˜˜V ^
)
˜˜^ _
;
˜˜_ `
if
˙˙ 
(
˙˙ 
parameterValues
˙˙ 
!=
˙˙  "
null
˙˙# '
&&
˙˙( *
parameterValues
˙˙+ :
.
˙˙: ;
Length
˙˙; A
>
˙˙B C
$num
˙˙D E
)
˙˙E F
{
˚˚ 
SqlParameter
˝˝ 
[
˝˝ 
]
˝˝ 
commandParameters
˝˝ 0
=
˝˝1 2%
SqlHelperParameterCache
˝˝3 J
.
˝˝J K
GetSpParameterSet
˝˝K \
(
˝˝\ ]
transaction
˝˝] h
.
˝˝h i

Connection
˝˝i s
,
˝˝s t
spName
˝˝u {
)
˝˝{ |
;
˝˝| }#
AssignParameterValues
ÄÄ %
(
ÄÄ% &
commandParameters
ÄÄ& 7
,
ÄÄ7 8
parameterValues
ÄÄ9 H
)
ÄÄH I
;
ÄÄI J
return
ÉÉ 
ExecuteScalar
ÉÉ $
(
ÉÉ$ %
transaction
ÉÉ% 0
,
ÉÉ0 1
CommandType
ÉÉ2 =
.
ÉÉ= >
StoredProcedure
ÉÉ> M
,
ÉÉM N
spName
ÉÉO U
,
ÉÉU V
commandParameters
ÉÉW h
)
ÉÉh i
;
ÉÉi j
}
ÑÑ 
else
ÖÖ 
{
ÜÜ 
return
àà 
ExecuteScalar
àà $
(
àà$ %
transaction
àà% 0
,
àà0 1
CommandType
àà2 =
.
àà= >
StoredProcedure
àà> M
,
ààM N
spName
ààO U
)
ààU V
;
ààV W
}
ââ 
}
ää 	
internal
õõ 
static
õõ 
	XmlReader
õõ !
ExecuteXmlReader
õõ" 2
(
õõ2 3
SqlConnection
õõ3 @

connection
õõA K
,
õõK L
CommandType
õõM X
commandType
õõY d
,
õõd e
string
õõf l
commandText
õõm x
)
õõx y
{
úú 	
return
ûû 
ExecuteXmlReader
ûû #
(
ûû# $

connection
ûû$ .
,
ûû. /
commandType
ûû0 ;
,
ûû; <
commandText
ûû= H
,
ûûH I
null
ûûJ N
)
ûûN O
;
ûûO P
}
üü 	
internal
ÆÆ 
static
ÆÆ 
	XmlReader
ÆÆ !
ExecuteXmlReader
ÆÆ" 2
(
ÆÆ2 3
SqlConnection
ÆÆ3 @

connection
ÆÆA K
,
ÆÆK L
CommandType
ÆÆM X
commandType
ÆÆY d
,
ÆÆd e
string
ÆÆf l
commandText
ÆÆm x
,
ÆÆx y
paramsÆÆz Ä
SqlParameterÆÆÅ ç
[ÆÆç é
]ÆÆé è!
commandParametersÆÆê °
)ÆÆ° ¢
{
ØØ 	
if
∞∞ 
(
∞∞ 

connection
∞∞ 
==
∞∞ 
null
∞∞ "
)
∞∞" #
throw
∞∞$ )
new
∞∞* -#
ArgumentNullException
∞∞. C
(
∞∞C D
$str
∞∞D P
)
∞∞P Q
;
∞∞Q R
bool
≤≤ !
mustCloseConnection
≤≤ $
=
≤≤% &
false
≤≤' ,
;
≤≤, -

SqlCommand
¥¥ 
cmd
¥¥ 
=
¥¥ 
new
¥¥  

SqlCommand
¥¥! +
(
¥¥+ ,
)
¥¥, -
;
¥¥- .
try
µµ 
{
∂∂ 
PrepareCommand
∑∑ 
(
∑∑ 
cmd
∑∑ "
,
∑∑" #

connection
∑∑$ .
,
∑∑. /
null
∑∑0 4
,
∑∑4 5
commandType
∑∑6 A
,
∑∑A B
commandText
∑∑C N
,
∑∑N O
commandParameters
∑∑P a
,
∑∑a b
out
∑∑c f!
mustCloseConnection
∑∑g z
)
∑∑z {
;
∑∑{ |
	XmlReader
∫∫ 
retval
∫∫  
=
∫∫! "
cmd
∫∫# &
.
∫∫& '
ExecuteXmlReader
∫∫' 7
(
∫∫7 8
)
∫∫8 9
;
∫∫9 :
cmd
ΩΩ 
.
ΩΩ 

Parameters
ΩΩ 
.
ΩΩ 
Clear
ΩΩ $
(
ΩΩ$ %
)
ΩΩ% &
;
ΩΩ& '
return
øø 
retval
øø 
;
øø 
}
¿¿ 
catch
¡¡ 
{
¬¬ 
if
√√ 
(
√√ !
mustCloseConnection
√√ '
)
√√' (

connection
ƒƒ 
.
ƒƒ 
Close
ƒƒ $
(
ƒƒ$ %
)
ƒƒ% &
;
ƒƒ& '
throw
≈≈ 
;
≈≈ 
}
∆∆ 
}
«« 	
internal
ÿÿ 
static
ÿÿ 
	XmlReader
ÿÿ !
ExecuteXmlReader
ÿÿ" 2
(
ÿÿ2 3
SqlConnection
ÿÿ3 @

connection
ÿÿA K
,
ÿÿK L
string
ÿÿM S
spName
ÿÿT Z
,
ÿÿZ [
params
ÿÿ\ b
object
ÿÿc i
[
ÿÿi j
]
ÿÿj k
parameterValues
ÿÿl {
)
ÿÿ{ |
{
ŸŸ 	
if
⁄⁄ 
(
⁄⁄ 

connection
⁄⁄ 
==
⁄⁄ 
null
⁄⁄ "
)
⁄⁄" #
throw
⁄⁄$ )
new
⁄⁄* -#
ArgumentNullException
⁄⁄. C
(
⁄⁄C D
$str
⁄⁄D P
)
⁄⁄P Q
;
⁄⁄Q R
if
€€ 
(
€€ 
spName
€€ 
==
€€ 
null
€€ 
||
€€ !
spName
€€" (
.
€€( )
Length
€€) /
==
€€0 2
$num
€€3 4
)
€€4 5
throw
€€6 ;
new
€€< ?#
ArgumentNullException
€€@ U
(
€€U V
$str
€€V ^
)
€€^ _
;
€€_ `
if
ﬁﬁ 
(
ﬁﬁ 
parameterValues
ﬁﬁ 
!=
ﬁﬁ  "
null
ﬁﬁ# '
&&
ﬁﬁ( *
parameterValues
ﬁﬁ+ :
.
ﬁﬁ: ;
Length
ﬁﬁ; A
>
ﬁﬁB C
$num
ﬁﬁD E
)
ﬁﬁE F
{
ﬂﬂ 
SqlParameter
·· 
[
·· 
]
·· 
commandParameters
·· 0
=
··1 2%
SqlHelperParameterCache
··3 J
.
··J K
GetSpParameterSet
··K \
(
··\ ]

connection
··] g
,
··g h
spName
··i o
)
··o p
;
··p q#
AssignParameterValues
‰‰ %
(
‰‰% &
commandParameters
‰‰& 7
,
‰‰7 8
parameterValues
‰‰9 H
)
‰‰H I
;
‰‰I J
return
ÁÁ 
ExecuteXmlReader
ÁÁ '
(
ÁÁ' (

connection
ÁÁ( 2
,
ÁÁ2 3
CommandType
ÁÁ4 ?
.
ÁÁ? @
StoredProcedure
ÁÁ@ O
,
ÁÁO P
spName
ÁÁQ W
,
ÁÁW X
commandParameters
ÁÁY j
)
ÁÁj k
;
ÁÁk l
}
ËË 
else
ÈÈ 
{
ÍÍ 
return
ÏÏ 
ExecuteXmlReader
ÏÏ '
(
ÏÏ' (

connection
ÏÏ( 2
,
ÏÏ2 3
CommandType
ÏÏ4 ?
.
ÏÏ? @
StoredProcedure
ÏÏ@ O
,
ÏÏO P
spName
ÏÏQ W
)
ÏÏW X
;
ÏÏX Y
}
ÌÌ 
}
ÓÓ 	
internal
˚˚ 
static
˚˚ 
	XmlReader
˚˚ !
ExecuteXmlReader
˚˚" 2
(
˚˚2 3
SqlTransaction
˚˚3 A
transaction
˚˚B M
,
˚˚M N
CommandType
˚˚O Z
commandType
˚˚[ f
,
˚˚f g
string
˚˚h n
commandText
˚˚o z
)
˚˚z {
{
¸¸ 	
return
˛˛ 
ExecuteXmlReader
˛˛ #
(
˛˛# $
transaction
˛˛$ /
,
˛˛/ 0
commandType
˛˛1 <
,
˛˛< =
commandText
˛˛> I
,
˛˛I J
null
˛˛K O
)
˛˛O P
;
˛˛P Q
}
ˇˇ 	
internal
éé 
static
éé 
	XmlReader
éé !
ExecuteXmlReader
éé" 2
(
éé2 3
SqlTransaction
éé3 A
transaction
ééB M
,
ééM N
CommandType
ééO Z
commandType
éé[ f
,
ééf g
string
ééh n
commandText
ééo z
,
ééz {
paramséé| Ç
SqlParameterééÉ è
[ééè ê
]ééê ë!
commandParametersééí £
)éé£ §
{
èè 	
if
êê 
(
êê 
transaction
êê 
==
êê 
null
êê #
)
êê# $
throw
êê% *
new
êê+ .#
ArgumentNullException
êê/ D
(
êêD E
$str
êêE R
)
êêR S
;
êêS T
if
ëë 
(
ëë 
transaction
ëë 
!=
ëë 
null
ëë #
&&
ëë$ &
transaction
ëë' 2
.
ëë2 3

Connection
ëë3 =
==
ëë> @
null
ëëA E
)
ëëE F
throw
ëëG L
new
ëëM P
ArgumentException
ëëQ b
(
ëëb c
$strëëc ¥
,ëë¥ µ
$strëë∂ √
)ëë√ ƒ
;ëëƒ ≈

SqlCommand
îî 
cmd
îî 
=
îî 
new
îî  

SqlCommand
îî! +
(
îî+ ,
)
îî, -
;
îî- .
bool
ïï !
mustCloseConnection
ïï $
=
ïï% &
false
ïï' ,
;
ïï, -
PrepareCommand
ññ 
(
ññ 
cmd
ññ 
,
ññ 
transaction
ññ  +
.
ññ+ ,

Connection
ññ, 6
,
ññ6 7
transaction
ññ8 C
,
ññC D
commandType
ññE P
,
ññP Q
commandText
ññR ]
,
ññ] ^
commandParameters
ññ_ p
,
ññp q
out
ññr u"
mustCloseConnectionññv â
)ññâ ä
;ññä ã
	XmlReader
ôô 
retval
ôô 
=
ôô 
cmd
ôô "
.
ôô" #
ExecuteXmlReader
ôô# 3
(
ôô3 4
)
ôô4 5
;
ôô5 6
cmd
úú 
.
úú 

Parameters
úú 
.
úú 
Clear
úú  
(
úú  !
)
úú! "
;
úú" #
return
ùù 
retval
ùù 
;
ùù 
}
ûû 	
internal
ØØ 
static
ØØ 
	XmlReader
ØØ !
ExecuteXmlReader
ØØ" 2
(
ØØ2 3
SqlTransaction
ØØ3 A
transaction
ØØB M
,
ØØM N
string
ØØO U
spName
ØØV \
,
ØØ\ ]
params
ØØ^ d
object
ØØe k
[
ØØk l
]
ØØl m
parameterValues
ØØn }
)
ØØ} ~
{
∞∞ 	
if
±± 
(
±± 
transaction
±± 
==
±± 
null
±± #
)
±±# $
throw
±±% *
new
±±+ .#
ArgumentNullException
±±/ D
(
±±D E
$str
±±E R
)
±±R S
;
±±S T
if
≤≤ 
(
≤≤ 
transaction
≤≤ 
!=
≤≤ 
null
≤≤ #
&&
≤≤$ &
transaction
≤≤' 2
.
≤≤2 3

Connection
≤≤3 =
==
≤≤> @
null
≤≤A E
)
≤≤E F
throw
≤≤G L
new
≤≤M P
ArgumentException
≤≤Q b
(
≤≤b c
$str≤≤c ¥
,≤≤¥ µ
$str≤≤∂ √
)≤≤√ ƒ
;≤≤ƒ ≈
if
≥≥ 
(
≥≥ 
spName
≥≥ 
==
≥≥ 
null
≥≥ 
||
≥≥ !
spName
≥≥" (
.
≥≥( )
Length
≥≥) /
==
≥≥0 2
$num
≥≥3 4
)
≥≥4 5
throw
≥≥6 ;
new
≥≥< ?#
ArgumentNullException
≥≥@ U
(
≥≥U V
$str
≥≥V ^
)
≥≥^ _
;
≥≥_ `
if
∂∂ 
(
∂∂ 
parameterValues
∂∂ 
!=
∂∂  "
null
∂∂# '
&&
∂∂( *
parameterValues
∂∂+ :
.
∂∂: ;
Length
∂∂; A
>
∂∂B C
$num
∂∂D E
)
∂∂E F
{
∑∑ 
SqlParameter
ππ 
[
ππ 
]
ππ 
commandParameters
ππ 0
=
ππ1 2%
SqlHelperParameterCache
ππ3 J
.
ππJ K
GetSpParameterSet
ππK \
(
ππ\ ]
transaction
ππ] h
.
ππh i

Connection
ππi s
,
ππs t
spName
ππu {
)
ππ{ |
;
ππ| }#
AssignParameterValues
ºº %
(
ºº% &
commandParameters
ºº& 7
,
ºº7 8
parameterValues
ºº9 H
)
ººH I
;
ººI J
return
øø 
ExecuteXmlReader
øø '
(
øø' (
transaction
øø( 3
,
øø3 4
CommandType
øø5 @
.
øø@ A
StoredProcedure
øøA P
,
øøP Q
spName
øøR X
,
øøX Y
commandParameters
øøZ k
)
øøk l
;
øøl m
}
¿¿ 
else
¡¡ 
{
¬¬ 
return
ƒƒ 
ExecuteXmlReader
ƒƒ '
(
ƒƒ' (
transaction
ƒƒ( 3
,
ƒƒ3 4
CommandType
ƒƒ5 @
.
ƒƒ@ A
StoredProcedure
ƒƒA P
,
ƒƒP Q
spName
ƒƒR X
)
ƒƒX Y
;
ƒƒY Z
}
≈≈ 
}
∆∆ 	
internal
⁄⁄ 
static
⁄⁄ 
void
⁄⁄ 
FillDataset
⁄⁄ (
(
⁄⁄( )
string
⁄⁄) /
connectionString
⁄⁄0 @
,
⁄⁄@ A
CommandType
⁄⁄B M
commandType
⁄⁄N Y
,
⁄⁄Y Z
string
⁄⁄[ a
commandText
⁄⁄b m
,
⁄⁄m n
DataSet
⁄⁄o v
dataSet
⁄⁄w ~
,
⁄⁄~ 
string⁄⁄Ä Ü
[⁄⁄Ü á
]⁄⁄á à

tableNames⁄⁄â ì
)⁄⁄ì î
{
€€ 	
if
‹‹ 
(
‹‹ 
connectionString
‹‹  
==
‹‹! #
null
‹‹$ (
||
‹‹) +
connectionString
‹‹, <
.
‹‹< =
Length
‹‹= C
==
‹‹D F
$num
‹‹G H
)
‹‹H I
throw
‹‹J O
new
‹‹P S#
ArgumentNullException
‹‹T i
(
‹‹i j
$str
‹‹j |
)
‹‹| }
;
‹‹} ~
if
›› 
(
›› 
dataSet
›› 
==
›› 
null
›› 
)
››  
throw
››! &
new
››' *#
ArgumentNullException
››+ @
(
››@ A
$str
››A J
)
››J K
;
››K L$
clearSQLPoolConnection
ﬂﬂ "
(
ﬂﬂ" #
)
ﬂﬂ# $
;
ﬂﬂ$ %
using
·· 
(
·· 
SqlConnection
··  

connection
··! +
=
··, -
new
··. 1
SqlConnection
··2 ?
(
··? @
connectionString
··@ P
)
··P Q
)
··Q R
{
‚‚ 

connection
„„ 
.
„„ 
Open
„„ 
(
„„  
)
„„  !
;
„„! "
FillDataset
ÊÊ 
(
ÊÊ 

connection
ÊÊ &
,
ÊÊ& '
commandType
ÊÊ( 3
,
ÊÊ3 4
commandText
ÊÊ5 @
,
ÊÊ@ A
dataSet
ÊÊB I
,
ÊÊI J

tableNames
ÊÊK U
)
ÊÊU V
;
ÊÊV W
}
ÁÁ 
}
ËË 	
internal
˙˙ 
static
˙˙ 
void
˙˙ 
FillDataset
˙˙ (
(
˙˙( )
string
˙˙) /
connectionString
˙˙0 @
,
˙˙@ A
CommandType
˙˙B M
commandType
˙˙N Y
,
˙˙Y Z
string
˚˚ 
commandText
˚˚ 
,
˚˚ 
DataSet
˚˚  '
dataSet
˚˚( /
,
˚˚/ 0
string
˚˚1 7
[
˚˚7 8
]
˚˚8 9

tableNames
˚˚: D
,
˚˚D E
params
¸¸ 
SqlParameter
¸¸ 
[
¸¸  
]
¸¸  !
commandParameters
¸¸" 3
)
¸¸3 4
{
˝˝ 	
if
˛˛ 
(
˛˛ 
connectionString
˛˛  
==
˛˛! #
null
˛˛$ (
||
˛˛) +
connectionString
˛˛, <
.
˛˛< =
Length
˛˛= C
==
˛˛D F
$num
˛˛G H
)
˛˛H I
throw
˛˛J O
new
˛˛P S#
ArgumentNullException
˛˛T i
(
˛˛i j
$str
˛˛j |
)
˛˛| }
;
˛˛} ~
if
ˇˇ 
(
ˇˇ 
dataSet
ˇˇ 
==
ˇˇ 
null
ˇˇ 
)
ˇˇ  
throw
ˇˇ! &
new
ˇˇ' *#
ArgumentNullException
ˇˇ+ @
(
ˇˇ@ A
$str
ˇˇA J
)
ˇˇJ K
;
ˇˇK L$
clearSQLPoolConnection
ÅÅ "
(
ÅÅ" #
)
ÅÅ# $
;
ÅÅ$ %
using
ÉÉ 
(
ÉÉ 
SqlConnection
ÉÉ  

connection
ÉÉ! +
=
ÉÉ, -
new
ÉÉ. 1
SqlConnection
ÉÉ2 ?
(
ÉÉ? @
connectionString
ÉÉ@ P
)
ÉÉP Q
)
ÉÉQ R
{
ÑÑ 

connection
ÖÖ 
.
ÖÖ 
Open
ÖÖ 
(
ÖÖ  
)
ÖÖ  !
;
ÖÖ! "
FillDataset
àà 
(
àà 

connection
àà &
,
àà& '
commandType
àà( 3
,
àà3 4
commandText
àà5 @
,
àà@ A
dataSet
ààB I
,
ààI J

tableNames
ààK U
,
ààU V
commandParameters
ààW h
)
ààh i
;
àài j
}
ââ 
}
ää 	
internal
ûû 
static
ûû 
void
ûû 
FillDataset
ûû (
(
ûû( )
string
ûû) /
connectionString
ûû0 @
,
ûû@ A
string
ûûB H
spName
ûûI O
,
ûûO P
DataSet
üü 
dataSet
üü 
,
üü 
string
üü #
[
üü# $
]
üü$ %

tableNames
üü& 0
,
üü0 1
params
†† 
object
†† 
[
†† 
]
†† 
parameterValues
†† +
)
††+ ,
{
°° 	
if
¢¢ 
(
¢¢ 
connectionString
¢¢  
==
¢¢! #
null
¢¢$ (
||
¢¢) +
connectionString
¢¢, <
.
¢¢< =
Length
¢¢= C
==
¢¢D F
$num
¢¢G H
)
¢¢H I
throw
¢¢J O
new
¢¢P S#
ArgumentNullException
¢¢T i
(
¢¢i j
$str
¢¢j |
)
¢¢| }
;
¢¢} ~
if
££ 
(
££ 
dataSet
££ 
==
££ 
null
££ 
)
££  
throw
££! &
new
££' *#
ArgumentNullException
££+ @
(
££@ A
$str
££A J
)
££J K
;
££K L$
clearSQLPoolConnection
•• "
(
••" #
)
••# $
;
••$ %
using
ßß 
(
ßß 
SqlConnection
ßß  

connection
ßß! +
=
ßß, -
new
ßß. 1
SqlConnection
ßß2 ?
(
ßß? @
connectionString
ßß@ P
)
ßßP Q
)
ßßQ R
{
®® 

connection
©© 
.
©© 
Open
©© 
(
©©  
)
©©  !
;
©©! "
FillDataset
¨¨ 
(
¨¨ 

connection
¨¨ &
,
¨¨& '
spName
¨¨( .
,
¨¨. /
dataSet
¨¨0 7
,
¨¨7 8

tableNames
¨¨9 C
,
¨¨C D
parameterValues
¨¨E T
)
¨¨T U
;
¨¨U V
}
≠≠ 
}
ÆÆ 	
internal
ææ 
static
ææ 
void
ææ 
FillDataset
ææ (
(
ææ( )
SqlConnection
ææ) 6

connection
ææ7 A
,
ææA B
CommandType
ææC N
commandType
ææO Z
,
ææZ [
string
øø 
commandText
øø 
,
øø 
DataSet
øø  '
dataSet
øø( /
,
øø/ 0
string
øø1 7
[
øø7 8
]
øø8 9

tableNames
øø: D
)
øøD E
{
¿¿ 	
FillDataset
¡¡ 
(
¡¡ 

connection
¡¡ "
,
¡¡" #
commandType
¡¡$ /
,
¡¡/ 0
commandText
¡¡1 <
,
¡¡< =
dataSet
¡¡> E
,
¡¡E F

tableNames
¡¡G Q
,
¡¡Q R
null
¡¡S W
)
¡¡W X
;
¡¡X Y
}
¬¬ 	
internal
‘‘ 
static
‘‘ 
void
‘‘ 
FillDataset
‘‘ (
(
‘‘( )
SqlConnection
‘‘) 6

connection
‘‘7 A
,
‘‘A B
CommandType
‘‘C N
commandType
‘‘O Z
,
‘‘Z [
string
’’ 
commandText
’’ 
,
’’ 
DataSet
’’  '
dataSet
’’( /
,
’’/ 0
string
’’1 7
[
’’7 8
]
’’8 9

tableNames
’’: D
,
’’D E
params
÷÷ 
SqlParameter
÷÷ 
[
÷÷  
]
÷÷  !
commandParameters
÷÷" 3
)
÷÷3 4
{
◊◊ 	
FillDataset
ÿÿ 
(
ÿÿ 

connection
ÿÿ "
,
ÿÿ" #
null
ÿÿ$ (
,
ÿÿ( )
commandType
ÿÿ* 5
,
ÿÿ5 6
commandText
ÿÿ7 B
,
ÿÿB C
dataSet
ÿÿD K
,
ÿÿK L

tableNames
ÿÿM W
,
ÿÿW X
commandParameters
ÿÿY j
)
ÿÿj k
;
ÿÿk l
}
ŸŸ 	
internal
ÌÌ 
static
ÌÌ 
void
ÌÌ 
FillDataset
ÌÌ (
(
ÌÌ( )
SqlConnection
ÌÌ) 6

connection
ÌÌ7 A
,
ÌÌA B
string
ÌÌC I
spName
ÌÌJ P
,
ÌÌP Q
DataSet
ÓÓ 
dataSet
ÓÓ 
,
ÓÓ 
string
ÓÓ #
[
ÓÓ# $
]
ÓÓ$ %

tableNames
ÓÓ& 0
,
ÓÓ0 1
params
ÔÔ 
object
ÔÔ 
[
ÔÔ 
]
ÔÔ 
parameterValues
ÔÔ +
)
ÔÔ+ ,
{
 	
if
ÒÒ 
(
ÒÒ 

connection
ÒÒ 
==
ÒÒ 
null
ÒÒ "
)
ÒÒ" #
throw
ÒÒ$ )
new
ÒÒ* -#
ArgumentNullException
ÒÒ. C
(
ÒÒC D
$str
ÒÒD P
)
ÒÒP Q
;
ÒÒQ R
if
ÚÚ 
(
ÚÚ 
dataSet
ÚÚ 
==
ÚÚ 
null
ÚÚ 
)
ÚÚ  
throw
ÚÚ! &
new
ÚÚ' *#
ArgumentNullException
ÚÚ+ @
(
ÚÚ@ A
$str
ÚÚA J
)
ÚÚJ K
;
ÚÚK L
if
ÛÛ 
(
ÛÛ 
spName
ÛÛ 
==
ÛÛ 
null
ÛÛ 
||
ÛÛ !
spName
ÛÛ" (
.
ÛÛ( )
Length
ÛÛ) /
==
ÛÛ0 2
$num
ÛÛ3 4
)
ÛÛ4 5
throw
ÛÛ6 ;
new
ÛÛ< ?#
ArgumentNullException
ÛÛ@ U
(
ÛÛU V
$str
ÛÛV ^
)
ÛÛ^ _
;
ÛÛ_ `
if
ˆˆ 
(
ˆˆ 
parameterValues
ˆˆ 
!=
ˆˆ  "
null
ˆˆ# '
&&
ˆˆ( *
parameterValues
ˆˆ+ :
.
ˆˆ: ;
Length
ˆˆ; A
>
ˆˆB C
$num
ˆˆD E
)
ˆˆE F
{
˜˜ 
SqlParameter
˘˘ 
[
˘˘ 
]
˘˘ 
commandParameters
˘˘ 0
=
˘˘1 2%
SqlHelperParameterCache
˘˘3 J
.
˘˘J K
GetSpParameterSet
˘˘K \
(
˘˘\ ]

connection
˘˘] g
,
˘˘g h
spName
˘˘i o
)
˘˘o p
;
˘˘p q#
AssignParameterValues
¸¸ %
(
¸¸% &
commandParameters
¸¸& 7
,
¸¸7 8
parameterValues
¸¸9 H
)
¸¸H I
;
¸¸I J
FillDataset
ˇˇ 
(
ˇˇ 

connection
ˇˇ &
,
ˇˇ& '
CommandType
ˇˇ( 3
.
ˇˇ3 4
StoredProcedure
ˇˇ4 C
,
ˇˇC D
spName
ˇˇE K
,
ˇˇK L
dataSet
ˇˇM T
,
ˇˇT U

tableNames
ˇˇV `
,
ˇˇ` a
commandParameters
ˇˇb s
)
ˇˇs t
;
ˇˇt u
}
ÄÄ 
else
ÅÅ 
{
ÇÇ 
FillDataset
ÑÑ 
(
ÑÑ 

connection
ÑÑ &
,
ÑÑ& '
CommandType
ÑÑ( 3
.
ÑÑ3 4
StoredProcedure
ÑÑ4 C
,
ÑÑC D
spName
ÑÑE K
,
ÑÑK L
dataSet
ÑÑM T
,
ÑÑT U

tableNames
ÑÑV `
)
ÑÑ` a
;
ÑÑa b
}
ÖÖ 
}
ÜÜ 	
internal
ññ 
static
ññ 
void
ññ 
FillDataset
ññ (
(
ññ( )
SqlTransaction
ññ) 7
transaction
ññ8 C
,
ññC D
CommandType
ññE P
commandType
ññQ \
,
ññ\ ]
string
óó 
commandText
óó 
,
óó 
DataSet
òò 
dataSet
òò 
,
òò 
string
òò #
[
òò# $
]
òò$ %

tableNames
òò& 0
)
òò0 1
{
ôô 	
FillDataset
öö 
(
öö 
transaction
öö #
,
öö# $
commandType
öö% 0
,
öö0 1
commandText
öö2 =
,
öö= >
dataSet
öö? F
,
ööF G

tableNames
ööH R
,
ööR S
null
ööT X
)
ööX Y
;
ööY Z
}
õõ 	
internal
≠≠ 
static
≠≠ 
void
≠≠ 
FillDataset
≠≠ (
(
≠≠( )
SqlTransaction
≠≠) 7
transaction
≠≠8 C
,
≠≠C D
CommandType
≠≠E P
commandType
≠≠Q \
,
≠≠\ ]
string
ÆÆ 
commandText
ÆÆ 
,
ÆÆ 
DataSet
ÆÆ  '
dataSet
ÆÆ( /
,
ÆÆ/ 0
string
ÆÆ1 7
[
ÆÆ7 8
]
ÆÆ8 9

tableNames
ÆÆ: D
,
ÆÆD E
params
ØØ 
SqlParameter
ØØ 
[
ØØ  
]
ØØ  !
commandParameters
ØØ" 3
)
ØØ3 4
{
∞∞ 	
FillDataset
±± 
(
±± 
transaction
±± #
.
±±# $

Connection
±±$ .
,
±±. /
transaction
±±0 ;
,
±±; <
commandType
±±= H
,
±±H I
commandText
±±J U
,
±±U V
dataSet
±±W ^
,
±±^ _

tableNames
±±` j
,
±±j k
commandParameters
±±l }
)
±±} ~
;
±±~ 
}
≤≤ 	
internal
∆∆ 
static
∆∆ 
void
∆∆ 
FillDataset
∆∆ (
(
∆∆( )
SqlTransaction
∆∆) 7
transaction
∆∆8 C
,
∆∆C D
string
∆∆E K
spName
∆∆L R
,
∆∆R S
DataSet
«« 
dataSet
«« 
,
«« 
string
«« #
[
««# $
]
««$ %

tableNames
««& 0
,
««0 1
params
»» 
object
»» 
[
»» 
]
»» 
parameterValues
»» +
)
»»+ ,
{
…… 	
if
   
(
   
transaction
   
==
   
null
   #
)
  # $
throw
  % *
new
  + .#
ArgumentNullException
  / D
(
  D E
$str
  E R
)
  R S
;
  S T
if
ÀÀ 
(
ÀÀ 
transaction
ÀÀ 
!=
ÀÀ 
null
ÀÀ #
&&
ÀÀ$ &
transaction
ÀÀ' 2
.
ÀÀ2 3

Connection
ÀÀ3 =
==
ÀÀ> @
null
ÀÀA E
)
ÀÀE F
throw
ÀÀG L
new
ÀÀM P
ArgumentException
ÀÀQ b
(
ÀÀb c
$strÀÀc ¥
,ÀÀ¥ µ
$strÀÀ∂ √
)ÀÀ√ ƒ
;ÀÀƒ ≈
if
ÃÃ 
(
ÃÃ 
dataSet
ÃÃ 
==
ÃÃ 
null
ÃÃ 
)
ÃÃ  
throw
ÃÃ! &
new
ÃÃ' *#
ArgumentNullException
ÃÃ+ @
(
ÃÃ@ A
$str
ÃÃA J
)
ÃÃJ K
;
ÃÃK L
if
ÕÕ 
(
ÕÕ 
spName
ÕÕ 
==
ÕÕ 
null
ÕÕ 
||
ÕÕ !
spName
ÕÕ" (
.
ÕÕ( )
Length
ÕÕ) /
==
ÕÕ0 2
$num
ÕÕ3 4
)
ÕÕ4 5
throw
ÕÕ6 ;
new
ÕÕ< ?#
ArgumentNullException
ÕÕ@ U
(
ÕÕU V
$str
ÕÕV ^
)
ÕÕ^ _
;
ÕÕ_ `
if
–– 
(
–– 
parameterValues
–– 
!=
––  "
null
––# '
&&
––( *
parameterValues
––+ :
.
––: ;
Length
––; A
>
––B C
$num
––D E
)
––E F
{
—— 
SqlParameter
”” 
[
”” 
]
”” 
commandParameters
”” 0
=
””1 2%
SqlHelperParameterCache
””3 J
.
””J K
GetSpParameterSet
””K \
(
””\ ]
transaction
””] h
.
””h i

Connection
””i s
,
””s t
spName
””u {
)
””{ |
;
””| }#
AssignParameterValues
÷÷ %
(
÷÷% &
commandParameters
÷÷& 7
,
÷÷7 8
parameterValues
÷÷9 H
)
÷÷H I
;
÷÷I J
FillDataset
ŸŸ 
(
ŸŸ 
transaction
ŸŸ '
,
ŸŸ' (
CommandType
ŸŸ) 4
.
ŸŸ4 5
StoredProcedure
ŸŸ5 D
,
ŸŸD E
spName
ŸŸF L
,
ŸŸL M
dataSet
ŸŸN U
,
ŸŸU V

tableNames
ŸŸW a
,
ŸŸa b
commandParameters
ŸŸc t
)
ŸŸt u
;
ŸŸu v
}
⁄⁄ 
else
€€ 
{
‹‹ 
FillDataset
ﬁﬁ 
(
ﬁﬁ 
transaction
ﬁﬁ '
,
ﬁﬁ' (
CommandType
ﬁﬁ) 4
.
ﬁﬁ4 5
StoredProcedure
ﬁﬁ5 D
,
ﬁﬁD E
spName
ﬁﬁF L
,
ﬁﬁL M
dataSet
ﬁﬁN U
,
ﬁﬁU V

tableNames
ﬁﬁW a
)
ﬁﬁa b
;
ﬁﬁb c
}
ﬂﬂ 
}
‡‡ 	
private
ÛÛ 
static
ÛÛ 
void
ÛÛ 
FillDataset
ÛÛ '
(
ÛÛ' (
SqlConnection
ÛÛ( 5

connection
ÛÛ6 @
,
ÛÛ@ A
SqlTransaction
ÛÛB P
transaction
ÛÛQ \
,
ÛÛ\ ]
CommandType
ÛÛ^ i
commandType
ÛÛj u
,
ÛÛu v
string
ÙÙ 
commandText
ÙÙ 
,
ÙÙ 
DataSet
ÙÙ  '
dataSet
ÙÙ( /
,
ÙÙ/ 0
string
ÙÙ1 7
[
ÙÙ7 8
]
ÙÙ8 9

tableNames
ÙÙ: D
,
ÙÙD E
params
ıı 
SqlParameter
ıı 
[
ıı  
]
ıı  !
commandParameters
ıı" 3
)
ıı3 4
{
ˆˆ 	
if
˜˜ 
(
˜˜ 

connection
˜˜ 
==
˜˜ 
null
˜˜ "
)
˜˜" #
throw
˜˜$ )
new
˜˜* -#
ArgumentNullException
˜˜. C
(
˜˜C D
$str
˜˜D P
)
˜˜P Q
;
˜˜Q R
if
¯¯ 
(
¯¯ 
dataSet
¯¯ 
==
¯¯ 
null
¯¯ 
)
¯¯  
throw
¯¯! &
new
¯¯' *#
ArgumentNullException
¯¯+ @
(
¯¯@ A
$str
¯¯A J
)
¯¯J K
;
¯¯K L

SqlCommand
˚˚ 
command
˚˚ 
=
˚˚  
new
˚˚! $

SqlCommand
˚˚% /
(
˚˚/ 0
)
˚˚0 1
;
˚˚1 2
bool
¸¸ !
mustCloseConnection
¸¸ $
=
¸¸% &
false
¸¸' ,
;
¸¸, -
PrepareCommand
˝˝ 
(
˝˝ 
command
˝˝ "
,
˝˝" #

connection
˝˝$ .
,
˝˝. /
transaction
˝˝0 ;
,
˝˝; <
commandType
˝˝= H
,
˝˝H I
commandText
˝˝J U
,
˝˝U V
commandParameters
˝˝W h
,
˝˝h i
out
˝˝j m"
mustCloseConnection˝˝n Å
)˝˝Å Ç
;˝˝Ç É
using
ÄÄ 
(
ÄÄ 
SqlDataAdapter
ÄÄ !
dataAdapter
ÄÄ" -
=
ÄÄ. /
new
ÄÄ0 3
SqlDataAdapter
ÄÄ4 B
(
ÄÄB C
command
ÄÄC J
)
ÄÄJ K
)
ÄÄK L
{
ÅÅ 
if
ÉÉ 
(
ÉÉ 

tableNames
ÉÉ 
!=
ÉÉ !
null
ÉÉ" &
&&
ÉÉ' )

tableNames
ÉÉ* 4
.
ÉÉ4 5
Length
ÉÉ5 ;
>
ÉÉ< =
$num
ÉÉ> ?
)
ÉÉ? @
{
ÑÑ 
string
ÖÖ 
	tableName
ÖÖ $
=
ÖÖ% &
$str
ÖÖ' .
;
ÖÖ. /
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
index
ÜÜ "
=
ÜÜ# $
$num
ÜÜ% &
;
ÜÜ& '
index
ÜÜ( -
<
ÜÜ. /

tableNames
ÜÜ0 :
.
ÜÜ: ;
Length
ÜÜ; A
;
ÜÜA B
index
ÜÜC H
++
ÜÜH J
)
ÜÜJ K
{
áá 
if
àà 
(
àà 

tableNames
àà &
[
àà& '
index
àà' ,
]
àà, -
==
àà. 0
null
àà1 5
||
àà6 8

tableNames
àà9 C
[
ààC D
index
ààD I
]
ààI J
.
ààJ K
Length
ààK Q
==
ààR T
$num
ààU V
)
ààV W
throw
ààX ]
new
àà^ a
ArgumentException
ààb s
(
ààs t
$strààt €
,àà€ ‹
$stràà› È
)ààÈ Í
;ààÍ Î
dataAdapter
ââ #
.
ââ# $
TableMappings
ââ$ 1
.
ââ1 2
Add
ââ2 5
(
ââ5 6
	tableName
ââ6 ?
,
ââ? @

tableNames
ââA K
[
ââK L
index
ââL Q
]
ââQ R
)
ââR S
;
ââS T
	tableName
ää !
+=
ää" $
(
ää% &
index
ää& +
+
ää, -
$num
ää. /
)
ää/ 0
.
ää0 1
ToString
ää1 9
(
ää9 :
)
ää: ;
;
ää; <
}
ãã 
}
åå 
dataAdapter
èè 
.
èè 
Fill
èè  
(
èè  !
dataSet
èè! (
)
èè( )
;
èè) *
command
íí 
.
íí 

Parameters
íí "
.
íí" #
Clear
íí# (
(
íí( )
)
íí) *
;
íí* +
}
ìì 
if
ïï 
(
ïï !
mustCloseConnection
ïï #
)
ïï# $

connection
ññ 
.
ññ 
Close
ññ  
(
ññ  !
)
ññ! "
;
ññ" #
}
óó 	
internal
©© 
static
©© 
void
©© 
UpdateDataset
©© *
(
©©* +

SqlCommand
©©+ 5
insertCommand
©©6 C
,
©©C D

SqlCommand
©©E O
deleteCommand
©©P ]
,
©©] ^

SqlCommand
©©_ i
updateCommand
©©j w
,
©©w x
DataSet©©y Ä
dataSet©©Å à
,©©à â
string©©ä ê
	tableName©©ë ö
)©©ö õ
{
™™ 	
if
´´ 
(
´´ 
insertCommand
´´ 
==
´´  
null
´´! %
)
´´% &
throw
´´' ,
new
´´- 0#
ArgumentNullException
´´1 F
(
´´F G
$str
´´G V
)
´´V W
;
´´W X
if
¨¨ 
(
¨¨ 
deleteCommand
¨¨ 
==
¨¨  
null
¨¨! %
)
¨¨% &
throw
¨¨' ,
new
¨¨- 0#
ArgumentNullException
¨¨1 F
(
¨¨F G
$str
¨¨G V
)
¨¨V W
;
¨¨W X
if
≠≠ 
(
≠≠ 
updateCommand
≠≠ 
==
≠≠  
null
≠≠! %
)
≠≠% &
throw
≠≠' ,
new
≠≠- 0#
ArgumentNullException
≠≠1 F
(
≠≠F G
$str
≠≠G V
)
≠≠V W
;
≠≠W X
if
ÆÆ 
(
ÆÆ 
	tableName
ÆÆ 
==
ÆÆ 
null
ÆÆ !
||
ÆÆ" $
	tableName
ÆÆ% .
.
ÆÆ. /
Length
ÆÆ/ 5
==
ÆÆ6 8
$num
ÆÆ9 :
)
ÆÆ: ;
throw
ÆÆ< A
new
ÆÆB E#
ArgumentNullException
ÆÆF [
(
ÆÆ[ \
$str
ÆÆ\ g
)
ÆÆg h
;
ÆÆh i
using
±± 
(
±± 
SqlDataAdapter
±± !
dataAdapter
±±" -
=
±±. /
new
±±0 3
SqlDataAdapter
±±4 B
(
±±B C
)
±±C D
)
±±D E
{
≤≤ 
dataAdapter
¥¥ 
.
¥¥ 
UpdateCommand
¥¥ )
=
¥¥* +
updateCommand
¥¥, 9
;
¥¥9 :
dataAdapter
µµ 
.
µµ 
InsertCommand
µµ )
=
µµ* +
insertCommand
µµ, 9
;
µµ9 :
dataAdapter
∂∂ 
.
∂∂ 
DeleteCommand
∂∂ )
=
∂∂* +
deleteCommand
∂∂, 9
;
∂∂9 :
dataAdapter
ππ 
.
ππ 
Update
ππ "
(
ππ" #
dataSet
ππ# *
,
ππ* +
	tableName
ππ, 5
)
ππ5 6
;
ππ6 7
dataSet
ºº 
.
ºº 
AcceptChanges
ºº %
(
ºº% &
)
ºº& '
;
ºº' (
}
ΩΩ 
}
ææ 	
internal
–– 
static
–– 

SqlCommand
–– "
CreateCommand
––# 0
(
––0 1
SqlConnection
––1 >

connection
––? I
,
––I J
string
––K Q
spName
––R X
,
––X Y
params
––Z `
string
––a g
[
––g h
]
––h i
sourceColumns
––j w
)
––w x
{
—— 	
if
““ 
(
““ 

connection
““ 
==
““ 
null
““ "
)
““" #
throw
““$ )
new
““* -#
ArgumentNullException
““. C
(
““C D
$str
““D P
)
““P Q
;
““Q R
if
”” 
(
”” 
spName
”” 
==
”” 
null
”” 
||
”” !
spName
””" (
.
””( )
Length
””) /
==
””0 2
$num
””3 4
)
””4 5
throw
””6 ;
new
””< ?#
ArgumentNullException
””@ U
(
””U V
$str
””V ^
)
””^ _
;
””_ `

SqlCommand
÷÷ 
cmd
÷÷ 
=
÷÷ 
new
÷÷  

SqlCommand
÷÷! +
(
÷÷+ ,
spName
÷÷, 2
,
÷÷2 3

connection
÷÷4 >
)
÷÷> ?
;
÷÷? @
cmd
◊◊ 
.
◊◊ 
CommandType
◊◊ 
=
◊◊ 
CommandType
◊◊ )
.
◊◊) *
StoredProcedure
◊◊* 9
;
◊◊9 :
if
⁄⁄ 
(
⁄⁄ 
sourceColumns
⁄⁄ 
!=
⁄⁄  
null
⁄⁄! %
&&
⁄⁄& (
sourceColumns
⁄⁄) 6
.
⁄⁄6 7
Length
⁄⁄7 =
>
⁄⁄> ?
$num
⁄⁄@ A
)
⁄⁄A B
{
€€ 
SqlParameter
›› 
[
›› 
]
›› 
commandParameters
›› 0
=
››1 2%
SqlHelperParameterCache
››3 J
.
››J K
GetSpParameterSet
››K \
(
››\ ]

connection
››] g
,
››g h
spName
››i o
)
››o p
;
››p q
for
‡‡ 
(
‡‡ 
int
‡‡ 
index
‡‡ 
=
‡‡  
$num
‡‡! "
;
‡‡" #
index
‡‡$ )
<
‡‡* +
sourceColumns
‡‡, 9
.
‡‡9 :
Length
‡‡: @
;
‡‡@ A
index
‡‡B G
++
‡‡G I
)
‡‡I J
commandParameters
·· %
[
··% &
index
··& +
]
··+ ,
.
··, -
SourceColumn
··- 9
=
··: ;
sourceColumns
··< I
[
··I J
index
··J O
]
··O P
;
··P Q
AttachParameters
‰‰  
(
‰‰  !
cmd
‰‰! $
,
‰‰$ %
commandParameters
‰‰& 7
)
‰‰7 8
;
‰‰8 9
}
ÂÂ 
return
ÁÁ 
cmd
ÁÁ 
;
ÁÁ 
}
ËË 	
internal
¯¯ 
static
¯¯ 
int
¯¯ (
ExecuteNonQueryTypedParams
¯¯ 6
(
¯¯6 7
string
¯¯7 =
connectionString
¯¯> N
,
¯¯N O
string
¯¯P V
spName
¯¯W ]
,
¯¯] ^
DataRow
¯¯_ f
dataRow
¯¯g n
)
¯¯n o
{
˘˘ 	
if
˙˙ 
(
˙˙ 
connectionString
˙˙  
==
˙˙! #
null
˙˙$ (
||
˙˙) +
connectionString
˙˙, <
.
˙˙< =
Length
˙˙= C
==
˙˙D F
$num
˙˙G H
)
˙˙H I
throw
˙˙J O
new
˙˙P S#
ArgumentNullException
˙˙T i
(
˙˙i j
$str
˙˙j |
)
˙˙| }
;
˙˙} ~
if
˚˚ 
(
˚˚ 
spName
˚˚ 
==
˚˚ 
null
˚˚ 
||
˚˚ !
spName
˚˚" (
.
˚˚( )
Length
˚˚) /
==
˚˚0 2
$num
˚˚3 4
)
˚˚4 5
throw
˚˚6 ;
new
˚˚< ?#
ArgumentNullException
˚˚@ U
(
˚˚U V
$str
˚˚V ^
)
˚˚^ _
;
˚˚_ `
if
˛˛ 
(
˛˛ 
dataRow
˛˛ 
!=
˛˛ 
null
˛˛ 
&&
˛˛  "
dataRow
˛˛# *
.
˛˛* +
	ItemArray
˛˛+ 4
.
˛˛4 5
Length
˛˛5 ;
>
˛˛< =
$num
˛˛> ?
)
˛˛? @
{
ˇˇ 
SqlParameter
ÅÅ 
[
ÅÅ 
]
ÅÅ 
commandParameters
ÅÅ 0
=
ÅÅ1 2%
SqlHelperParameterCache
ÅÅ3 J
.
ÅÅJ K
GetSpParameterSet
ÅÅK \
(
ÅÅ\ ]
connectionString
ÅÅ] m
,
ÅÅm n
spName
ÅÅo u
)
ÅÅu v
;
ÅÅv w#
AssignParameterValues
ÑÑ %
(
ÑÑ% &
commandParameters
ÑÑ& 7
,
ÑÑ7 8
dataRow
ÑÑ9 @
)
ÑÑ@ A
;
ÑÑA B
return
ÜÜ 
ExecuteNonQuery
ÜÜ &
(
ÜÜ& '
connectionString
ÜÜ' 7
,
ÜÜ7 8
CommandType
ÜÜ9 D
.
ÜÜD E
StoredProcedure
ÜÜE T
,
ÜÜT U
spName
ÜÜV \
,
ÜÜ\ ]
commandParameters
ÜÜ^ o
)
ÜÜo p
;
ÜÜp q
}
áá 
else
àà 
{
ââ 
return
ää 
ExecuteNonQuery
ää &
(
ää& '
connectionString
ää' 7
,
ää7 8
CommandType
ää9 D
.
ääD E
StoredProcedure
ääE T
,
ääT U
spName
ääV \
)
ää\ ]
;
ää] ^
}
ãã 
}
åå 	
internal
òò 
static
òò 
int
òò (
ExecuteNonQueryTypedParams
òò 6
(
òò6 7
SqlConnection
òò7 D

connection
òòE O
,
òòO P
string
òòQ W
spName
òòX ^
,
òò^ _
DataRow
òò` g
dataRow
òòh o
)
òòo p
{
ôô 	
if
öö 
(
öö 

connection
öö 
==
öö 
null
öö "
)
öö" #
throw
öö$ )
new
öö* -#
ArgumentNullException
öö. C
(
ööC D
$str
ööD P
)
ööP Q
;
ööQ R
if
õõ 
(
õõ 
spName
õõ 
==
õõ 
null
õõ 
||
õõ !
spName
õõ" (
.
õõ( )
Length
õõ) /
==
õõ0 2
$num
õõ3 4
)
õõ4 5
throw
õõ6 ;
new
õõ< ?#
ArgumentNullException
õõ@ U
(
õõU V
$str
õõV ^
)
õõ^ _
;
õõ_ `
if
ûû 
(
ûû 
dataRow
ûû 
!=
ûû 
null
ûû 
&&
ûû  "
dataRow
ûû# *
.
ûû* +
	ItemArray
ûû+ 4
.
ûû4 5
Length
ûû5 ;
>
ûû< =
$num
ûû> ?
)
ûû? @
{
üü 
SqlParameter
°° 
[
°° 
]
°° 
commandParameters
°° 0
=
°°1 2%
SqlHelperParameterCache
°°3 J
.
°°J K
GetSpParameterSet
°°K \
(
°°\ ]

connection
°°] g
,
°°g h
spName
°°i o
)
°°o p
;
°°p q#
AssignParameterValues
§§ %
(
§§% &
commandParameters
§§& 7
,
§§7 8
dataRow
§§9 @
)
§§@ A
;
§§A B
return
¶¶ 
ExecuteNonQuery
¶¶ &
(
¶¶& '

connection
¶¶' 1
,
¶¶1 2
CommandType
¶¶3 >
.
¶¶> ?
StoredProcedure
¶¶? N
,
¶¶N O
spName
¶¶P V
,
¶¶V W
commandParameters
¶¶X i
)
¶¶i j
;
¶¶j k
}
ßß 
else
®® 
{
©© 
return
™™ 
ExecuteNonQuery
™™ &
(
™™& '

connection
™™' 1
,
™™1 2
CommandType
™™3 >
.
™™> ?
StoredProcedure
™™? N
,
™™N O
spName
™™P V
)
™™V W
;
™™W X
}
´´ 
}
¨¨ 	
internal
∏∏ 
static
∏∏ 
int
∏∏ (
ExecuteNonQueryTypedParams
∏∏ 6
(
∏∏6 7
SqlTransaction
∏∏7 E
transaction
∏∏F Q
,
∏∏Q R
string
∏∏S Y
spName
∏∏Z `
,
∏∏` a
DataRow
∏∏b i
dataRow
∏∏j q
)
∏∏q r
{
ππ 	
if
∫∫ 
(
∫∫ 
transaction
∫∫ 
==
∫∫ 
null
∫∫ #
)
∫∫# $
throw
∫∫% *
new
∫∫+ .#
ArgumentNullException
∫∫/ D
(
∫∫D E
$str
∫∫E R
)
∫∫R S
;
∫∫S T
if
ªª 
(
ªª 
transaction
ªª 
!=
ªª 
null
ªª #
&&
ªª$ &
transaction
ªª' 2
.
ªª2 3

Connection
ªª3 =
==
ªª> @
null
ªªA E
)
ªªE F
throw
ªªG L
new
ªªM P
ArgumentException
ªªQ b
(
ªªb c
$strªªc ¥
,ªª¥ µ
$strªª∂ √
)ªª√ ƒ
;ªªƒ ≈
if
ºº 
(
ºº 
spName
ºº 
==
ºº 
null
ºº 
||
ºº !
spName
ºº" (
.
ºº( )
Length
ºº) /
==
ºº0 2
$num
ºº3 4
)
ºº4 5
throw
ºº6 ;
new
ºº< ?#
ArgumentNullException
ºº@ U
(
ººU V
$str
ººV ^
)
ºº^ _
;
ºº_ `
if
øø 
(
øø 
dataRow
øø 
!=
øø 
null
øø 
&&
øø  "
dataRow
øø# *
.
øø* +
	ItemArray
øø+ 4
.
øø4 5
Length
øø5 ;
>
øø< =
$num
øø> ?
)
øø? @
{
¿¿ 
SqlParameter
¬¬ 
[
¬¬ 
]
¬¬ 
commandParameters
¬¬ 0
=
¬¬1 2%
SqlHelperParameterCache
¬¬3 J
.
¬¬J K
GetSpParameterSet
¬¬K \
(
¬¬\ ]
transaction
¬¬] h
.
¬¬h i

Connection
¬¬i s
,
¬¬s t
spName
¬¬u {
)
¬¬{ |
;
¬¬| }#
AssignParameterValues
≈≈ %
(
≈≈% &
commandParameters
≈≈& 7
,
≈≈7 8
dataRow
≈≈9 @
)
≈≈@ A
;
≈≈A B
return
«« 
ExecuteNonQuery
«« &
(
««& '
transaction
««' 2
,
««2 3
CommandType
««4 ?
.
««? @
StoredProcedure
««@ O
,
««O P
spName
««Q W
,
««W X
commandParameters
««Y j
)
««j k
;
««k l
}
»» 
else
…… 
{
   
return
ÀÀ 
ExecuteNonQuery
ÀÀ &
(
ÀÀ& '
transaction
ÀÀ' 2
,
ÀÀ2 3
CommandType
ÀÀ4 ?
.
ÀÀ? @
StoredProcedure
ÀÀ@ O
,
ÀÀO P
spName
ÀÀQ W
)
ÀÀW X
;
ÀÀX Y
}
ÃÃ 
}
ÕÕ 	
internal
›› 
static
›› 
DataSet
›› '
ExecuteDatasetTypedParams
››  9
(
››9 :
string
››: @
connectionString
››A Q
,
››Q R
string
››S Y
spName
››Z `
,
››` a
DataRow
››b i
dataRow
››j q
)
››q r
{
ﬁﬁ 	
if
ﬂﬂ 
(
ﬂﬂ 
connectionString
ﬂﬂ  
==
ﬂﬂ! #
null
ﬂﬂ$ (
||
ﬂﬂ) +
connectionString
ﬂﬂ, <
.
ﬂﬂ< =
Length
ﬂﬂ= C
==
ﬂﬂD F
$num
ﬂﬂG H
)
ﬂﬂH I
throw
ﬂﬂJ O
new
ﬂﬂP S#
ArgumentNullException
ﬂﬂT i
(
ﬂﬂi j
$str
ﬂﬂj |
)
ﬂﬂ| }
;
ﬂﬂ} ~
if
‡‡ 
(
‡‡ 
spName
‡‡ 
==
‡‡ 
null
‡‡ 
||
‡‡ !
spName
‡‡" (
.
‡‡( )
Length
‡‡) /
==
‡‡0 2
$num
‡‡3 4
)
‡‡4 5
throw
‡‡6 ;
new
‡‡< ?#
ArgumentNullException
‡‡@ U
(
‡‡U V
$str
‡‡V ^
)
‡‡^ _
;
‡‡_ `
if
„„ 
(
„„ 
dataRow
„„ 
!=
„„ 
null
„„ 
&&
„„  "
dataRow
„„# *
.
„„* +
	ItemArray
„„+ 4
.
„„4 5
Length
„„5 ;
>
„„< =
$num
„„> ?
)
„„? @
{
‰‰ 
SqlParameter
ÊÊ 
[
ÊÊ 
]
ÊÊ 
commandParameters
ÊÊ 0
=
ÊÊ1 2%
SqlHelperParameterCache
ÊÊ3 J
.
ÊÊJ K
GetSpParameterSet
ÊÊK \
(
ÊÊ\ ]
connectionString
ÊÊ] m
,
ÊÊm n
spName
ÊÊo u
)
ÊÊu v
;
ÊÊv w#
AssignParameterValues
ÈÈ %
(
ÈÈ% &
commandParameters
ÈÈ& 7
,
ÈÈ7 8
dataRow
ÈÈ9 @
)
ÈÈ@ A
;
ÈÈA B
return
ÎÎ 
ExecuteDataset
ÎÎ %
(
ÎÎ% &
connectionString
ÎÎ& 6
,
ÎÎ6 7
CommandType
ÎÎ8 C
.
ÎÎC D
StoredProcedure
ÎÎD S
,
ÎÎS T
spName
ÎÎU [
,
ÎÎ[ \
commandParameters
ÎÎ] n
)
ÎÎn o
;
ÎÎo p
}
ÏÏ 
else
ÌÌ 
{
ÓÓ 
return
ÔÔ 
ExecuteDataset
ÔÔ %
(
ÔÔ% &
connectionString
ÔÔ& 6
,
ÔÔ6 7
CommandType
ÔÔ8 C
.
ÔÔC D
StoredProcedure
ÔÔD S
,
ÔÔS T
spName
ÔÔU [
)
ÔÔ[ \
;
ÔÔ\ ]
}
 
}
ÒÒ 	
internal
˝˝ 
static
˝˝ 
DataSet
˝˝ '
ExecuteDatasetTypedParams
˝˝  9
(
˝˝9 :
SqlConnection
˝˝: G

connection
˝˝H R
,
˝˝R S
string
˝˝T Z
spName
˝˝[ a
,
˝˝a b
DataRow
˝˝c j
dataRow
˝˝k r
)
˝˝r s
{
˛˛ 	
if
ˇˇ 
(
ˇˇ 

connection
ˇˇ 
==
ˇˇ 
null
ˇˇ "
)
ˇˇ" #
throw
ˇˇ$ )
new
ˇˇ* -#
ArgumentNullException
ˇˇ. C
(
ˇˇC D
$str
ˇˇD P
)
ˇˇP Q
;
ˇˇQ R
if
ÄÄ 
(
ÄÄ 
spName
ÄÄ 
==
ÄÄ 
null
ÄÄ 
||
ÄÄ !
spName
ÄÄ" (
.
ÄÄ( )
Length
ÄÄ) /
==
ÄÄ0 2
$num
ÄÄ3 4
)
ÄÄ4 5
throw
ÄÄ6 ;
new
ÄÄ< ?#
ArgumentNullException
ÄÄ@ U
(
ÄÄU V
$str
ÄÄV ^
)
ÄÄ^ _
;
ÄÄ_ `
if
ÉÉ 
(
ÉÉ 
dataRow
ÉÉ 
!=
ÉÉ 
null
ÉÉ 
&&
ÉÉ  "
dataRow
ÉÉ# *
.
ÉÉ* +
	ItemArray
ÉÉ+ 4
.
ÉÉ4 5
Length
ÉÉ5 ;
>
ÉÉ< =
$num
ÉÉ> ?
)
ÉÉ? @
{
ÑÑ 
SqlParameter
ÜÜ 
[
ÜÜ 
]
ÜÜ 
commandParameters
ÜÜ 0
=
ÜÜ1 2%
SqlHelperParameterCache
ÜÜ3 J
.
ÜÜJ K
GetSpParameterSet
ÜÜK \
(
ÜÜ\ ]

connection
ÜÜ] g
,
ÜÜg h
spName
ÜÜi o
)
ÜÜo p
;
ÜÜp q#
AssignParameterValues
ââ %
(
ââ% &
commandParameters
ââ& 7
,
ââ7 8
dataRow
ââ9 @
)
ââ@ A
;
ââA B
return
ãã 
ExecuteDataset
ãã %
(
ãã% &

connection
ãã& 0
,
ãã0 1
CommandType
ãã2 =
.
ãã= >
StoredProcedure
ãã> M
,
ããM N
spName
ããO U
,
ããU V
commandParameters
ããW h
)
ããh i
;
ããi j
}
åå 
else
çç 
{
éé 
return
èè 
ExecuteDataset
èè %
(
èè% &

connection
èè& 0
,
èè0 1
CommandType
èè2 =
.
èè= >
StoredProcedure
èè> M
,
èèM N
spName
èèO U
)
èèU V
;
èèV W
}
êê 
}
ëë 	
internal
ùù 
static
ùù 
DataSet
ùù '
ExecuteDatasetTypedParams
ùù  9
(
ùù9 :
SqlTransaction
ùù: H
transaction
ùùI T
,
ùùT U
string
ùùV \
spName
ùù] c
,
ùùc d
DataRow
ùùe l
dataRow
ùùm t
)
ùùt u
{
ûû 	
if
üü 
(
üü 
transaction
üü 
==
üü 
null
üü #
)
üü# $
throw
üü% *
new
üü+ .#
ArgumentNullException
üü/ D
(
üüD E
$str
üüE R
)
üüR S
;
üüS T
if
†† 
(
†† 
transaction
†† 
!=
†† 
null
†† #
&&
††$ &
transaction
††' 2
.
††2 3

Connection
††3 =
==
††> @
null
††A E
)
††E F
throw
††G L
new
††M P
ArgumentException
††Q b
(
††b c
$str††c ¥
,††¥ µ
$str††∂ √
)††√ ƒ
;††ƒ ≈
if
°° 
(
°° 
spName
°° 
==
°° 
null
°° 
||
°° !
spName
°°" (
.
°°( )
Length
°°) /
==
°°0 2
$num
°°3 4
)
°°4 5
throw
°°6 ;
new
°°< ?#
ArgumentNullException
°°@ U
(
°°U V
$str
°°V ^
)
°°^ _
;
°°_ `
if
§§ 
(
§§ 
dataRow
§§ 
!=
§§ 
null
§§ 
&&
§§  "
dataRow
§§# *
.
§§* +
	ItemArray
§§+ 4
.
§§4 5
Length
§§5 ;
>
§§< =
$num
§§> ?
)
§§? @
{
•• 
SqlParameter
ßß 
[
ßß 
]
ßß 
commandParameters
ßß 0
=
ßß1 2%
SqlHelperParameterCache
ßß3 J
.
ßßJ K
GetSpParameterSet
ßßK \
(
ßß\ ]
transaction
ßß] h
.
ßßh i

Connection
ßßi s
,
ßßs t
spName
ßßu {
)
ßß{ |
;
ßß| }#
AssignParameterValues
™™ %
(
™™% &
commandParameters
™™& 7
,
™™7 8
dataRow
™™9 @
)
™™@ A
;
™™A B
return
¨¨ 
ExecuteDataset
¨¨ %
(
¨¨% &
transaction
¨¨& 1
,
¨¨1 2
CommandType
¨¨3 >
.
¨¨> ?
StoredProcedure
¨¨? N
,
¨¨N O
spName
¨¨P V
,
¨¨V W
commandParameters
¨¨X i
)
¨¨i j
;
¨¨j k
}
≠≠ 
else
ÆÆ 
{
ØØ 
return
∞∞ 
ExecuteDataset
∞∞ %
(
∞∞% &
transaction
∞∞& 1
,
∞∞1 2
CommandType
∞∞3 >
.
∞∞> ?
StoredProcedure
∞∞? N
,
∞∞N O
spName
∞∞P V
)
∞∞V W
;
∞∞W X
}
±± 
}
≤≤ 	
internal
¬¬ 
static
¬¬ 
SqlDataReader
¬¬ %&
ExecuteReaderTypedParams
¬¬& >
(
¬¬> ?
string
¬¬? E
connectionString
¬¬F V
,
¬¬V W
string
¬¬X ^
spName
¬¬_ e
,
¬¬e f
DataRow
¬¬g n
dataRow
¬¬o v
)
¬¬v w
{
√√ 	
if
ƒƒ 
(
ƒƒ 
connectionString
ƒƒ  
==
ƒƒ! #
null
ƒƒ$ (
||
ƒƒ) +
connectionString
ƒƒ, <
.
ƒƒ< =
Length
ƒƒ= C
==
ƒƒD F
$num
ƒƒG H
)
ƒƒH I
throw
ƒƒJ O
new
ƒƒP S#
ArgumentNullException
ƒƒT i
(
ƒƒi j
$str
ƒƒj |
)
ƒƒ| }
;
ƒƒ} ~
if
≈≈ 
(
≈≈ 
spName
≈≈ 
==
≈≈ 
null
≈≈ 
||
≈≈ !
spName
≈≈" (
.
≈≈( )
Length
≈≈) /
==
≈≈0 2
$num
≈≈3 4
)
≈≈4 5
throw
≈≈6 ;
new
≈≈< ?#
ArgumentNullException
≈≈@ U
(
≈≈U V
$str
≈≈V ^
)
≈≈^ _
;
≈≈_ `
if
»» 
(
»» 
dataRow
»» 
!=
»» 
null
»» 
&&
»»  "
dataRow
»»# *
.
»»* +
	ItemArray
»»+ 4
.
»»4 5
Length
»»5 ;
>
»»< =
$num
»»> ?
)
»»? @
{
…… 
SqlParameter
ÀÀ 
[
ÀÀ 
]
ÀÀ 
commandParameters
ÀÀ 0
=
ÀÀ1 2%
SqlHelperParameterCache
ÀÀ3 J
.
ÀÀJ K
GetSpParameterSet
ÀÀK \
(
ÀÀ\ ]
connectionString
ÀÀ] m
,
ÀÀm n
spName
ÀÀo u
)
ÀÀu v
;
ÀÀv w#
AssignParameterValues
ŒŒ %
(
ŒŒ% &
commandParameters
ŒŒ& 7
,
ŒŒ7 8
dataRow
ŒŒ9 @
)
ŒŒ@ A
;
ŒŒA B
return
–– 
ExecuteReader
–– $
(
––$ %
connectionString
––% 5
,
––5 6
CommandType
––7 B
.
––B C
StoredProcedure
––C R
,
––R S
spName
––T Z
,
––Z [
commandParameters
––\ m
)
––m n
;
––n o
}
—— 
else
““ 
{
”” 
return
‘‘ 
ExecuteReader
‘‘ $
(
‘‘$ %
connectionString
‘‘% 5
,
‘‘5 6
CommandType
‘‘7 B
.
‘‘B C
StoredProcedure
‘‘C R
,
‘‘R S
spName
‘‘T Z
)
‘‘Z [
;
‘‘[ \
}
’’ 
}
÷÷ 	
internal
‚‚ 
static
‚‚ 
SqlDataReader
‚‚ %&
ExecuteReaderTypedParams
‚‚& >
(
‚‚> ?
SqlConnection
‚‚? L

connection
‚‚M W
,
‚‚W X
string
‚‚Y _
spName
‚‚` f
,
‚‚f g
DataRow
‚‚h o
dataRow
‚‚p w
)
‚‚w x
{
„„ 	
if
‰‰ 
(
‰‰ 

connection
‰‰ 
==
‰‰ 
null
‰‰ "
)
‰‰" #
throw
‰‰$ )
new
‰‰* -#
ArgumentNullException
‰‰. C
(
‰‰C D
$str
‰‰D P
)
‰‰P Q
;
‰‰Q R
if
ÂÂ 
(
ÂÂ 
spName
ÂÂ 
==
ÂÂ 
null
ÂÂ 
||
ÂÂ !
spName
ÂÂ" (
.
ÂÂ( )
Length
ÂÂ) /
==
ÂÂ0 2
$num
ÂÂ3 4
)
ÂÂ4 5
throw
ÂÂ6 ;
new
ÂÂ< ?#
ArgumentNullException
ÂÂ@ U
(
ÂÂU V
$str
ÂÂV ^
)
ÂÂ^ _
;
ÂÂ_ `
if
ËË 
(
ËË 
dataRow
ËË 
!=
ËË 
null
ËË 
&&
ËË  "
dataRow
ËË# *
.
ËË* +
	ItemArray
ËË+ 4
.
ËË4 5
Length
ËË5 ;
>
ËË< =
$num
ËË> ?
)
ËË? @
{
ÈÈ 
SqlParameter
ÎÎ 
[
ÎÎ 
]
ÎÎ 
commandParameters
ÎÎ 0
=
ÎÎ1 2%
SqlHelperParameterCache
ÎÎ3 J
.
ÎÎJ K
GetSpParameterSet
ÎÎK \
(
ÎÎ\ ]

connection
ÎÎ] g
,
ÎÎg h
spName
ÎÎi o
)
ÎÎo p
;
ÎÎp q#
AssignParameterValues
ÓÓ %
(
ÓÓ% &
commandParameters
ÓÓ& 7
,
ÓÓ7 8
dataRow
ÓÓ9 @
)
ÓÓ@ A
;
ÓÓA B
return
 
ExecuteReader
 $
(
$ %

connection
% /
,
/ 0
CommandType
1 <
.
< =
StoredProcedure
= L
,
L M
spName
N T
,
T U
commandParameters
V g
)
g h
;
h i
}
ÒÒ 
else
ÚÚ 
{
ÛÛ 
return
ÙÙ 
ExecuteReader
ÙÙ $
(
ÙÙ$ %

connection
ÙÙ% /
,
ÙÙ/ 0
CommandType
ÙÙ1 <
.
ÙÙ< =
StoredProcedure
ÙÙ= L
,
ÙÙL M
spName
ÙÙN T
)
ÙÙT U
;
ÙÙU V
}
ıı 
}
ˆˆ 	
internal
ÇÇ 
static
ÇÇ 
SqlDataReader
ÇÇ %&
ExecuteReaderTypedParams
ÇÇ& >
(
ÇÇ> ?
SqlTransaction
ÇÇ? M
transaction
ÇÇN Y
,
ÇÇY Z
string
ÇÇ[ a
spName
ÇÇb h
,
ÇÇh i
DataRow
ÇÇj q
dataRow
ÇÇr y
)
ÇÇy z
{
ÉÉ 	
if
ÑÑ 
(
ÑÑ 
transaction
ÑÑ 
==
ÑÑ 
null
ÑÑ #
)
ÑÑ# $
throw
ÑÑ% *
new
ÑÑ+ .#
ArgumentNullException
ÑÑ/ D
(
ÑÑD E
$str
ÑÑE R
)
ÑÑR S
;
ÑÑS T
if
ÖÖ 
(
ÖÖ 
transaction
ÖÖ 
!=
ÖÖ 
null
ÖÖ #
&&
ÖÖ$ &
transaction
ÖÖ' 2
.
ÖÖ2 3

Connection
ÖÖ3 =
==
ÖÖ> @
null
ÖÖA E
)
ÖÖE F
throw
ÖÖG L
new
ÖÖM P
ArgumentException
ÖÖQ b
(
ÖÖb c
$strÖÖc ¥
,ÖÖ¥ µ
$strÖÖ∂ √
)ÖÖ√ ƒ
;ÖÖƒ ≈
if
ÜÜ 
(
ÜÜ 
spName
ÜÜ 
==
ÜÜ 
null
ÜÜ 
||
ÜÜ !
spName
ÜÜ" (
.
ÜÜ( )
Length
ÜÜ) /
==
ÜÜ0 2
$num
ÜÜ3 4
)
ÜÜ4 5
throw
ÜÜ6 ;
new
ÜÜ< ?#
ArgumentNullException
ÜÜ@ U
(
ÜÜU V
$str
ÜÜV ^
)
ÜÜ^ _
;
ÜÜ_ `
if
ââ 
(
ââ 
dataRow
ââ 
!=
ââ 
null
ââ 
&&
ââ  "
dataRow
ââ# *
.
ââ* +
	ItemArray
ââ+ 4
.
ââ4 5
Length
ââ5 ;
>
ââ< =
$num
ââ> ?
)
ââ? @
{
ää 
SqlParameter
åå 
[
åå 
]
åå 
commandParameters
åå 0
=
åå1 2%
SqlHelperParameterCache
åå3 J
.
ååJ K
GetSpParameterSet
ååK \
(
åå\ ]
transaction
åå] h
.
ååh i

Connection
ååi s
,
åås t
spName
ååu {
)
åå{ |
;
åå| }#
AssignParameterValues
èè %
(
èè% &
commandParameters
èè& 7
,
èè7 8
dataRow
èè9 @
)
èè@ A
;
èèA B
return
ëë 
ExecuteReader
ëë $
(
ëë$ %
transaction
ëë% 0
,
ëë0 1
CommandType
ëë2 =
.
ëë= >
StoredProcedure
ëë> M
,
ëëM N
spName
ëëO U
,
ëëU V
commandParameters
ëëW h
)
ëëh i
;
ëëi j
}
íí 
else
ìì 
{
îî 
return
ïï 
ExecuteReader
ïï $
(
ïï$ %
transaction
ïï% 0
,
ïï0 1
CommandType
ïï2 =
.
ïï= >
StoredProcedure
ïï> M
,
ïïM N
spName
ïïO U
)
ïïU V
;
ïïV W
}
ññ 
}
óó 	
internal
ßß 
static
ßß 
object
ßß &
ExecuteScalarTypedParams
ßß 7
(
ßß7 8
string
ßß8 >
connectionString
ßß? O
,
ßßO P
string
ßßQ W
spName
ßßX ^
,
ßß^ _
DataRow
ßß` g
dataRow
ßßh o
)
ßßo p
{
®® 	
if
©© 
(
©© 
connectionString
©©  
==
©©! #
null
©©$ (
||
©©) +
connectionString
©©, <
.
©©< =
Length
©©= C
==
©©D F
$num
©©G H
)
©©H I
throw
©©J O
new
©©P S#
ArgumentNullException
©©T i
(
©©i j
$str
©©j |
)
©©| }
;
©©} ~
if
™™ 
(
™™ 
spName
™™ 
==
™™ 
null
™™ 
||
™™ !
spName
™™" (
.
™™( )
Length
™™) /
==
™™0 2
$num
™™3 4
)
™™4 5
throw
™™6 ;
new
™™< ?#
ArgumentNullException
™™@ U
(
™™U V
$str
™™V ^
)
™™^ _
;
™™_ `
if
≠≠ 
(
≠≠ 
dataRow
≠≠ 
!=
≠≠ 
null
≠≠ 
&&
≠≠  "
dataRow
≠≠# *
.
≠≠* +
	ItemArray
≠≠+ 4
.
≠≠4 5
Length
≠≠5 ;
>
≠≠< =
$num
≠≠> ?
)
≠≠? @
{
ÆÆ 
SqlParameter
∞∞ 
[
∞∞ 
]
∞∞ 
commandParameters
∞∞ 0
=
∞∞1 2%
SqlHelperParameterCache
∞∞3 J
.
∞∞J K
GetSpParameterSet
∞∞K \
(
∞∞\ ]
connectionString
∞∞] m
,
∞∞m n
spName
∞∞o u
)
∞∞u v
;
∞∞v w#
AssignParameterValues
≥≥ %
(
≥≥% &
commandParameters
≥≥& 7
,
≥≥7 8
dataRow
≥≥9 @
)
≥≥@ A
;
≥≥A B
return
µµ 
ExecuteScalar
µµ $
(
µµ$ %
connectionString
µµ% 5
,
µµ5 6
CommandType
µµ7 B
.
µµB C
StoredProcedure
µµC R
,
µµR S
spName
µµT Z
,
µµZ [
commandParameters
µµ\ m
)
µµm n
;
µµn o
}
∂∂ 
else
∑∑ 
{
∏∏ 
return
ππ 
ExecuteScalar
ππ $
(
ππ$ %
connectionString
ππ% 5
,
ππ5 6
CommandType
ππ7 B
.
ππB C
StoredProcedure
ππC R
,
ππR S
spName
ππT Z
)
ππZ [
;
ππ[ \
}
∫∫ 
}
ªª 	
internal
«« 
static
«« 
object
«« &
ExecuteScalarTypedParams
«« 7
(
««7 8
SqlConnection
««8 E

connection
««F P
,
««P Q
string
««R X
spName
««Y _
,
««_ `
DataRow
««a h
dataRow
««i p
)
««p q
{
»» 	
if
…… 
(
…… 

connection
…… 
==
…… 
null
…… "
)
……" #
throw
……$ )
new
……* -#
ArgumentNullException
……. C
(
……C D
$str
……D P
)
……P Q
;
……Q R
if
   
(
   
spName
   
==
   
null
   
||
   !
spName
  " (
.
  ( )
Length
  ) /
==
  0 2
$num
  3 4
)
  4 5
throw
  6 ;
new
  < ?#
ArgumentNullException
  @ U
(
  U V
$str
  V ^
)
  ^ _
;
  _ `
if
ÕÕ 
(
ÕÕ 
dataRow
ÕÕ 
!=
ÕÕ 
null
ÕÕ 
&&
ÕÕ  "
dataRow
ÕÕ# *
.
ÕÕ* +
	ItemArray
ÕÕ+ 4
.
ÕÕ4 5
Length
ÕÕ5 ;
>
ÕÕ< =
$num
ÕÕ> ?
)
ÕÕ? @
{
ŒŒ 
SqlParameter
–– 
[
–– 
]
–– 
commandParameters
–– 0
=
––1 2%
SqlHelperParameterCache
––3 J
.
––J K
GetSpParameterSet
––K \
(
––\ ]

connection
––] g
,
––g h
spName
––i o
)
––o p
;
––p q#
AssignParameterValues
”” %
(
””% &
commandParameters
””& 7
,
””7 8
dataRow
””9 @
)
””@ A
;
””A B
return
’’ 
ExecuteScalar
’’ $
(
’’$ %

connection
’’% /
,
’’/ 0
CommandType
’’1 <
.
’’< =
StoredProcedure
’’= L
,
’’L M
spName
’’N T
,
’’T U
commandParameters
’’V g
)
’’g h
;
’’h i
}
÷÷ 
else
◊◊ 
{
ÿÿ 
return
ŸŸ 
ExecuteScalar
ŸŸ $
(
ŸŸ$ %

connection
ŸŸ% /
,
ŸŸ/ 0
CommandType
ŸŸ1 <
.
ŸŸ< =
StoredProcedure
ŸŸ= L
,
ŸŸL M
spName
ŸŸN T
)
ŸŸT U
;
ŸŸU V
}
⁄⁄ 
}
€€ 	
internal
ÁÁ 
static
ÁÁ 
object
ÁÁ &
ExecuteScalarTypedParams
ÁÁ 7
(
ÁÁ7 8
SqlTransaction
ÁÁ8 F
transaction
ÁÁG R
,
ÁÁR S
string
ÁÁT Z
spName
ÁÁ[ a
,
ÁÁa b
DataRow
ÁÁc j
dataRow
ÁÁk r
)
ÁÁr s
{
ËË 	
if
ÈÈ 
(
ÈÈ 
transaction
ÈÈ 
==
ÈÈ 
null
ÈÈ #
)
ÈÈ# $
throw
ÈÈ% *
new
ÈÈ+ .#
ArgumentNullException
ÈÈ/ D
(
ÈÈD E
$str
ÈÈE R
)
ÈÈR S
;
ÈÈS T
if
ÍÍ 
(
ÍÍ 
transaction
ÍÍ 
!=
ÍÍ 
null
ÍÍ #
&&
ÍÍ$ &
transaction
ÍÍ' 2
.
ÍÍ2 3

Connection
ÍÍ3 =
==
ÍÍ> @
null
ÍÍA E
)
ÍÍE F
throw
ÍÍG L
new
ÍÍM P
ArgumentException
ÍÍQ b
(
ÍÍb c
$strÍÍc ¥
,ÍÍ¥ µ
$strÍÍ∂ √
)ÍÍ√ ƒ
;ÍÍƒ ≈
if
ÎÎ 
(
ÎÎ 
spName
ÎÎ 
==
ÎÎ 
null
ÎÎ 
||
ÎÎ !
spName
ÎÎ" (
.
ÎÎ( )
Length
ÎÎ) /
==
ÎÎ0 2
$num
ÎÎ3 4
)
ÎÎ4 5
throw
ÎÎ6 ;
new
ÎÎ< ?#
ArgumentNullException
ÎÎ@ U
(
ÎÎU V
$str
ÎÎV ^
)
ÎÎ^ _
;
ÎÎ_ `
if
ÓÓ 
(
ÓÓ 
dataRow
ÓÓ 
!=
ÓÓ 
null
ÓÓ 
&&
ÓÓ  "
dataRow
ÓÓ# *
.
ÓÓ* +
	ItemArray
ÓÓ+ 4
.
ÓÓ4 5
Length
ÓÓ5 ;
>
ÓÓ< =
$num
ÓÓ> ?
)
ÓÓ? @
{
ÔÔ 
SqlParameter
ÒÒ 
[
ÒÒ 
]
ÒÒ 
commandParameters
ÒÒ 0
=
ÒÒ1 2%
SqlHelperParameterCache
ÒÒ3 J
.
ÒÒJ K
GetSpParameterSet
ÒÒK \
(
ÒÒ\ ]
transaction
ÒÒ] h
.
ÒÒh i

Connection
ÒÒi s
,
ÒÒs t
spName
ÒÒu {
)
ÒÒ{ |
;
ÒÒ| }#
AssignParameterValues
ÙÙ %
(
ÙÙ% &
commandParameters
ÙÙ& 7
,
ÙÙ7 8
dataRow
ÙÙ9 @
)
ÙÙ@ A
;
ÙÙA B
return
ˆˆ 
ExecuteScalar
ˆˆ $
(
ˆˆ$ %
transaction
ˆˆ% 0
,
ˆˆ0 1
CommandType
ˆˆ2 =
.
ˆˆ= >
StoredProcedure
ˆˆ> M
,
ˆˆM N
spName
ˆˆO U
,
ˆˆU V
commandParameters
ˆˆW h
)
ˆˆh i
;
ˆˆi j
}
˜˜ 
else
¯¯ 
{
˘˘ 
return
˙˙ 
ExecuteScalar
˙˙ $
(
˙˙$ %
transaction
˙˙% 0
,
˙˙0 1
CommandType
˙˙2 =
.
˙˙= >
StoredProcedure
˙˙> M
,
˙˙M N
spName
˙˙O U
)
˙˙U V
;
˙˙V W
}
˚˚ 
}
¸¸ 	
internal
åå 
static
åå 
	XmlReader
åå !)
ExecuteXmlReaderTypedParams
åå" =
(
åå= >
SqlConnection
åå> K

connection
ååL V
,
ååV W
string
ååX ^
spName
åå_ e
,
ååe f
DataRow
ååg n
dataRow
ååo v
)
ååv w
{
çç 	
if
éé 
(
éé 

connection
éé 
==
éé 
null
éé "
)
éé" #
throw
éé$ )
new
éé* -#
ArgumentNullException
éé. C
(
ééC D
$str
ééD P
)
ééP Q
;
ééQ R
if
èè 
(
èè 
spName
èè 
==
èè 
null
èè 
||
èè !
spName
èè" (
.
èè( )
Length
èè) /
==
èè0 2
$num
èè3 4
)
èè4 5
throw
èè6 ;
new
èè< ?#
ArgumentNullException
èè@ U
(
èèU V
$str
èèV ^
)
èè^ _
;
èè_ `
if
íí 
(
íí 
dataRow
íí 
!=
íí 
null
íí 
&&
íí  "
dataRow
íí# *
.
íí* +
	ItemArray
íí+ 4
.
íí4 5
Length
íí5 ;
>
íí< =
$num
íí> ?
)
íí? @
{
ìì 
SqlParameter
ïï 
[
ïï 
]
ïï 
commandParameters
ïï 0
=
ïï1 2%
SqlHelperParameterCache
ïï3 J
.
ïïJ K
GetSpParameterSet
ïïK \
(
ïï\ ]

connection
ïï] g
,
ïïg h
spName
ïïi o
)
ïïo p
;
ïïp q#
AssignParameterValues
òò %
(
òò% &
commandParameters
òò& 7
,
òò7 8
dataRow
òò9 @
)
òò@ A
;
òòA B
return
öö 
ExecuteXmlReader
öö '
(
öö' (

connection
öö( 2
,
öö2 3
CommandType
öö4 ?
.
öö? @
StoredProcedure
öö@ O
,
ööO P
spName
ööQ W
,
ööW X
commandParameters
ööY j
)
ööj k
;
öök l
}
õõ 
else
úú 
{
ùù 
return
ûû 
ExecuteXmlReader
ûû '
(
ûû' (

connection
ûû( 2
,
ûû2 3
CommandType
ûû4 ?
.
ûû? @
StoredProcedure
ûû@ O
,
ûûO P
spName
ûûQ W
)
ûûW X
;
ûûX Y
}
üü 
}
†† 	
internal
¨¨ 
static
¨¨ 
	XmlReader
¨¨ !)
ExecuteXmlReaderTypedParams
¨¨" =
(
¨¨= >
SqlTransaction
¨¨> L
transaction
¨¨M X
,
¨¨X Y
string
¨¨Z `
spName
¨¨a g
,
¨¨g h
DataRow
¨¨i p
dataRow
¨¨q x
)
¨¨x y
{
≠≠ 	
if
ÆÆ 
(
ÆÆ 
transaction
ÆÆ 
==
ÆÆ 
null
ÆÆ #
)
ÆÆ# $
throw
ÆÆ% *
new
ÆÆ+ .#
ArgumentNullException
ÆÆ/ D
(
ÆÆD E
$str
ÆÆE R
)
ÆÆR S
;
ÆÆS T
if
ØØ 
(
ØØ 
transaction
ØØ 
!=
ØØ 
null
ØØ #
&&
ØØ$ &
transaction
ØØ' 2
.
ØØ2 3

Connection
ØØ3 =
==
ØØ> @
null
ØØA E
)
ØØE F
throw
ØØG L
new
ØØM P
ArgumentException
ØØQ b
(
ØØb c
$strØØc ¥
,ØØ¥ µ
$strØØ∂ √
)ØØ√ ƒ
;ØØƒ ≈
if
∞∞ 
(
∞∞ 
spName
∞∞ 
==
∞∞ 
null
∞∞ 
||
∞∞ !
spName
∞∞" (
.
∞∞( )
Length
∞∞) /
==
∞∞0 2
$num
∞∞3 4
)
∞∞4 5
throw
∞∞6 ;
new
∞∞< ?#
ArgumentNullException
∞∞@ U
(
∞∞U V
$str
∞∞V ^
)
∞∞^ _
;
∞∞_ `
if
≥≥ 
(
≥≥ 
dataRow
≥≥ 
!=
≥≥ 
null
≥≥ 
&&
≥≥  "
dataRow
≥≥# *
.
≥≥* +
	ItemArray
≥≥+ 4
.
≥≥4 5
Length
≥≥5 ;
>
≥≥< =
$num
≥≥> ?
)
≥≥? @
{
¥¥ 
SqlParameter
∂∂ 
[
∂∂ 
]
∂∂ 
commandParameters
∂∂ 0
=
∂∂1 2%
SqlHelperParameterCache
∂∂3 J
.
∂∂J K
GetSpParameterSet
∂∂K \
(
∂∂\ ]
transaction
∂∂] h
.
∂∂h i

Connection
∂∂i s
,
∂∂s t
spName
∂∂u {
)
∂∂{ |
;
∂∂| }#
AssignParameterValues
ππ %
(
ππ% &
commandParameters
ππ& 7
,
ππ7 8
dataRow
ππ9 @
)
ππ@ A
;
ππA B
return
ªª 
ExecuteXmlReader
ªª '
(
ªª' (
transaction
ªª( 3
,
ªª3 4
CommandType
ªª5 @
.
ªª@ A
StoredProcedure
ªªA P
,
ªªP Q
spName
ªªR X
,
ªªX Y
commandParameters
ªªZ k
)
ªªk l
;
ªªl m
}
ºº 
else
ΩΩ 
{
ææ 
return
øø 
ExecuteXmlReader
øø '
(
øø' (
transaction
øø( 3
,
øø3 4
CommandType
øø5 @
.
øø@ A
StoredProcedure
øøA P
,
øøP Q
spName
øøR X
)
øøX Y
;
øøY Z
}
¿¿ 
}
¡¡ 	
}
ƒƒ 
internal
   
sealed
   
class
   %
SqlHelperParameterCache
   1
{
ÀÀ 
private
–– %
SqlHelperParameterCache
–– '
(
––' (
)
––( )
{
––* +
}
––, -
private
““ 
static
““ 
	Hashtable
““  

paramCache
““! +
=
““, -
	Hashtable
““. 7
.
““7 8
Synchronized
““8 D
(
““D E
new
““E H
	Hashtable
““I R
(
““R S
)
““S T
)
““T U
;
““U V
private
€€ 
static
€€ 
SqlParameter
€€ #
[
€€# $
]
€€$ %$
DiscoverSpParameterSet
€€& <
(
€€< =
SqlConnection
€€= J

connection
€€K U
,
€€U V
string
€€W ]
spName
€€^ d
,
€€d e
bool
€€f j*
includeReturnValueParameter€€k Ü
)€€Ü á
{
‹‹ 	
if
›› 
(
›› 

connection
›› 
==
›› 
null
›› "
)
››" #
throw
››$ )
new
››* -#
ArgumentNullException
››. C
(
››C D
$str
››D P
)
››P Q
;
››Q R
if
ﬁﬁ 
(
ﬁﬁ 
spName
ﬁﬁ 
==
ﬁﬁ 
null
ﬁﬁ 
||
ﬁﬁ !
spName
ﬁﬁ" (
.
ﬁﬁ( )
Length
ﬁﬁ) /
==
ﬁﬁ0 2
$num
ﬁﬁ3 4
)
ﬁﬁ4 5
throw
ﬁﬁ6 ;
new
ﬁﬁ< ?#
ArgumentNullException
ﬁﬁ@ U
(
ﬁﬁU V
$str
ﬁﬁV ^
)
ﬁﬁ^ _
;
ﬁﬁ_ `

SqlCommand
‡‡ 
cmd
‡‡ 
=
‡‡ 
new
‡‡  

SqlCommand
‡‡! +
(
‡‡+ ,
spName
‡‡, 2
,
‡‡2 3

connection
‡‡4 >
)
‡‡> ?
;
‡‡? @
cmd
·· 
.
·· 
CommandType
·· 
=
·· 
CommandType
·· )
.
··) *
StoredProcedure
··* 9
;
··9 :

connection
„„ 
.
„„ 
Open
„„ 
(
„„ 
)
„„ 
;
„„ 
SqlCommandBuilder
‰‰ 
.
‰‰ 
DeriveParameters
‰‰ .
(
‰‰. /
cmd
‰‰/ 2
)
‰‰2 3
;
‰‰3 4

connection
ÂÂ 
.
ÂÂ 
Close
ÂÂ 
(
ÂÂ 
)
ÂÂ 
;
ÂÂ 
if
ÁÁ 
(
ÁÁ 
!
ÁÁ )
includeReturnValueParameter
ÁÁ ,
)
ÁÁ, -
{
ËË 
cmd
ÈÈ 
.
ÈÈ 

Parameters
ÈÈ 
.
ÈÈ 
RemoveAt
ÈÈ '
(
ÈÈ' (
$num
ÈÈ( )
)
ÈÈ) *
;
ÈÈ* +
}
ÍÍ 
SqlParameter
ÏÏ 
[
ÏÏ 
]
ÏÏ "
discoveredParameters
ÏÏ /
=
ÏÏ0 1
new
ÏÏ2 5
SqlParameter
ÏÏ6 B
[
ÏÏB C
cmd
ÏÏC F
.
ÏÏF G

Parameters
ÏÏG Q
.
ÏÏQ R
Count
ÏÏR W
]
ÏÏW X
;
ÏÏX Y
cmd
ÓÓ 
.
ÓÓ 

Parameters
ÓÓ 
.
ÓÓ 
CopyTo
ÓÓ !
(
ÓÓ! ""
discoveredParameters
ÓÓ" 6
,
ÓÓ6 7
$num
ÓÓ8 9
)
ÓÓ9 :
;
ÓÓ: ;
foreach
ÒÒ 
(
ÒÒ 
SqlParameter
ÒÒ !!
discoveredParameter
ÒÒ" 5
in
ÒÒ6 8"
discoveredParameters
ÒÒ9 M
)
ÒÒM N
{
ÚÚ !
discoveredParameter
ÛÛ #
.
ÛÛ# $
Value
ÛÛ$ )
=
ÛÛ* +
DBNull
ÛÛ, 2
.
ÛÛ2 3
Value
ÛÛ3 8
;
ÛÛ8 9
}
ÙÙ 
return
ıı "
discoveredParameters
ıı '
;
ıı' (
}
ˆˆ 	
private
˝˝ 
static
˝˝ 
SqlParameter
˝˝ #
[
˝˝# $
]
˝˝$ %
CloneParameters
˝˝& 5
(
˝˝5 6
SqlParameter
˝˝6 B
[
˝˝B C
]
˝˝C D 
originalParameters
˝˝E W
)
˝˝W X
{
˛˛ 	
SqlParameter
ˇˇ 
[
ˇˇ 
]
ˇˇ 
clonedParameters
ˇˇ +
=
ˇˇ, -
new
ˇˇ. 1
SqlParameter
ˇˇ2 >
[
ˇˇ> ? 
originalParameters
ˇˇ? Q
.
ˇˇQ R
Length
ˇˇR X
]
ˇˇX Y
;
ˇˇY Z
for
ÅÅ 
(
ÅÅ 
int
ÅÅ 
i
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
,
ÅÅ 
j
ÅÅ 
=
ÅÅ  
originalParameters
ÅÅ  2
.
ÅÅ2 3
Length
ÅÅ3 9
;
ÅÅ9 :
i
ÅÅ; <
<
ÅÅ= >
j
ÅÅ? @
;
ÅÅ@ A
i
ÅÅB C
++
ÅÅC E
)
ÅÅE F
{
ÇÇ 
clonedParameters
ÉÉ  
[
ÉÉ  !
i
ÉÉ! "
]
ÉÉ" #
=
ÉÉ$ %
(
ÉÉ& '
SqlParameter
ÉÉ' 3
)
ÉÉ3 4
(
ÉÉ4 5
(
ÉÉ5 6

ICloneable
ÉÉ6 @
)
ÉÉ@ A 
originalParameters
ÉÉA S
[
ÉÉS T
i
ÉÉT U
]
ÉÉU V
)
ÉÉV W
.
ÉÉW X
Clone
ÉÉX ]
(
ÉÉ] ^
)
ÉÉ^ _
;
ÉÉ_ `
}
ÑÑ 
return
ÜÜ 
clonedParameters
ÜÜ #
;
ÜÜ# $
}
áá 	
internal
ìì 
static
ìì 
void
ìì 
CacheParameterSet
ìì .
(
ìì. /
string
ìì/ 5
connectionString
ìì6 F
,
ììF G
string
ììH N
commandText
ììO Z
,
ììZ [
params
ìì\ b
SqlParameter
ììc o
[
ììo p
]
ììp q 
commandParametersììr É
)ììÉ Ñ
{
îî 	
if
ïï 
(
ïï 
connectionString
ïï  
==
ïï! #
null
ïï$ (
||
ïï) +
connectionString
ïï, <
.
ïï< =
Length
ïï= C
==
ïïD F
$num
ïïG H
)
ïïH I
throw
ïïJ O
new
ïïP S#
ArgumentNullException
ïïT i
(
ïïi j
$str
ïïj |
)
ïï| }
;
ïï} ~
if
ññ 
(
ññ 
commandText
ññ 
==
ññ 
null
ññ #
||
ññ$ &
commandText
ññ' 2
.
ññ2 3
Length
ññ3 9
==
ññ: <
$num
ññ= >
)
ññ> ?
throw
ññ@ E
new
ññF I#
ArgumentNullException
ññJ _
(
ññ_ `
$str
ññ` m
)
ññm n
;
ññn o
string
òò 
hashKey
òò 
=
òò 
connectionString
òò -
+
òò. /
$str
òò0 3
+
òò4 5
commandText
òò6 A
;
òòA B

paramCache
öö 
[
öö 
hashKey
öö 
]
öö 
=
öö  !
commandParameters
öö" 3
;
öö3 4
}
õõ 	
internal
££ 
static
££ 
SqlParameter
££ $
[
££$ %
]
££% &#
GetCachedParameterSet
££' <
(
££< =
string
££= C
connectionString
££D T
,
££T U
string
££V \
commandText
££] h
)
££h i
{
§§ 	
if
•• 
(
•• 
connectionString
••  
==
••! #
null
••$ (
||
••) +
connectionString
••, <
.
••< =
Length
••= C
==
••D F
$num
••G H
)
••H I
throw
••J O
new
••P S#
ArgumentNullException
••T i
(
••i j
$str
••j |
)
••| }
;
••} ~
if
¶¶ 
(
¶¶ 
commandText
¶¶ 
==
¶¶ 
null
¶¶ #
||
¶¶$ &
commandText
¶¶' 2
.
¶¶2 3
Length
¶¶3 9
==
¶¶: <
$num
¶¶= >
)
¶¶> ?
throw
¶¶@ E
new
¶¶F I#
ArgumentNullException
¶¶J _
(
¶¶_ `
$str
¶¶` m
)
¶¶m n
;
¶¶n o
string
®® 
hashKey
®® 
=
®® 
connectionString
®® -
+
®®. /
$str
®®0 3
+
®®4 5
commandText
®®6 A
;
®®A B
SqlParameter
™™ 
[
™™ 
]
™™ 
cachedParameters
™™ +
=
™™, -

paramCache
™™. 8
[
™™8 9
hashKey
™™9 @
]
™™@ A
as
™™B D
SqlParameter
™™E Q
[
™™Q R
]
™™R S
;
™™S T
if
´´ 
(
´´ 
cachedParameters
´´  
==
´´! #
null
´´$ (
)
´´( )
{
¨¨ 
return
≠≠ 
null
≠≠ 
;
≠≠ 
}
ÆÆ 
else
ØØ 
{
∞∞ 
return
±± 
CloneParameters
±± &
(
±±& '
cachedParameters
±±' 7
)
±±7 8
;
±±8 9
}
≤≤ 
}
≥≥ 	
internal
¬¬ 
static
¬¬ 
SqlParameter
¬¬ $
[
¬¬$ %
]
¬¬% &
GetSpParameterSet
¬¬' 8
(
¬¬8 9
string
¬¬9 ?
connectionString
¬¬@ P
,
¬¬P Q
string
¬¬R X
spName
¬¬Y _
)
¬¬_ `
{
√√ 	
return
ƒƒ 
GetSpParameterSet
ƒƒ $
(
ƒƒ$ %
connectionString
ƒƒ% 5
,
ƒƒ5 6
spName
ƒƒ7 =
,
ƒƒ= >
false
ƒƒ? D
)
ƒƒD E
;
ƒƒE F
}
≈≈ 	
internal
—— 
static
—— 
SqlParameter
—— $
[
——$ %
]
——% &
GetSpParameterSet
——' 8
(
——8 9
string
——9 ?
connectionString
——@ P
,
——P Q
string
——R X
spName
——Y _
,
——_ `
bool
——a e*
includeReturnValueParameter——f Å
)——Å Ç
{
““ 	
if
”” 
(
”” 
connectionString
””  
==
””! #
null
””$ (
||
””) +
connectionString
””, <
.
””< =
Length
””= C
==
””D F
$num
””G H
)
””H I
throw
””J O
new
””P S#
ArgumentNullException
””T i
(
””i j
$str
””j |
)
””| }
;
””} ~
if
‘‘ 
(
‘‘ 
spName
‘‘ 
==
‘‘ 
null
‘‘ 
||
‘‘ !
spName
‘‘" (
.
‘‘( )
Length
‘‘) /
==
‘‘0 2
$num
‘‘3 4
)
‘‘4 5
throw
‘‘6 ;
new
‘‘< ?#
ArgumentNullException
‘‘@ U
(
‘‘U V
$str
‘‘V ^
)
‘‘^ _
;
‘‘_ `
	SqlHelper
÷÷ 
.
÷÷ $
clearSQLPoolConnection
÷÷ ,
(
÷÷, -
)
÷÷- .
;
÷÷. /
using
◊◊ 
(
◊◊ 
SqlConnection
◊◊  

connection
◊◊! +
=
◊◊, -
new
◊◊. 1
SqlConnection
◊◊2 ?
(
◊◊? @
connectionString
◊◊@ P
)
◊◊P Q
)
◊◊Q R
{
ÿÿ 
return
ŸŸ '
GetSpParameterSetInternal
ŸŸ 0
(
ŸŸ0 1

connection
ŸŸ1 ;
,
ŸŸ; <
spName
ŸŸ= C
,
ŸŸC D)
includeReturnValueParameter
ŸŸE `
)
ŸŸ` a
;
ŸŸa b
}
⁄⁄ 
}
€€ 	
internal
ÊÊ 
static
ÊÊ 
SqlParameter
ÊÊ $
[
ÊÊ$ %
]
ÊÊ% &
GetSpParameterSet
ÊÊ' 8
(
ÊÊ8 9
SqlConnection
ÊÊ9 F

connection
ÊÊG Q
,
ÊÊQ R
string
ÊÊS Y
spName
ÊÊZ `
)
ÊÊ` a
{
ÁÁ 	
return
ËË 
GetSpParameterSet
ËË $
(
ËË$ %

connection
ËË% /
,
ËË/ 0
spName
ËË1 7
,
ËË7 8
false
ËË9 >
)
ËË> ?
;
ËË? @
}
ÈÈ 	
internal
ıı 
static
ıı 
SqlParameter
ıı $
[
ıı$ %
]
ıı% &
GetSpParameterSet
ıı' 8
(
ıı8 9
SqlConnection
ıı9 F

connection
ııG Q
,
ııQ R
string
ııS Y
spName
ııZ `
,
ıı` a
bool
ııb f*
includeReturnValueParameterııg Ç
)ııÇ É
{
ˆˆ 	
if
˜˜ 
(
˜˜ 

connection
˜˜ 
==
˜˜ 
null
˜˜ "
)
˜˜" #
throw
˜˜$ )
new
˜˜* -#
ArgumentNullException
˜˜. C
(
˜˜C D
$str
˜˜D P
)
˜˜P Q
;
˜˜Q R
using
˘˘ 
(
˘˘ 
SqlConnection
˘˘  
clonedConnection
˘˘! 1
=
˘˘2 3
(
˘˘4 5
SqlConnection
˘˘5 B
)
˘˘B C
(
˘˘C D
(
˘˘D E

ICloneable
˘˘E O
)
˘˘O P

connection
˘˘P Z
)
˘˘Z [
.
˘˘[ \
Clone
˘˘\ a
(
˘˘a b
)
˘˘b c
)
˘˘c d
{
˙˙ 
return
˚˚ '
GetSpParameterSetInternal
˚˚ 0
(
˚˚0 1
clonedConnection
˚˚1 A
,
˚˚A B
spName
˚˚C I
,
˚˚I J)
includeReturnValueParameter
˚˚K f
)
˚˚f g
;
˚˚g h
}
¸¸ 
}
˝˝ 	
private
ÜÜ 
static
ÜÜ 
SqlParameter
ÜÜ #
[
ÜÜ# $
]
ÜÜ$ %'
GetSpParameterSetInternal
ÜÜ& ?
(
ÜÜ? @
SqlConnection
ÜÜ@ M

connection
ÜÜN X
,
ÜÜX Y
string
ÜÜZ `
spName
ÜÜa g
,
ÜÜg h
bool
ÜÜi m*
includeReturnValueParameterÜÜn â
)ÜÜâ ä
{
áá 	
if
àà 
(
àà 

connection
àà 
==
àà 
null
àà "
)
àà" #
throw
àà$ )
new
àà* -#
ArgumentNullException
àà. C
(
ààC D
$str
ààD P
)
ààP Q
;
ààQ R
if
ââ 
(
ââ 
spName
ââ 
==
ââ 
null
ââ 
||
ââ !
spName
ââ" (
.
ââ( )
Length
ââ) /
==
ââ0 2
$num
ââ3 4
)
ââ4 5
throw
ââ6 ;
new
ââ< ?#
ArgumentNullException
ââ@ U
(
ââU V
$str
ââV ^
)
ââ^ _
;
ââ_ `
string
ãã 
hashKey
ãã 
=
ãã 

connection
ãã '
.
ãã' (
ConnectionString
ãã( 8
+
ãã9 :
$str
ãã; >
+
ãã? @
spName
ããA G
+
ããH I
(
ããJ K)
includeReturnValueParameter
ããK f
?
ããg h
$strããi â
:ããä ã
$strããå é
)ããé è
;ããè ê
SqlParameter
çç 
[
çç 
]
çç 
cachedParameters
çç +
;
çç+ ,
cachedParameters
èè 
=
èè 

paramCache
èè )
[
èè) *
hashKey
èè* 1
]
èè1 2
as
èè3 5
SqlParameter
èè6 B
[
èèB C
]
èèC D
;
èèD E
if
êê 
(
êê 
cachedParameters
êê  
==
êê! #
null
êê$ (
)
êê( )
{
ëë 
SqlParameter
íí 
[
íí 
]
íí 
spParameters
íí +
=
íí, -$
DiscoverSpParameterSet
íí. D
(
ííD E

connection
ííE O
,
ííO P
spName
ííQ W
,
ííW X)
includeReturnValueParameter
ííY t
)
íít u
;
ííu v

paramCache
ìì 
[
ìì 
hashKey
ìì "
]
ìì" #
=
ìì$ %
spParameters
ìì& 2
;
ìì2 3
cachedParameters
îî  
=
îî! "
spParameters
îî# /
;
îî/ 0
}
ïï 
return
óó 
CloneParameters
óó "
(
óó" #
cachedParameters
óó# 3
)
óó3 4
;
óó4 5
}
òò 	
}
õõ 
}úú 